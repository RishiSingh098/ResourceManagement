{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"client/radarChart.js","filenameRelative":"client/radarChart.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"client/radarChart.js.map","sourceFileName":"client/radarChart.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"radarChart"},"ignored":false,"code":"function RadarChart(id, data, options) {\n\tvar cfg = {\n\t\tw: 600,\n\t\t//Width of the circle\n\t\th: 600,\n\t\t//Height of the circle\n\t\tmargin: {\n\t\t\ttop: 20,\n\t\t\tright: 20,\n\t\t\tbottom: 20,\n\t\t\tleft: 20\n\t\t},\n\t\t//The margins of the SVG\n\t\tlevels: 3,\n\t\t//How many levels or inner circles should there be drawn\n\t\tmaxValue: 0,\n\t\t//What is the value that the biggest circle will represent\n\t\tlabelFactor: 1.25,\n\t\t//How much farther than the radius of the outer circle should the labels be placed\n\t\twrapWidth: 60,\n\t\t//The number of pixels after which a label needs to be given a new line\n\t\topacityArea: 0.35,\n\t\t//The opacity of the area of the blob\n\t\tdotRadius: 4,\n\t\t//The size of the colored circles of each blog\n\t\topacityCircles: 0.1,\n\t\t//The opacity of the circles of each blob\n\t\tstrokeWidth: 2,\n\t\t//The width of the stroke around each blob\n\t\troundStrokes: false,\n\t\t//If true the area and stroke will follow a round path (cardinal-closed)\n\t\tcolor: d3.scaleOrdinal(d3.schemeCategory10)\n\t}; //Put all of the options into a variable called cfg\n\n\tif ('undefined' !== typeof options) {\n\t\tfor (var i in meteorBabelHelpers.sanitizeForInObject(options)) {\n\t\t\tif ('undefined' !== typeof options[i]) {\n\t\t\t\tcfg[i] = options[i];\n\t\t\t}\n\t\t} //for i\n\n\t} //if\n\t//If the supplied maxValue is smaller than the actual one, replace by the max in the data\n\n\n\tvar maxValue = Math.max(cfg.maxValue, d3.max(data, function (i) {\n\t\treturn d3.max(i.map(function (o) {\n\t\t\treturn o.value;\n\t\t}));\n\t}));\n\tvar allAxis = data[0].map(function (i, j) {\n\t\treturn i.axis;\n\t}),\n\t    //Names of each axis\n\ttotal = allAxis.length,\n\t    //The number of different axes\n\tradius = Math.min(cfg.w / 2, cfg.h / 2),\n\t    //Radius of the outermost circle\n\tFormat = d3.format('%'),\n\t    //Percentage formatting\n\tangleSlice = Math.PI * 2 / total; //The width in radians of each \"slice\"\n\t//Scale for the radius\n\n\tvar rScale = d3.scale.linear().range([0, radius]).domain([0, maxValue]); /////////////////////////////////////////////////////////\n\t//////////// Create the container SVG and g /////////////\n\t/////////////////////////////////////////////////////////\n\t//Remove whatever chart with the same id/class was present before\n\n\td3.select(id).select(\"svg\").remove(); //Initiate the radar chart SVG\n\n\tvar svg = d3.select(id).append(\"svg\").attr(\"width\", cfg.w + cfg.margin.left + cfg.margin.right).attr(\"height\", cfg.h + cfg.margin.top + cfg.margin.bottom).attr(\"class\", \"radar\" + id); //Append a g element\n\n\tvar g = svg.append(\"g\").attr(\"transform\", \"translate(\" + (cfg.w / 2 + cfg.margin.left) + \",\" + (cfg.h / 2 + cfg.margin.top) + \")\"); /////////////////////////////////////////////////////////\n\t////////// Glow filter for some extra pizzazz ///////////\n\t/////////////////////////////////////////////////////////\n\t//Filter for the outside glow\n\n\tvar filter = g.append('defs').append('filter').attr('id', 'glow'),\n\t    feGaussianBlur = filter.append('feGaussianBlur').attr('stdDeviation', '2.5').attr('result', 'coloredBlur'),\n\t    feMerge = filter.append('feMerge'),\n\t    feMergeNode_1 = feMerge.append('feMergeNode').attr('in', 'coloredBlur'),\n\t    feMergeNode_2 = feMerge.append('feMergeNode').attr('in', 'SourceGraphic'); /////////////////////////////////////////////////////////\n\t/////////////// Draw the Circular grid //////////////////\n\t/////////////////////////////////////////////////////////\n\t//Wrapper for the grid & axes\n\n\tvar axisGrid = g.append(\"g\").attr(\"class\", \"axisWrapper\"); //Draw the background circles\n\n\taxisGrid.selectAll(\".levels\").data(d3.range(1, cfg.levels + 1).reverse()).enter().append(\"circle\").attr(\"class\", \"gridCircle\").attr(\"r\", function (d, i) {\n\t\treturn radius / cfg.levels * d;\n\t}).style(\"fill\", \"#CDCDCD\").style(\"stroke\", \"#CDCDCD\").style(\"fill-opacity\", cfg.opacityCircles).style(\"filter\", \"url(#glow)\"); //Text indicating at what % each level is\n\n\taxisGrid.selectAll(\".axisLabel\").data(d3.range(1, cfg.levels + 1).reverse()).enter().append(\"text\").attr(\"class\", \"axisLabel\").attr(\"x\", 4).attr(\"y\", function (d) {\n\t\treturn -d * radius / cfg.levels;\n\t}).attr(\"dy\", \"0.4em\").style(\"font-size\", \"10px\").attr(\"fill\", \"#737373\").text(function (d, i) {\n\t\treturn Format(maxValue * d / cfg.levels);\n\t}); /////////////////////////////////////////////////////////\n\t//////////////////// Draw the axes //////////////////////\n\t/////////////////////////////////////////////////////////\n\t//Create the straight lines radiating outward from the center\n\n\tvar axis = axisGrid.selectAll(\".axis\").data(allAxis).enter().append(\"g\").attr(\"class\", \"axis\"); //Append the lines\n\n\taxis.append(\"line\").attr(\"x1\", 0).attr(\"y1\", 0).attr(\"x2\", function (d, i) {\n\t\treturn rScale(maxValue * 1.1) * Math.cos(angleSlice * i - Math.PI / 2);\n\t}).attr(\"y2\", function (d, i) {\n\t\treturn rScale(maxValue * 1.1) * Math.sin(angleSlice * i - Math.PI / 2);\n\t}).attr(\"class\", \"line\").style(\"stroke\", \"white\").style(\"stroke-width\", \"2px\"); //Append the labels at each axis\n\n\taxis.append(\"text\").attr(\"class\", \"legend\").style(\"font-size\", \"11px\").attr(\"text-anchor\", \"middle\").attr(\"dy\", \"0.35em\").attr(\"x\", function (d, i) {\n\t\treturn rScale(maxValue * cfg.labelFactor) * Math.cos(angleSlice * i - Math.PI / 2);\n\t}).attr(\"y\", function (d, i) {\n\t\treturn rScale(maxValue * cfg.labelFactor) * Math.sin(angleSlice * i - Math.PI / 2);\n\t}).text(function (d) {\n\t\treturn d;\n\t}).call(wrap, cfg.wrapWidth); /////////////////////////////////////////////////////////\n\t///////////// Draw the radar chart blobs ////////////////\n\t/////////////////////////////////////////////////////////\n\t//The radial line function\n\n\tvar radarLine = d3.svg.line.radial().interpolate(\"linear-closed\").radius(function (d) {\n\t\treturn rScale(d.value);\n\t}).angle(function (d, i) {\n\t\treturn i * angleSlice;\n\t});\n\n\tif (cfg.roundStrokes) {\n\t\tradarLine.interpolate(\"cardinal-closed\");\n\t} //Create a wrapper for the blobs\n\n\n\tvar blobWrapper = g.selectAll(\".radarWrapper\").data(data).enter().append(\"g\").attr(\"class\", \"radarWrapper\"); //Append the backgrounds\n\n\tblobWrapper.append(\"path\").attr(\"class\", \"radarArea\").attr(\"d\", function (d, i) {\n\t\treturn radarLine(d);\n\t}).style(\"fill\", function (d, i) {\n\t\treturn cfg.color(i);\n\t}).style(\"fill-opacity\", cfg.opacityArea).on('mouseover', function (d, i) {\n\t\t//Dim all blobs\n\t\td3.selectAll(\".radarArea\").transition().duration(200).style(\"fill-opacity\", 0.1); //Bring back the hovered over blob\n\n\t\td3.select(this).transition().duration(200).style(\"fill-opacity\", 0.7);\n\t}).on('mouseout', function () {\n\t\t//Bring back all blobs\n\t\td3.selectAll(\".radarArea\").transition().duration(200).style(\"fill-opacity\", cfg.opacityArea);\n\t}); //Create the outlines\n\n\tblobWrapper.append(\"path\").attr(\"class\", \"radarStroke\").attr(\"d\", function (d, i) {\n\t\treturn radarLine(d);\n\t}).style(\"stroke-width\", cfg.strokeWidth + \"px\").style(\"stroke\", function (d, i) {\n\t\treturn cfg.color(i);\n\t}).style(\"fill\", \"none\").style(\"filter\", \"url(#glow)\"); //Append the circles\n\n\tblobWrapper.selectAll(\".radarCircle\").data(function (d, i) {\n\t\treturn d;\n\t}).enter().append(\"circle\").attr(\"class\", \"radarCircle\").attr(\"r\", cfg.dotRadius).attr(\"cx\", function (d, i) {\n\t\treturn rScale(d.value) * Math.cos(angleSlice * i - Math.PI / 2);\n\t}).attr(\"cy\", function (d, i) {\n\t\treturn rScale(d.value) * Math.sin(angleSlice * i - Math.PI / 2);\n\t}).style(\"fill\", function (d, i, j) {\n\t\treturn cfg.color(j);\n\t}).style(\"fill-opacity\", 0.8); /////////////////////////////////////////////////////////\n\t//////// Append invisible circles for tooltip ///////////\n\t/////////////////////////////////////////////////////////\n\t//Wrapper for the invisible circles on top\n\n\tvar blobCircleWrapper = g.selectAll(\".radarCircleWrapper\").data(data).enter().append(\"g\").attr(\"class\", \"radarCircleWrapper\"); //Append a set of invisible circles on top for the mouseover pop-up\n\n\tblobCircleWrapper.selectAll(\".radarInvisibleCircle\").data(function (d, i) {\n\t\treturn d;\n\t}).enter().append(\"circle\").attr(\"class\", \"radarInvisibleCircle\").attr(\"r\", cfg.dotRadius * 1.5).attr(\"cx\", function (d, i) {\n\t\treturn rScale(d.value) * Math.cos(angleSlice * i - Math.PI / 2);\n\t}).attr(\"cy\", function (d, i) {\n\t\treturn rScale(d.value) * Math.sin(angleSlice * i - Math.PI / 2);\n\t}).style(\"fill\", \"none\").style(\"pointer-events\", \"all\").on(\"mouseover\", function (d, i) {\n\t\tnewX = parseFloat(d3.select(this).attr('cx')) - 10;\n\t\tnewY = parseFloat(d3.select(this).attr('cy')) - 10;\n\t\ttooltip.attr('x', newX).attr('y', newY).text(Format(d.value)).transition().duration(200).style('opacity', 1);\n\t}).on(\"mouseout\", function () {\n\t\ttooltip.transition().duration(200).style(\"opacity\", 0);\n\t}); //Set up the small tooltip for when you hover over a circle\n\n\tvar tooltip = g.append(\"text\").attr(\"class\", \"tooltip\").style(\"opacity\", 0); /////////////////////////////////////////////////////////\n\t/////////////////// Helper Function /////////////////////\n\t/////////////////////////////////////////////////////////\n\t//Taken from http://bl.ocks.org/mbostock/7555321\n\t//Wraps SVG text\n\n\tfunction wrap(text, width) {\n\t\ttext.each(function () {\n\t\t\tvar text = d3.select(this),\n\t\t\t    words = text.text().split(/\\s+/).reverse(),\n\t\t\t    word,\n\t\t\t    line = [],\n\t\t\t    lineNumber = 0,\n\t\t\t    lineHeight = 1.4,\n\t\t\t    // ems\n\t\t\ty = text.attr(\"y\"),\n\t\t\t    x = text.attr(\"x\"),\n\t\t\t    dy = parseFloat(text.attr(\"dy\")),\n\t\t\t    tspan = text.text(null).append(\"tspan\").attr(\"x\", x).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n\n\t\t\twhile (word = words.pop()) {\n\t\t\t\tline.push(word);\n\t\t\t\ttspan.text(line.join(\" \"));\n\n\t\t\t\tif (tspan.node().getComputedTextLength() > width) {\n\t\t\t\t\tline.pop();\n\t\t\t\t\ttspan.text(line.join(\" \"));\n\t\t\t\t\tline = [word];\n\t\t\t\t\ttspan = text.append(\"tspan\").attr(\"x\", x).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t} //wrap\n\n} //RadarChart","map":{"version":3,"sources":["client/radarChart.js"],"names":["RadarChart","id","data","options","cfg","w","h","margin","top","right","bottom","left","levels","maxValue","labelFactor","wrapWidth","opacityArea","dotRadius","opacityCircles","strokeWidth","roundStrokes","color","d3","scaleOrdinal","schemeCategory10","i","Math","max","map","o","value","allAxis","j","axis","total","length","radius","min","Format","format","angleSlice","PI","rScale","scale","linear","range","domain","select","remove","svg","append","attr","g","filter","feGaussianBlur","feMerge","feMergeNode_1","feMergeNode_2","axisGrid","selectAll","reverse","enter","d","style","text","cos","sin","call","wrap","radarLine","line","radial","interpolate","angle","blobWrapper","on","transition","duration","blobCircleWrapper","newX","parseFloat","newY","tooltip","width","each","words","split","word","lineNumber","lineHeight","y","x","dy","tspan","pop","push","join","node","getComputedTextLength"],"mappings":"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","file":"client/radarChart.js.map","sourcesContent":["function RadarChart(id, data, options) {\n\tvar cfg = {\n\t w: 600,\t\t\t\t//Width of the circle\n\t h: 600,\t\t\t\t//Height of the circle\n\t margin: {top: 20, right: 20, bottom: 20, left: 20}, //The margins of the SVG\n\t levels: 3,\t\t\t\t//How many levels or inner circles should there be drawn\n\t maxValue: 0, \t\t\t//What is the value that the biggest circle will represent\n\t labelFactor: 1.25, \t//How much farther than the radius of the outer circle should the labels be placed\n\t wrapWidth: 60, \t\t//The number of pixels after which a label needs to be given a new line\n\t opacityArea: 0.35, \t//The opacity of the area of the blob\n\t dotRadius: 4, \t\t\t//The size of the colored circles of each blog\n\t opacityCircles: 0.1, \t//The opacity of the circles of each blob\n\t strokeWidth: 2, \t\t//The width of the stroke around each blob\n\t roundStrokes: false,\t//If true the area and stroke will follow a round path (cardinal-closed)\n\t color: d3.scaleOrdinal(d3.schemeCategory10)\n\t};\n\n\t//Put all of the options into a variable called cfg\n\tif('undefined' !== typeof options){\n\t  for(var i in options){\n\t\tif('undefined' !== typeof options[i]){ cfg[i] = options[i]; }\n\t  }//for i\n\t}//if\n\n\t//If the supplied maxValue is smaller than the actual one, replace by the max in the data\n\tvar maxValue = Math.max(cfg.maxValue, d3.max(data, function(i){return d3.max(i.map(function(o){return o.value;}))}));\n\n\tvar allAxis = (data[0].map(function(i, j){return i.axis})),\t//Names of each axis\n\t\ttotal = allAxis.length,\t\t\t\t\t//The number of different axes\n\t\tradius = Math.min(cfg.w/2, cfg.h/2), \t//Radius of the outermost circle\n\t\tFormat = d3.format('%'),\t\t\t \t//Percentage formatting\n\t\tangleSlice = Math.PI * 2 / total;\t\t//The width in radians of each \"slice\"\n\n\t//Scale for the radius\n\tvar rScale = d3.scale.linear()\n\t\t.range([0, radius])\n\t\t.domain([0, maxValue]);\n\n\t/////////////////////////////////////////////////////////\n\t//////////// Create the container SVG and g /////////////\n\t/////////////////////////////////////////////////////////\n\n\t//Remove whatever chart with the same id/class was present before\n\td3.select(id).select(\"svg\").remove();\n\n\t//Initiate the radar chart SVG\n\tvar svg = d3.select(id).append(\"svg\")\n\t\t\t.attr(\"width\",  cfg.w + cfg.margin.left + cfg.margin.right)\n\t\t\t.attr(\"height\", cfg.h + cfg.margin.top + cfg.margin.bottom)\n\t\t\t.attr(\"class\", \"radar\"+id);\n\t//Append a g element\n\tvar g = svg.append(\"g\")\n\t\t\t.attr(\"transform\", \"translate(\" + (cfg.w/2 + cfg.margin.left) + \",\" + (cfg.h/2 + cfg.margin.top) + \")\");\n\n\t/////////////////////////////////////////////////////////\n\t////////// Glow filter for some extra pizzazz ///////////\n\t/////////////////////////////////////////////////////////\n\n\t//Filter for the outside glow\n\tvar filter = g.append('defs').append('filter').attr('id','glow'),\n\t\tfeGaussianBlur = filter.append('feGaussianBlur').attr('stdDeviation','2.5').attr('result','coloredBlur'),\n\t\tfeMerge = filter.append('feMerge'),\n\t\tfeMergeNode_1 = feMerge.append('feMergeNode').attr('in','coloredBlur'),\n\t\tfeMergeNode_2 = feMerge.append('feMergeNode').attr('in','SourceGraphic');\n\n\t/////////////////////////////////////////////////////////\n\t/////////////// Draw the Circular grid //////////////////\n\t/////////////////////////////////////////////////////////\n\n\t//Wrapper for the grid & axes\n\tvar axisGrid = g.append(\"g\").attr(\"class\", \"axisWrapper\");\n\n\t//Draw the background circles\n\taxisGrid.selectAll(\".levels\")\n\t   .data(d3.range(1,(cfg.levels+1)).reverse())\n\t   .enter()\n\t\t.append(\"circle\")\n\t\t.attr(\"class\", \"gridCircle\")\n\t\t.attr(\"r\", function(d, i){return radius/cfg.levels*d;})\n\t\t.style(\"fill\", \"#CDCDCD\")\n\t\t.style(\"stroke\", \"#CDCDCD\")\n\t\t.style(\"fill-opacity\", cfg.opacityCircles)\n\t\t.style(\"filter\" , \"url(#glow)\");\n\n\t//Text indicating at what % each level is\n\taxisGrid.selectAll(\".axisLabel\")\n\t   .data(d3.range(1,(cfg.levels+1)).reverse())\n\t   .enter().append(\"text\")\n\t   .attr(\"class\", \"axisLabel\")\n\t   .attr(\"x\", 4)\n\t   .attr(\"y\", function(d){return -d*radius/cfg.levels;})\n\t   .attr(\"dy\", \"0.4em\")\n\t   .style(\"font-size\", \"10px\")\n\t   .attr(\"fill\", \"#737373\")\n\t   .text(function(d,i) { return Format(maxValue * d/cfg.levels); });\n\n\t/////////////////////////////////////////////////////////\n\t//////////////////// Draw the axes //////////////////////\n\t/////////////////////////////////////////////////////////\n\n\t//Create the straight lines radiating outward from the center\n\tvar axis = axisGrid.selectAll(\".axis\")\n\t\t.data(allAxis)\n\t\t.enter()\n\t\t.append(\"g\")\n\t\t.attr(\"class\", \"axis\");\n\t//Append the lines\n\taxis.append(\"line\")\n\t\t.attr(\"x1\", 0)\n\t\t.attr(\"y1\", 0)\n\t\t.attr(\"x2\", function(d, i){ return rScale(maxValue*1.1) * Math.cos(angleSlice*i - Math.PI/2); })\n\t\t.attr(\"y2\", function(d, i){ return rScale(maxValue*1.1) * Math.sin(angleSlice*i - Math.PI/2); })\n\t\t.attr(\"class\", \"line\")\n\t\t.style(\"stroke\", \"white\")\n\t\t.style(\"stroke-width\", \"2px\");\n\n\t//Append the labels at each axis\n\taxis.append(\"text\")\n\t\t.attr(\"class\", \"legend\")\n\t\t.style(\"font-size\", \"11px\")\n\t\t.attr(\"text-anchor\", \"middle\")\n\t\t.attr(\"dy\", \"0.35em\")\n\t\t.attr(\"x\", function(d, i){ return rScale(maxValue * cfg.labelFactor) * Math.cos(angleSlice*i - Math.PI/2); })\n\t\t.attr(\"y\", function(d, i){ return rScale(maxValue * cfg.labelFactor) * Math.sin(angleSlice*i - Math.PI/2); })\n\t\t.text(function(d){return d})\n\t\t.call(wrap, cfg.wrapWidth);\n\n\t/////////////////////////////////////////////////////////\n\t///////////// Draw the radar chart blobs ////////////////\n\t/////////////////////////////////////////////////////////\n\n\t//The radial line function\n\tvar radarLine = d3.svg.line.radial()\n\t\t.interpolate(\"linear-closed\")\n\t\t.radius(function(d) { return rScale(d.value); })\n\t\t.angle(function(d,i) {\treturn i*angleSlice; });\n\n\tif(cfg.roundStrokes) {\n\t\tradarLine.interpolate(\"cardinal-closed\");\n\t}\n\n\t//Create a wrapper for the blobs\n\tvar blobWrapper = g.selectAll(\".radarWrapper\")\n\t\t.data(data)\n\t\t.enter().append(\"g\")\n\t\t.attr(\"class\", \"radarWrapper\");\n\n\t//Append the backgrounds\n\tblobWrapper\n\t\t.append(\"path\")\n\t\t.attr(\"class\", \"radarArea\")\n\t\t.attr(\"d\", function(d,i) { return radarLine(d); })\n\t\t.style(\"fill\", function(d,i) { return cfg.color(i); })\n\t\t.style(\"fill-opacity\", cfg.opacityArea)\n\t\t.on('mouseover', function (d,i){\n\t\t\t//Dim all blobs\n\t\t\td3.selectAll(\".radarArea\")\n\t\t\t\t.transition().duration(200)\n\t\t\t\t.style(\"fill-opacity\", 0.1);\n\t\t\t//Bring back the hovered over blob\n\t\t\td3.select(this)\n\t\t\t\t.transition().duration(200)\n\t\t\t\t.style(\"fill-opacity\", 0.7);\n\t\t})\n\t\t.on('mouseout', function(){\n\t\t\t//Bring back all blobs\n\t\t\td3.selectAll(\".radarArea\")\n\t\t\t\t.transition().duration(200)\n\t\t\t\t.style(\"fill-opacity\", cfg.opacityArea);\n\t\t});\n\n\t//Create the outlines\n\tblobWrapper.append(\"path\")\n\t\t.attr(\"class\", \"radarStroke\")\n\t\t.attr(\"d\", function(d,i) { return radarLine(d); })\n\t\t.style(\"stroke-width\", cfg.strokeWidth + \"px\")\n\t\t.style(\"stroke\", function(d,i) { return cfg.color(i); })\n\t\t.style(\"fill\", \"none\")\n\t\t.style(\"filter\" , \"url(#glow)\");\n\n\t//Append the circles\n\tblobWrapper.selectAll(\".radarCircle\")\n\t\t.data(function(d,i) { return d; })\n\t\t.enter().append(\"circle\")\n\t\t.attr(\"class\", \"radarCircle\")\n\t\t.attr(\"r\", cfg.dotRadius)\n\t\t.attr(\"cx\", function(d,i){ return rScale(d.value) * Math.cos(angleSlice*i - Math.PI/2); })\n\t\t.attr(\"cy\", function(d,i){ return rScale(d.value) * Math.sin(angleSlice*i - Math.PI/2); })\n\t\t.style(\"fill\", function(d,i,j) { return cfg.color(j); })\n\t\t.style(\"fill-opacity\", 0.8);\n\n\t/////////////////////////////////////////////////////////\n\t//////// Append invisible circles for tooltip ///////////\n\t/////////////////////////////////////////////////////////\n\n\t//Wrapper for the invisible circles on top\n\tvar blobCircleWrapper = g.selectAll(\".radarCircleWrapper\")\n\t\t.data(data)\n\t\t.enter().append(\"g\")\n\t\t.attr(\"class\", \"radarCircleWrapper\");\n\n\t//Append a set of invisible circles on top for the mouseover pop-up\n\tblobCircleWrapper.selectAll(\".radarInvisibleCircle\")\n\t\t.data(function(d,i) { return d; })\n\t\t.enter().append(\"circle\")\n\t\t.attr(\"class\", \"radarInvisibleCircle\")\n\t\t.attr(\"r\", cfg.dotRadius*1.5)\n\t\t.attr(\"cx\", function(d,i){ return rScale(d.value) * Math.cos(angleSlice*i - Math.PI/2); })\n\t\t.attr(\"cy\", function(d,i){ return rScale(d.value) * Math.sin(angleSlice*i - Math.PI/2); })\n\t\t.style(\"fill\", \"none\")\n\t\t.style(\"pointer-events\", \"all\")\n\t\t.on(\"mouseover\", function(d,i) {\n\t\t\tnewX =  parseFloat(d3.select(this).attr('cx')) - 10;\n\t\t\tnewY =  parseFloat(d3.select(this).attr('cy')) - 10;\n\n\t\t\ttooltip\n\t\t\t\t.attr('x', newX)\n\t\t\t\t.attr('y', newY)\n\t\t\t\t.text(Format(d.value))\n\t\t\t\t.transition().duration(200)\n\t\t\t\t.style('opacity', 1);\n\t\t})\n\t\t.on(\"mouseout\", function(){\n\t\t\ttooltip.transition().duration(200)\n\t\t\t\t.style(\"opacity\", 0);\n\t\t});\n\n\t//Set up the small tooltip for when you hover over a circle\n\tvar tooltip = g.append(\"text\")\n\t\t.attr(\"class\", \"tooltip\")\n\t\t.style(\"opacity\", 0);\n\n\t/////////////////////////////////////////////////////////\n\t/////////////////// Helper Function /////////////////////\n\t/////////////////////////////////////////////////////////\n\n\t//Taken from http://bl.ocks.org/mbostock/7555321\n\t//Wraps SVG text\n\tfunction wrap(text, width) {\n\t  text.each(function() {\n\t\tvar text = d3.select(this),\n\t\t\twords = text.text().split(/\\s+/).reverse(),\n\t\t\tword,\n\t\t\tline = [],\n\t\t\tlineNumber = 0,\n\t\t\tlineHeight = 1.4, // ems\n\t\t\ty = text.attr(\"y\"),\n\t\t\tx = text.attr(\"x\"),\n\t\t\tdy = parseFloat(text.attr(\"dy\")),\n\t\t\ttspan = text.text(null).append(\"tspan\").attr(\"x\", x).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n\n\t\twhile (word = words.pop()) {\n\t\t  line.push(word);\n\t\t  tspan.text(line.join(\" \"));\n\t\t  if (tspan.node().getComputedTextLength() > width) {\n\t\t\tline.pop();\n\t\t\ttspan.text(line.join(\" \"));\n\t\t\tline = [word];\n\t\t\ttspan = text.append(\"tspan\").attr(\"x\", x).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n\t\t  }\n\t\t}\n\t  });\n\t}//wrap\n\n}//RadarChart\n"]},"hash":"83f9d69f94a4bad2c00f26ca0a7d00fc016a92a2"}
