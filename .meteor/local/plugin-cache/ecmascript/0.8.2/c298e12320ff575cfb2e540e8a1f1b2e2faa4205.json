{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/templating","imported":["Template"],"specifiers":[{"kind":"named","imported":"Template","local":"Template"}]},{"source":"meteor/reactive-var","imported":["ReactiveVar"],"specifiers":[{"kind":"named","imported":"ReactiveVar","local":"ReactiveVar"}]},{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"./main.html","imported":[],"specifiers":[]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"client/main.js","filenameRelative":"client/main.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"client/main.js.map","sourceFileName":"client/main.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"main"},"ignored":false,"code":"var Template = void 0;\nmodule.watch(require(\"meteor/templating\"), {\n  Template: function (v) {\n    Template = v;\n  }\n}, 0);\nvar ReactiveVar = void 0;\nmodule.watch(require(\"meteor/reactive-var\"), {\n  ReactiveVar: function (v) {\n    ReactiveVar = v;\n  }\n}, 1);\nvar Mongo = void 0;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 2);\nmodule.watch(require(\"./main.html\"));\nemployee_filtered_list = new ReactiveVar([]);\nemployee_selected = new ReactiveVar([]);\n\nif (Meteor.isClient) {\n  Employees = new Mongo.Collection('employees');\n  Skills = new Mongo.Collection('skills');\n  Template.resource_list.onCreated(function () {\n    Meteor.subscribe('employees.skills');\n  });\n  Template.resource_list.helpers({\n    getEmployees: function () {\n      Meteor.subscribe('employees.bySkill', employee_filtered_list.get());\n      return Employees.find();\n    }\n  });\n  Template.resource_list.events({\n    'click .employee_row': function (event) {\n      //console.log(this);\n      $('.employee_row').removeClass('employee_selected');\n      $(event.currentTarget).addClass('employee_selected');\n      employee_selected.set(this);\n    }\n  });\n  Template.resource_filter.helpers({\n    getSkills: function () {\n      return Skills.find();\n    }\n  }); //Event for when the employee_filter form is submitted.\n\n  Template.resource_filter.events({\n    'submit .employee_filter': function (event) {\n      event.preventDefault();\n      var filterList = [];\n      event.target.skill_box.forEach(function (skill) {\n        if (skill.checked == true) {\n          filterList.push(skill.value);\n        }\n      });\n      employee_filtered_list.set(filterList);\n    }\n  });\n  Template.resource_display.helpers({\n    display_employee_details: function () {\n      console.log(employee_selected.get());\n      return employee_selected.get();\n    }\n  });\n}","map":{"version":3,"sources":["client/main.js"],"names":["Template","module","watch","require","v","ReactiveVar","Mongo","employee_filtered_list","employee_selected","Meteor","isClient","Employees","Collection","Skills","resource_list","onCreated","subscribe","helpers","getEmployees","get","find","events","event","$","removeClass","currentTarget","addClass","set","resource_filter","getSkills","preventDefault","filterList","target","skill_box","forEach","skill","checked","push","value","resource_display","display_employee_details","console","log"],"mappings":"AAAA,IAAIA,iBAAJ;AAAaC,OAAOC,KAAP,CAAaC,QAAQ,mBAAR,CAAb,EAA0C;AAACH,UAAD,YAAUI,CAAV,EAAY;AAACJ,eAASI,CAAT;AAAW;AAAxB,CAA1C,EAAoE,CAApE;AAAuE,IAAIC,oBAAJ;AAAgBJ,OAAOC,KAAP,CAAaC,QAAQ,qBAAR,CAAb,EAA4C;AAACE,aAAD,YAAaD,CAAb,EAAe;AAACC,kBAAYD,CAAZ;AAAc;AAA9B,CAA5C,EAA4E,CAA5E;AAA+E,IAAIE,cAAJ;AAAUL,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACG,OAAD,YAAOF,CAAP,EAAS;AAACE,YAAMF,CAAN;AAAQ;AAAlB,CAArC,EAAyD,CAAzD;AAA4DH,OAAOC,KAAP,CAAaC,QAAQ,aAAR,CAAb;AAKzPI,yBAAyB,IAAIF,WAAJ,CAAgB,EAAhB,CAAzB;AACAG,oBAAoB,IAAIH,WAAJ,CAAgB,EAAhB,CAApB;;AAKA,IAAGI,OAAOC,QAAV,EAAoB;AAClBC,cAAY,IAAIL,MAAMM,UAAV,CAAqB,WAArB,CAAZ;AACAC,WAAS,IAAIP,MAAMM,UAAV,CAAqB,QAArB,CAAT;AAEAZ,WAASc,aAAT,CAAuBC,SAAvB,CAAkC,YAAW;AACzCN,WAAOO,SAAP,CAAiB,kBAAjB;AACH,GAFD;AAIAhB,WAASc,aAAT,CAAuBG,OAAvB,CAA+B;AAC7BC,kBAAc,YAAU;AACtBT,aAAOO,SAAP,CAAiB,mBAAjB,EAAsCT,uBAAuBY,GAAvB,EAAtC;AACA,aAAOR,UAAUS,IAAV,EAAP;AACD;AAJ4B,GAA/B;AAOApB,WAASc,aAAT,CAAuBO,MAAvB,CAA8B;AAC5B,2BAAuB,UAASC,KAAT,EAAe;AACpC;AACAC,QAAE,eAAF,EAAmBC,WAAnB,CAA+B,mBAA/B;AACAD,QAAED,MAAMG,aAAR,EAAuBC,QAAvB,CAAgC,mBAAhC;AACAlB,wBAAkBmB,GAAlB,CAAsB,IAAtB;AACC;AANyB,GAA9B;AASA3B,WAAS4B,eAAT,CAAyBX,OAAzB,CAAiC;AAC/BY,eAAW,YAAU;AACnB,aAAOhB,OAAOO,IAAP,EAAP;AACD;AAH8B,GAAjC,EAxBkB,CA8BlB;;AACApB,WAAS4B,eAAT,CAAyBP,MAAzB,CAAgC;AAC9B,+BAA2B,UAASC,KAAT,EAAe;AACxCA,YAAMQ,cAAN;AACA,UAAIC,aAAa,EAAjB;AACAT,YAAMU,MAAN,CAAaC,SAAb,CAAuBC,OAAvB,CAA+B,UAASC,KAAT,EAAgB;AAC7C,YAAGA,MAAMC,OAAN,IAAiB,IAApB,EAAyB;AACvBL,qBAAWM,IAAX,CAAgBF,MAAMG,KAAtB;AACD;AACF,OAJD;AAKA/B,6BAAuBoB,GAAvB,CAA2BI,UAA3B;AAEC;AAX2B,GAAhC;AAcE/B,WAASuC,gBAAT,CAA0BtB,OAA1B,CAAkC;AAChCuB,8BAA0B,YAAU;AAClCC,cAAQC,GAAR,CAAYlC,kBAAkBW,GAAlB,EAAZ;AACA,aAAOX,kBAAkBW,GAAlB,EAAP;AACC;AAJ6B,GAAlC;AAOH","file":"client/main.js.map","sourcesContent":["import { Template } from 'meteor/templating';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { Mongo } from 'meteor/mongo';\n\nimport './main.html';\nemployee_filtered_list = new ReactiveVar([]);\nemployee_selected = new ReactiveVar([]);\n\n\n\n\nif(Meteor.isClient) {\n  Employees = new Mongo.Collection('employees');\n  Skills = new Mongo.Collection('skills');\n\n  Template.resource_list.onCreated( function() {\n      Meteor.subscribe('employees.skills');\n  });\n\n  Template.resource_list.helpers({\n    getEmployees: function(){\n      Meteor.subscribe('employees.bySkill', employee_filtered_list.get());\n      return Employees.find();\n    }\n  });\n\n  Template.resource_list.events({\n    'click .employee_row': function(event){\n      //console.log(this);\n      $('.employee_row').removeClass('employee_selected');\n      $(event.currentTarget).addClass('employee_selected');\n      employee_selected.set(this)\n      }\n    });\n\n  Template.resource_filter.helpers({\n    getSkills: function(){\n      return Skills.find();\n    }\n  });\n\n  //Event for when the employee_filter form is submitted.\n  Template.resource_filter.events({\n    'submit .employee_filter': function(event){\n      event.preventDefault();\n      var filterList = [];\n      event.target.skill_box.forEach(function(skill) {\n        if(skill.checked == true){\n          filterList.push(skill.value);\n        }\n      });\n      employee_filtered_list.set(filterList);\n\n      }\n    });\n\n    Template.resource_display.helpers({\n      display_employee_details: function(){\n        console.log(employee_selected.get());\n        return employee_selected.get();\n        }\n      });\n\n}\n"]},"hash":"c298e12320ff575cfb2e540e8a1f1b2e2faa4205"}
