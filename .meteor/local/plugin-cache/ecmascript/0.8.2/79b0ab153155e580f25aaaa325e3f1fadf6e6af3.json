{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/templating","imported":["Template"],"specifiers":[{"kind":"named","imported":"Template","local":"Template"}]},{"source":"meteor/reactive-var","imported":["ReactiveVar"],"specifiers":[{"kind":"named","imported":"ReactiveVar","local":"ReactiveVar"}]},{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"./main.html","imported":[],"specifiers":[]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"client/main.js","filenameRelative":"client/main.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"client/main.js.map","sourceFileName":"client/main.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"main"},"ignored":false,"code":"var Template = void 0;\nmodule.watch(require(\"meteor/templating\"), {\n  Template: function (v) {\n    Template = v;\n  }\n}, 0);\nvar ReactiveVar = void 0;\nmodule.watch(require(\"meteor/reactive-var\"), {\n  ReactiveVar: function (v) {\n    ReactiveVar = v;\n  }\n}, 1);\nvar Mongo = void 0;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 2);\nmodule.watch(require(\"./main.html\"));\n\nif (Meteor.isClient) {\n  Employees = new Mongo.Collection('employees');\n  Skills = new Mongo.Collection('skills');\n  var filterList = [];\n  Template.resource_list.onCreated(function () {\n    // Subscribe to the client side data publications as soon as the template is created.\n    Meteor.subscribe('employees.all');\n    Meteor.subscribe('employees.skills');\n  });\n  Template.resource_list.helpers({\n    getEmployees: function () {\n      //console.log(employees.count());\n      return Employees.find();\n    }\n  });\n  Template.resource_filter.helpers({\n    getSkills: function () {\n      return Skills.find();\n    }\n  }); //Event for when the employee_filter form is submitted.\n\n  Template.resource_filter.events({\n    'submit .employee_filter': function (event) {\n      event.preventDefault();\n\n      for (var skill in meteorBabelHelpers.sanitizeForInObject(event.target.skill_box.checked)) {\n        console.log(skill.checked); //if (skill.checked == true){\n        //    console.log(skill.checked);\n        //  }\n      }\n    }\n  });\n}","map":{"version":3,"sources":["client/main.js"],"names":["Template","module","watch","require","v","ReactiveVar","Mongo","Meteor","isClient","Employees","Collection","Skills","filterList","resource_list","onCreated","subscribe","helpers","getEmployees","find","resource_filter","getSkills","events","event","preventDefault","skill","target","skill_box","checked","console","log"],"mappings":"AAAA,IAAIA,iBAAJ;AAAaC,OAAOC,KAAP,CAAaC,QAAQ,mBAAR,CAAb,EAA0C;AAACH,UAAD,YAAUI,CAAV,EAAY;AAACJ,eAASI,CAAT;AAAW;AAAxB,CAA1C,EAAoE,CAApE;AAAuE,IAAIC,oBAAJ;AAAgBJ,OAAOC,KAAP,CAAaC,QAAQ,qBAAR,CAAb,EAA4C;AAACE,aAAD,YAAaD,CAAb,EAAe;AAACC,kBAAYD,CAAZ;AAAc;AAA9B,CAA5C,EAA4E,CAA5E;AAA+E,IAAIE,cAAJ;AAAUL,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACG,OAAD,YAAOF,CAAP,EAAS;AAACE,YAAMF,CAAN;AAAQ;AAAlB,CAArC,EAAyD,CAAzD;AAA4DH,OAAOC,KAAP,CAAaC,QAAQ,aAAR,CAAb;;AAQzP,IAAGI,OAAOC,QAAV,EAAoB;AAClBC,cAAY,IAAIH,MAAMI,UAAV,CAAqB,WAArB,CAAZ;AACAC,WAAS,IAAIL,MAAMI,UAAV,CAAqB,QAArB,CAAT;AACA,MAAIE,aAAa,EAAjB;AAIAZ,WAASa,aAAT,CAAuBC,SAAvB,CAAkC,YAAW;AACzC;AACAP,WAAOQ,SAAP,CAAiB,eAAjB;AACAR,WAAOQ,SAAP,CAAiB,kBAAjB;AACH,GAJD;AAMAf,WAASa,aAAT,CAAuBG,OAAvB,CAA+B;AAC7BC,kBAAc,YAAU;AACtB;AACA,aAAOR,UAAUS,IAAV,EAAP;AACD;AAJ4B,GAA/B;AAOAlB,WAASmB,eAAT,CAAyBH,OAAzB,CAAiC;AAE/BI,eAAW,YAAU;AACnB,aAAOT,OAAOO,IAAP,EAAP;AACD;AAJ8B,GAAjC,EApBkB,CA2BlB;;AACAlB,WAASmB,eAAT,CAAyBE,MAAzB,CAAgC;AAC9B,+BAA2B,UAASC,KAAT,EAAe;AACxCA,YAAMC,cAAN;;AACA,WAAK,IAAIC,KAAT,2CAAkBF,MAAMG,MAAN,CAAaC,SAAb,CAAuBC,OAAzC,GAAkD;AAChDC,gBAAQC,GAAR,CAAYL,MAAMG,OAAlB,EADgD,CAEhD;AACF;AACA;AACC;AAGF;AAX6B,GAAhC;AAaD","file":"client/main.js.map","sourcesContent":["import { Template } from 'meteor/templating';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { Mongo } from 'meteor/mongo';\n\nimport './main.html';\n\n\n\nif(Meteor.isClient) {\n  Employees = new Mongo.Collection('employees');\n  Skills = new Mongo.Collection('skills');\n  var filterList = [];\n\n\n\n  Template.resource_list.onCreated( function() {\n      // Subscribe to the client side data publications as soon as the template is created.\n      Meteor.subscribe('employees.all');\n      Meteor.subscribe('employees.skills');\n  });\n\n  Template.resource_list.helpers({\n    getEmployees: function(){\n      //console.log(employees.count());\n      return Employees.find();\n    }\n  });\n\n  Template.resource_filter.helpers({\n\n    getSkills: function(){\n      return Skills.find();\n    }\n  });\n\n  //Event for when the employee_filter form is submitted.\n  Template.resource_filter.events({\n    'submit .employee_filter': function(event){\n      event.preventDefault();\n      for (var skill in event.target.skill_box.checked) {\n        console.log(skill.checked);\n        //if (skill.checked == true){\n      //    console.log(skill.checked);\n      //  }\n      }\n\n\n    }\n  });\n}\n"]},"hash":"79b0ab153155e580f25aaaa325e3f1fadf6e6af3"}
