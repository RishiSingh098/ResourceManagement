{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/minimongo/minimongo_tests.js","filenameRelative":"packages/minimongo/minimongo_tests.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/minimongo/minimongo_tests.js.map","sourceFileName":"packages/minimongo/minimongo_tests.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"minimongo_tests"},"ignored":false,"code":"// Hack to make LocalCollection generate ObjectIDs by default.\nLocalCollection._useOID = true; // assert that f is a strcmp-style comparison function that puts\n// 'values' in the provided order\n\nvar assert_ordering = function (test, f, values) {\n  for (var i = 0; i < values.length; i++) {\n    var x = f(values[i], values[i]);\n\n    if (x !== 0) {\n      // XXX super janky\n      test.fail({\n        type: \"minimongo-ordering\",\n        message: \"value doesn't order as equal to itself\",\n        value: JSON.stringify(values[i]),\n        should_be_zero_but_got: JSON.stringify(x)\n      });\n    }\n\n    if (i + 1 < values.length) {\n      var less = values[i];\n      var more = values[i + 1];\n      var x = f(less, more);\n\n      if (!(x < 0)) {\n        // XXX super janky\n        test.fail({\n          type: \"minimongo-ordering\",\n          message: \"ordering test failed\",\n          first: JSON.stringify(less),\n          second: JSON.stringify(more),\n          should_be_negative_but_got: JSON.stringify(x)\n        });\n      }\n\n      x = f(more, less);\n\n      if (!(x > 0)) {\n        // XXX super janky\n        test.fail({\n          type: \"minimongo-ordering\",\n          message: \"ordering test failed\",\n          first: JSON.stringify(less),\n          second: JSON.stringify(more),\n          should_be_positive_but_got: JSON.stringify(x)\n        });\n      }\n    }\n  }\n};\n\nvar log_callbacks = function (operations) {\n  return {\n    addedAt: function (obj, idx, before) {\n      delete obj._id;\n      operations.push(EJSON.clone(['added', obj, idx, before]));\n    },\n    changedAt: function (obj, old_obj, at) {\n      delete obj._id;\n      delete old_obj._id;\n      operations.push(EJSON.clone(['changed', obj, at, old_obj]));\n    },\n    movedTo: function (obj, old_at, new_at, before) {\n      delete obj._id;\n      operations.push(EJSON.clone(['moved', obj, old_at, new_at, before]));\n    },\n    removedAt: function (old_obj, at) {\n      var id = old_obj._id;\n      delete old_obj._id;\n      operations.push(EJSON.clone(['removed', id, at, old_obj]));\n    }\n  };\n}; // XXX test shared structure in all MM entrypoints\n\n\nTinytest.add(\"minimongo - basics\", function (test) {\n  var c = new LocalCollection(),\n      fluffyKitten_id,\n      count;\n  fluffyKitten_id = c.insert({\n    type: \"kitten\",\n    name: \"fluffy\"\n  });\n  c.insert({\n    type: \"kitten\",\n    name: \"snookums\"\n  });\n  c.insert({\n    type: \"cryptographer\",\n    name: \"alice\"\n  });\n  c.insert({\n    type: \"cryptographer\",\n    name: \"bob\"\n  });\n  c.insert({\n    type: \"cryptographer\",\n    name: \"cara\"\n  });\n  test.equal(c.find().count(), 5);\n  test.equal(c.find({\n    type: \"kitten\"\n  }).count(), 2);\n  test.equal(c.find({\n    type: \"cryptographer\"\n  }).count(), 3);\n  test.length(c.find({\n    type: \"kitten\"\n  }).fetch(), 2);\n  test.length(c.find({\n    type: \"cryptographer\"\n  }).fetch(), 3);\n  test.equal(fluffyKitten_id, c.findOne({\n    type: \"kitten\",\n    name: \"fluffy\"\n  })._id);\n  c.remove({\n    name: \"cara\"\n  });\n  test.equal(c.find().count(), 4);\n  test.equal(c.find({\n    type: \"kitten\"\n  }).count(), 2);\n  test.equal(c.find({\n    type: \"cryptographer\"\n  }).count(), 2);\n  test.length(c.find({\n    type: \"kitten\"\n  }).fetch(), 2);\n  test.length(c.find({\n    type: \"cryptographer\"\n  }).fetch(), 2);\n  count = c.update({\n    name: \"snookums\"\n  }, {\n    $set: {\n      type: \"cryptographer\"\n    }\n  });\n  test.equal(count, 1);\n  test.equal(c.find().count(), 4);\n  test.equal(c.find({\n    type: \"kitten\"\n  }).count(), 1);\n  test.equal(c.find({\n    type: \"cryptographer\"\n  }).count(), 3);\n  test.length(c.find({\n    type: \"kitten\"\n  }).fetch(), 1);\n  test.length(c.find({\n    type: \"cryptographer\"\n  }).fetch(), 3);\n  c.remove(null);\n  c.remove(false);\n  c.remove(undefined);\n  test.equal(c.find().count(), 4);\n  c.remove({\n    _id: null\n  });\n  c.remove({\n    _id: false\n  });\n  c.remove({\n    _id: undefined\n  });\n  count = c.remove();\n  test.equal(count, 0);\n  test.equal(c.find().count(), 4);\n  count = c.remove({});\n  test.equal(count, 4);\n  test.equal(c.find().count(), 0);\n  c.insert({\n    _id: 1,\n    name: \"strawberry\",\n    tags: [\"fruit\", \"red\", \"squishy\"]\n  });\n  c.insert({\n    _id: 2,\n    name: \"apple\",\n    tags: [\"fruit\", \"red\", \"hard\"]\n  });\n  c.insert({\n    _id: 3,\n    name: \"rose\",\n    tags: [\"flower\", \"red\", \"squishy\"]\n  });\n  test.equal(c.find({\n    tags: \"flower\"\n  }).count(), 1);\n  test.equal(c.find({\n    tags: \"fruit\"\n  }).count(), 2);\n  test.equal(c.find({\n    tags: \"red\"\n  }).count(), 3);\n  test.length(c.find({\n    tags: \"flower\"\n  }).fetch(), 1);\n  test.length(c.find({\n    tags: \"fruit\"\n  }).fetch(), 2);\n  test.length(c.find({\n    tags: \"red\"\n  }).fetch(), 3);\n  test.equal(c.findOne(1).name, \"strawberry\");\n  test.equal(c.findOne(2).name, \"apple\");\n  test.equal(c.findOne(3).name, \"rose\");\n  test.equal(c.findOne(4), undefined);\n  test.equal(c.findOne(\"abc\"), undefined);\n  test.equal(c.findOne(undefined), undefined);\n  test.equal(c.find(1).count(), 1);\n  test.equal(c.find(4).count(), 0);\n  test.equal(c.find(\"abc\").count(), 0);\n  test.equal(c.find(undefined).count(), 0);\n  test.equal(c.find().count(), 3);\n  test.equal(c.find(1, {\n    skip: 1\n  }).count(), 0);\n  test.equal(c.find({\n    _id: 1\n  }, {\n    skip: 1\n  }).count(), 0);\n  test.equal(c.find({}, {\n    skip: 1\n  }).count(), 2);\n  test.equal(c.find({}, {\n    skip: 2\n  }).count(), 1);\n  test.equal(c.find({}, {\n    limit: 2\n  }).count(), 2);\n  test.equal(c.find({}, {\n    limit: 1\n  }).count(), 1);\n  test.equal(c.find({}, {\n    skip: 1,\n    limit: 1\n  }).count(), 1);\n  test.equal(c.find({\n    tags: \"fruit\"\n  }, {\n    skip: 1\n  }).count(), 1);\n  test.equal(c.find({\n    tags: \"fruit\"\n  }, {\n    limit: 1\n  }).count(), 1);\n  test.equal(c.find({\n    tags: \"fruit\"\n  }, {\n    skip: 1,\n    limit: 1\n  }).count(), 1);\n  test.equal(c.find(1, {\n    sort: ['_id', 'desc'],\n    skip: 1\n  }).count(), 0);\n  test.equal(c.find({\n    _id: 1\n  }, {\n    sort: ['_id', 'desc'],\n    skip: 1\n  }).count(), 0);\n  test.equal(c.find({}, {\n    sort: ['_id', 'desc'],\n    skip: 1\n  }).count(), 2);\n  test.equal(c.find({}, {\n    sort: ['_id', 'desc'],\n    skip: 2\n  }).count(), 1);\n  test.equal(c.find({}, {\n    sort: ['_id', 'desc'],\n    limit: 2\n  }).count(), 2);\n  test.equal(c.find({}, {\n    sort: ['_id', 'desc'],\n    limit: 1\n  }).count(), 1);\n  test.equal(c.find({}, {\n    sort: ['_id', 'desc'],\n    skip: 1,\n    limit: 1\n  }).count(), 1);\n  test.equal(c.find({\n    tags: \"fruit\"\n  }, {\n    sort: ['_id', 'desc'],\n    skip: 1\n  }).count(), 1);\n  test.equal(c.find({\n    tags: \"fruit\"\n  }, {\n    sort: ['_id', 'desc'],\n    limit: 1\n  }).count(), 1);\n  test.equal(c.find({\n    tags: \"fruit\"\n  }, {\n    sort: ['_id', 'desc'],\n    skip: 1,\n    limit: 1\n  }).count(), 1); // Regression test for #455.\n\n  c.insert({\n    foo: {\n      bar: 'baz'\n    }\n  });\n  test.equal(c.find({\n    foo: {\n      bam: 'baz'\n    }\n  }).count(), 0);\n  test.equal(c.find({\n    foo: {\n      bar: 'baz'\n    }\n  }).count(), 1);\n});\nTinytest.add(\"minimongo - error - no options\", function (test) {\n  try {\n    throw MinimongoError(\"Not fun to have errors\");\n  } catch (e) {\n    test.equal(e.message, \"Not fun to have errors\");\n  }\n});\nTinytest.add(\"minimongo - error - with field\", function (test) {\n  try {\n    throw MinimongoError(\"Cats are no fun\", {\n      field: \"mice\"\n    });\n  } catch (e) {\n    test.equal(e.message, \"Cats are no fun for field 'mice'\");\n  }\n});\nTinytest.add(\"minimongo - cursors\", function (test) {\n  var c = new LocalCollection();\n  var res;\n\n  for (var i = 0; i < 20; i++) {\n    c.insert({\n      i: i\n    });\n  }\n\n  var q = c.find();\n  test.equal(q.count(), 20); // fetch\n\n  res = q.fetch();\n  test.length(res, 20);\n\n  for (var i = 0; i < 20; i++) {\n    test.equal(res[i].i, i);\n  } // call it again, it still works\n\n\n  test.length(q.fetch(), 20); // forEach\n\n  var count = 0;\n  var context = {};\n  q.forEach(function (obj, i, cursor) {\n    test.equal(obj.i, count++);\n    test.equal(obj.i, i);\n    test.isTrue(context === this);\n    test.isTrue(cursor === q);\n  }, context);\n  test.equal(count, 20); // call it again, it still works\n\n  test.length(q.fetch(), 20); // map\n\n  res = q.map(function (obj, i, cursor) {\n    test.equal(obj.i, i);\n    test.isTrue(context === this);\n    test.isTrue(cursor === q);\n    return obj.i * 2;\n  }, context);\n  test.length(res, 20);\n\n  for (var i = 0; i < 20; i++) {\n    test.equal(res[i], i * 2);\n  } // call it again, it still works\n\n\n  test.length(q.fetch(), 20); // findOne (and no rewind first)\n\n  test.equal(c.findOne({\n    i: 0\n  }).i, 0);\n  test.equal(c.findOne({\n    i: 1\n  }).i, 1);\n\n  var id = c.findOne({\n    i: 2\n  })._id;\n\n  test.equal(c.findOne(id).i, 2);\n});\nTinytest.add(\"minimongo - transform\", function (test) {\n  var c = new LocalCollection();\n  c.insert({}); // transform functions must return objects\n\n  var invalidTransform = function (doc) {\n    return doc._id;\n  };\n\n  test.throws(function () {\n    c.findOne({}, {\n      transform: invalidTransform\n    });\n  }); // transformed documents get _id field transplanted if not present\n\n  var transformWithoutId = function (doc) {\n    return _.omit(doc, '_id');\n  };\n\n  test.equal(c.findOne({}, {\n    transform: transformWithoutId\n  })._id, c.findOne()._id);\n});\nTinytest.add(\"minimongo - misc\", function (test) {\n  // deepcopy\n  var a = {\n    a: [1, 2, 3],\n    b: \"x\",\n    c: true,\n    d: {\n      x: 12,\n      y: [12]\n    },\n    f: null,\n    g: new Date()\n  };\n  var b = EJSON.clone(a);\n  test.equal(a, b);\n  test.isTrue(LocalCollection._f._equal(a, b));\n  a.a.push(4);\n  test.length(b.a, 3);\n  a.c = false;\n  test.isTrue(b.c);\n  b.d.z = 15;\n  a.d.z = 14;\n  test.equal(b.d.z, 15);\n  a.d.y.push(88);\n  test.length(b.d.y, 1);\n  test.equal(a.g, b.g);\n  b.g.setDate(b.g.getDate() + 1);\n  test.notEqual(a.g, b.g);\n  a = {\n    x: function () {}\n  };\n  b = EJSON.clone(a);\n  a.x.a = 14;\n  test.equal(b.x.a, 14); // just to document current behavior\n});\nTinytest.add(\"minimongo - lookup\", function (test) {\n  var lookupA = MinimongoTest.makeLookupFunction('a');\n  test.equal(lookupA({}), [{\n    value: undefined\n  }]);\n  test.equal(lookupA({\n    a: 1\n  }), [{\n    value: 1\n  }]);\n  test.equal(lookupA({\n    a: [1]\n  }), [{\n    value: [1]\n  }]);\n  var lookupAX = MinimongoTest.makeLookupFunction('a.x');\n  test.equal(lookupAX({\n    a: {\n      x: 1\n    }\n  }), [{\n    value: 1\n  }]);\n  test.equal(lookupAX({\n    a: {\n      x: [1]\n    }\n  }), [{\n    value: [1]\n  }]);\n  test.equal(lookupAX({\n    a: 5\n  }), [{\n    value: undefined\n  }]);\n  test.equal(lookupAX({\n    a: [{\n      x: 1\n    }, {\n      x: [2]\n    }, {\n      y: 3\n    }]\n  }), [{\n    value: 1,\n    arrayIndices: [0]\n  }, {\n    value: [2],\n    arrayIndices: [1]\n  }, {\n    value: undefined,\n    arrayIndices: [2]\n  }]);\n  var lookupA0X = MinimongoTest.makeLookupFunction('a.0.x');\n  test.equal(lookupA0X({\n    a: [{\n      x: 1\n    }]\n  }), [// From interpreting '0' as \"0th array element\".\n  {\n    value: 1,\n    arrayIndices: [0, 'x']\n  }, // From interpreting '0' as \"after branching in the array, look in the\n  // object {x:1} for a field named 0\".\n  {\n    value: undefined,\n    arrayIndices: [0]\n  }]);\n  test.equal(lookupA0X({\n    a: [{\n      x: [1]\n    }]\n  }), [{\n    value: [1],\n    arrayIndices: [0, 'x']\n  }, {\n    value: undefined,\n    arrayIndices: [0]\n  }]);\n  test.equal(lookupA0X({\n    a: 5\n  }), [{\n    value: undefined\n  }]);\n  test.equal(lookupA0X({\n    a: [{\n      x: 1\n    }, {\n      x: [2]\n    }, {\n      y: 3\n    }]\n  }), [// From interpreting '0' as \"0th array element\".\n  {\n    value: 1,\n    arrayIndices: [0, 'x']\n  }, // From interpreting '0' as \"after branching in the array, look in the\n  // object {x:1} for a field named 0\".\n  {\n    value: undefined,\n    arrayIndices: [0]\n  }, {\n    value: undefined,\n    arrayIndices: [1]\n  }, {\n    value: undefined,\n    arrayIndices: [2]\n  }]);\n  test.equal(MinimongoTest.makeLookupFunction('w.x.0.z')({\n    w: [{\n      x: [{\n        z: 5\n      }]\n    }]\n  }), [// From interpreting '0' as \"0th array element\".\n  {\n    value: 5,\n    arrayIndices: [0, 0, 'x']\n  }, // From interpreting '0' as \"after branching in the array, look in the\n  // object {z:5} for a field named \"0\".\n  {\n    value: undefined,\n    arrayIndices: [0, 0]\n  }]);\n});\nTinytest.add(\"minimongo - selector_compiler\", function (test) {\n  var matches = function (shouldMatch, selector, doc) {\n    var doesMatch = new Minimongo.Matcher(selector).documentMatches(doc).result;\n\n    if (doesMatch != shouldMatch) {\n      // XXX super janky\n      test.fail({\n        message: \"minimongo match failure: document \" + (shouldMatch ? \"should match, but doesn't\" : \"shouldn't match, but does\"),\n        selector: JSON.stringify(selector),\n        document: JSON.stringify(doc)\n      });\n    }\n  };\n\n  var match = _.bind(matches, null, true);\n\n  var nomatch = _.bind(matches, null, false); // XXX blog post about what I learned while writing these tests (weird\n  // mongo edge cases)\n  // empty selectors\n\n\n  match({}, {});\n  match({}, {\n    a: 12\n  }); // scalars\n\n  match(1, {\n    _id: 1,\n    a: 'foo'\n  });\n  nomatch(1, {\n    _id: 2,\n    a: 'foo'\n  });\n  match('a', {\n    _id: 'a',\n    a: 'foo'\n  });\n  nomatch('a', {\n    _id: 'b',\n    a: 'foo'\n  }); // safety\n\n  nomatch(undefined, {});\n  nomatch(undefined, {\n    _id: 'foo'\n  });\n  nomatch(false, {\n    _id: 'foo'\n  });\n  nomatch(null, {\n    _id: 'foo'\n  });\n  nomatch({\n    _id: undefined\n  }, {\n    _id: 'foo'\n  });\n  nomatch({\n    _id: false\n  }, {\n    _id: 'foo'\n  });\n  nomatch({\n    _id: null\n  }, {\n    _id: 'foo'\n  }); // matching one or more keys\n\n  nomatch({\n    a: 12\n  }, {});\n  match({\n    a: 12\n  }, {\n    a: 12\n  });\n  match({\n    a: 12\n  }, {\n    a: 12,\n    b: 13\n  });\n  match({\n    a: 12,\n    b: 13\n  }, {\n    a: 12,\n    b: 13\n  });\n  match({\n    a: 12,\n    b: 13\n  }, {\n    a: 12,\n    b: 13,\n    c: 14\n  });\n  nomatch({\n    a: 12,\n    b: 13,\n    c: 14\n  }, {\n    a: 12,\n    b: 13\n  });\n  nomatch({\n    a: 12,\n    b: 13\n  }, {\n    b: 13,\n    c: 14\n  });\n  match({\n    a: 12\n  }, {\n    a: [12]\n  });\n  match({\n    a: 12\n  }, {\n    a: [11, 12, 13]\n  });\n  nomatch({\n    a: 12\n  }, {\n    a: [11, 13]\n  });\n  match({\n    a: 12,\n    b: 13\n  }, {\n    a: [11, 12, 13],\n    b: [13, 14, 15]\n  });\n  nomatch({\n    a: 12,\n    b: 13\n  }, {\n    a: [11, 12, 13],\n    b: [14, 15]\n  }); // dates\n\n  var date1 = new Date();\n  var date2 = new Date(date1.getTime() + 1000);\n  match({\n    a: date1\n  }, {\n    a: date1\n  });\n  nomatch({\n    a: date1\n  }, {\n    a: date2\n  }); // arrays\n\n  match({\n    a: [1, 2]\n  }, {\n    a: [1, 2]\n  });\n  match({\n    a: [1, 2]\n  }, {\n    a: [[1, 2]]\n  });\n  match({\n    a: [1, 2]\n  }, {\n    a: [[3, 4], [1, 2]]\n  });\n  nomatch({\n    a: [1, 2]\n  }, {\n    a: [3, 4]\n  });\n  nomatch({\n    a: [1, 2]\n  }, {\n    a: [[[1, 2]]]\n  }); // literal documents\n\n  match({\n    a: {\n      b: 12\n    }\n  }, {\n    a: {\n      b: 12\n    }\n  });\n  nomatch({\n    a: {\n      b: 12,\n      c: 13\n    }\n  }, {\n    a: {\n      b: 12\n    }\n  });\n  nomatch({\n    a: {\n      b: 12\n    }\n  }, {\n    a: {\n      b: 12,\n      c: 13\n    }\n  });\n  match({\n    a: {\n      b: 12,\n      c: 13\n    }\n  }, {\n    a: {\n      b: 12,\n      c: 13\n    }\n  });\n  nomatch({\n    a: {\n      b: 12,\n      c: 13\n    }\n  }, {\n    a: {\n      c: 13,\n      b: 12\n    }\n  }); // tested on mongodb\n\n  nomatch({\n    a: {}\n  }, {\n    a: {\n      b: 12\n    }\n  });\n  nomatch({\n    a: {\n      b: 12\n    }\n  }, {\n    a: {}\n  });\n  match({\n    a: {\n      b: 12,\n      c: [13, true, false, 2.2, \"a\", null, {\n        d: 14\n      }]\n    }\n  }, {\n    a: {\n      b: 12,\n      c: [13, true, false, 2.2, \"a\", null, {\n        d: 14\n      }]\n    }\n  });\n  match({\n    a: {\n      b: 12\n    }\n  }, {\n    a: {\n      b: 12\n    },\n    k: 99\n  });\n  match({\n    a: {\n      b: 12\n    }\n  }, {\n    a: [{\n      b: 12\n    }]\n  });\n  nomatch({\n    a: {\n      b: 12\n    }\n  }, {\n    a: [[{\n      b: 12\n    }]]\n  });\n  match({\n    a: {\n      b: 12\n    }\n  }, {\n    a: [{\n      b: 11\n    }, {\n      b: 12\n    }, {\n      b: 13\n    }]\n  });\n  nomatch({\n    a: {\n      b: 12\n    }\n  }, {\n    a: [{\n      b: 11\n    }, {\n      b: 12,\n      c: 20\n    }, {\n      b: 13\n    }]\n  });\n  nomatch({\n    a: {\n      b: 12,\n      c: 20\n    }\n  }, {\n    a: [{\n      b: 11\n    }, {\n      b: 12\n    }, {\n      c: 20\n    }]\n  });\n  match({\n    a: {\n      b: 12,\n      c: 20\n    }\n  }, {\n    a: [{\n      b: 11\n    }, {\n      b: 12,\n      c: 20\n    }, {\n      b: 13\n    }]\n  }); // null\n\n  match({\n    a: null\n  }, {\n    a: null\n  });\n  match({\n    a: null\n  }, {\n    b: 12\n  });\n  nomatch({\n    a: null\n  }, {\n    a: 12\n  });\n  match({\n    a: null\n  }, {\n    a: [1, 2, null, 3]\n  }); // tested on mongodb\n\n  nomatch({\n    a: null\n  }, {\n    a: [1, 2, {}, 3]\n  }); // tested on mongodb\n  // order comparisons: $lt, $gt, $lte, $gte\n\n  match({\n    a: {\n      $lt: 10\n    }\n  }, {\n    a: 9\n  });\n  nomatch({\n    a: {\n      $lt: 10\n    }\n  }, {\n    a: 10\n  });\n  nomatch({\n    a: {\n      $lt: 10\n    }\n  }, {\n    a: 11\n  });\n  match({\n    a: {\n      $gt: 10\n    }\n  }, {\n    a: 11\n  });\n  nomatch({\n    a: {\n      $gt: 10\n    }\n  }, {\n    a: 10\n  });\n  nomatch({\n    a: {\n      $gt: 10\n    }\n  }, {\n    a: 9\n  });\n  match({\n    a: {\n      $lte: 10\n    }\n  }, {\n    a: 9\n  });\n  match({\n    a: {\n      $lte: 10\n    }\n  }, {\n    a: 10\n  });\n  nomatch({\n    a: {\n      $lte: 10\n    }\n  }, {\n    a: 11\n  });\n  match({\n    a: {\n      $gte: 10\n    }\n  }, {\n    a: 11\n  });\n  match({\n    a: {\n      $gte: 10\n    }\n  }, {\n    a: 10\n  });\n  nomatch({\n    a: {\n      $gte: 10\n    }\n  }, {\n    a: 9\n  });\n  match({\n    a: {\n      $lt: 10\n    }\n  }, {\n    a: [11, 9, 12]\n  });\n  nomatch({\n    a: {\n      $lt: 10\n    }\n  }, {\n    a: [11, 12]\n  }); // (there's a full suite of ordering test elsewhere)\n\n  nomatch({\n    a: {\n      $lt: \"null\"\n    }\n  }, {\n    a: null\n  });\n  match({\n    a: {\n      $lt: {\n        x: [2, 3, 4]\n      }\n    }\n  }, {\n    a: {\n      x: [1, 3, 4]\n    }\n  });\n  match({\n    a: {\n      $gt: {\n        x: [2, 3, 4]\n      }\n    }\n  }, {\n    a: {\n      x: [3, 3, 4]\n    }\n  });\n  nomatch({\n    a: {\n      $gt: {\n        x: [2, 3, 4]\n      }\n    }\n  }, {\n    a: {\n      x: [1, 3, 4]\n    }\n  });\n  nomatch({\n    a: {\n      $gt: {\n        x: [2, 3, 4]\n      }\n    }\n  }, {\n    a: {\n      x: [2, 3, 4]\n    }\n  });\n  nomatch({\n    a: {\n      $lt: {\n        x: [2, 3, 4]\n      }\n    }\n  }, {\n    a: {\n      x: [2, 3, 4]\n    }\n  });\n  match({\n    a: {\n      $gte: {\n        x: [2, 3, 4]\n      }\n    }\n  }, {\n    a: {\n      x: [2, 3, 4]\n    }\n  });\n  match({\n    a: {\n      $lte: {\n        x: [2, 3, 4]\n      }\n    }\n  }, {\n    a: {\n      x: [2, 3, 4]\n    }\n  });\n  nomatch({\n    a: {\n      $gt: [2, 3]\n    }\n  }, {\n    a: [1, 2]\n  }); // tested against mongodb\n  // composition of two qualifiers\n\n  nomatch({\n    a: {\n      $lt: 11,\n      $gt: 9\n    }\n  }, {\n    a: 8\n  });\n  nomatch({\n    a: {\n      $lt: 11,\n      $gt: 9\n    }\n  }, {\n    a: 9\n  });\n  match({\n    a: {\n      $lt: 11,\n      $gt: 9\n    }\n  }, {\n    a: 10\n  });\n  nomatch({\n    a: {\n      $lt: 11,\n      $gt: 9\n    }\n  }, {\n    a: 11\n  });\n  nomatch({\n    a: {\n      $lt: 11,\n      $gt: 9\n    }\n  }, {\n    a: 12\n  });\n  match({\n    a: {\n      $lt: 11,\n      $gt: 9\n    }\n  }, {\n    a: [8, 9, 10, 11, 12]\n  });\n  match({\n    a: {\n      $lt: 11,\n      $gt: 9\n    }\n  }, {\n    a: [8, 9, 11, 12]\n  }); // tested against mongodb\n  // $all\n\n  match({\n    a: {\n      $all: [1, 2]\n    }\n  }, {\n    a: [1, 2]\n  });\n  nomatch({\n    a: {\n      $all: [1, 2, 3]\n    }\n  }, {\n    a: [1, 2]\n  });\n  match({\n    a: {\n      $all: [1, 2]\n    }\n  }, {\n    a: [3, 2, 1]\n  });\n  match({\n    a: {\n      $all: [1, \"x\"]\n    }\n  }, {\n    a: [3, \"x\", 1]\n  });\n  nomatch({\n    a: {\n      $all: ['2']\n    }\n  }, {\n    a: 2\n  });\n  nomatch({\n    a: {\n      $all: [2]\n    }\n  }, {\n    a: '2'\n  });\n  match({\n    a: {\n      $all: [[1, 2], [1, 3]]\n    }\n  }, {\n    a: [[1, 3], [1, 2], [1, 4]]\n  });\n  nomatch({\n    a: {\n      $all: [[1, 2], [1, 3]]\n    }\n  }, {\n    a: [[1, 4], [1, 2], [1, 4]]\n  });\n  match({\n    a: {\n      $all: [2, 2]\n    }\n  }, {\n    a: [2]\n  }); // tested against mongodb\n\n  nomatch({\n    a: {\n      $all: [2, 3]\n    }\n  }, {\n    a: [2, 2]\n  });\n  nomatch({\n    a: {\n      $all: [1, 2]\n    }\n  }, {\n    a: [[1, 2]]\n  }); // tested against mongodb\n\n  nomatch({\n    a: {\n      $all: [1, 2]\n    }\n  }, {}); // tested against mongodb, field doesn't exist\n\n  nomatch({\n    a: {\n      $all: [1, 2]\n    }\n  }, {\n    a: {\n      foo: 'bar'\n    }\n  }); // tested against mongodb, field is not an object\n\n  nomatch({\n    a: {\n      $all: []\n    }\n  }, {\n    a: []\n  });\n  nomatch({\n    a: {\n      $all: []\n    }\n  }, {\n    a: [5]\n  });\n  match({\n    a: {\n      $all: [/i/, /e/i]\n    }\n  }, {\n    a: [\"foo\", \"bEr\", \"biz\"]\n  });\n  nomatch({\n    a: {\n      $all: [/i/, /e/i]\n    }\n  }, {\n    a: [\"foo\", \"bar\", \"biz\"]\n  });\n  match({\n    a: {\n      $all: [{\n        b: 3\n      }]\n    }\n  }, {\n    a: [{\n      b: 3\n    }]\n  }); // Members of $all other than regexps are *equality matches*, not document\n  // matches.\n\n  nomatch({\n    a: {\n      $all: [{\n        b: 3\n      }]\n    }\n  }, {\n    a: [{\n      b: 3,\n      k: 4\n    }]\n  });\n  test.throws(function () {\n    match({\n      a: {\n        $all: [{\n          $gt: 4\n        }]\n      }\n    }, {});\n  }); // $exists\n\n  match({\n    a: {\n      $exists: true\n    }\n  }, {\n    a: 12\n  });\n  nomatch({\n    a: {\n      $exists: true\n    }\n  }, {\n    b: 12\n  });\n  nomatch({\n    a: {\n      $exists: false\n    }\n  }, {\n    a: 12\n  });\n  match({\n    a: {\n      $exists: false\n    }\n  }, {\n    b: 12\n  });\n  match({\n    a: {\n      $exists: true\n    }\n  }, {\n    a: []\n  });\n  nomatch({\n    a: {\n      $exists: true\n    }\n  }, {\n    b: []\n  });\n  nomatch({\n    a: {\n      $exists: false\n    }\n  }, {\n    a: []\n  });\n  match({\n    a: {\n      $exists: false\n    }\n  }, {\n    b: []\n  });\n  match({\n    a: {\n      $exists: true\n    }\n  }, {\n    a: [1]\n  });\n  nomatch({\n    a: {\n      $exists: true\n    }\n  }, {\n    b: [1]\n  });\n  nomatch({\n    a: {\n      $exists: false\n    }\n  }, {\n    a: [1]\n  });\n  match({\n    a: {\n      $exists: false\n    }\n  }, {\n    b: [1]\n  });\n  match({\n    a: {\n      $exists: 1\n    }\n  }, {\n    a: 5\n  });\n  match({\n    a: {\n      $exists: 0\n    }\n  }, {\n    b: 5\n  });\n  nomatch({\n    'a.x': {\n      $exists: false\n    }\n  }, {\n    a: [{}, {\n      x: 5\n    }]\n  });\n  match({\n    'a.x': {\n      $exists: true\n    }\n  }, {\n    a: [{}, {\n      x: 5\n    }]\n  });\n  match({\n    'a.x': {\n      $exists: true\n    }\n  }, {\n    a: [{}, {\n      x: 5\n    }]\n  });\n  match({\n    'a.x': {\n      $exists: true\n    }\n  }, {\n    a: {\n      x: []\n    }\n  });\n  match({\n    'a.x': {\n      $exists: true\n    }\n  }, {\n    a: {\n      x: null\n    }\n  }); // $mod\n\n  match({\n    a: {\n      $mod: [10, 1]\n    }\n  }, {\n    a: 11\n  });\n  nomatch({\n    a: {\n      $mod: [10, 1]\n    }\n  }, {\n    a: 12\n  });\n  match({\n    a: {\n      $mod: [10, 1]\n    }\n  }, {\n    a: [10, 11, 12]\n  });\n  nomatch({\n    a: {\n      $mod: [10, 1]\n    }\n  }, {\n    a: [10, 12]\n  });\n\n  _.each([5, [10], [10, 1, 2], \"foo\", {\n    bar: 1\n  }, []], function (badMod) {\n    test.throws(function () {\n      match({\n        a: {\n          $mod: badMod\n        }\n      }, {\n        a: 11\n      });\n    });\n  }); // $eq\n\n\n  nomatch({\n    a: {\n      $eq: 1\n    }\n  }, {\n    a: 2\n  });\n  match({\n    a: {\n      $eq: 2\n    }\n  }, {\n    a: 2\n  });\n  nomatch({\n    a: {\n      $eq: [1]\n    }\n  }, {\n    a: [2]\n  });\n  match({\n    a: {\n      $eq: [1, 2]\n    }\n  }, {\n    a: [1, 2]\n  });\n  match({\n    a: {\n      $eq: 1\n    }\n  }, {\n    a: [1, 2]\n  });\n  match({\n    a: {\n      $eq: 2\n    }\n  }, {\n    a: [1, 2]\n  });\n  nomatch({\n    a: {\n      $eq: 3\n    }\n  }, {\n    a: [1, 2]\n  });\n  match({\n    'a.b': {\n      $eq: 1\n    }\n  }, {\n    a: [{\n      b: 1\n    }, {\n      b: 2\n    }]\n  });\n  match({\n    'a.b': {\n      $eq: 2\n    }\n  }, {\n    a: [{\n      b: 1\n    }, {\n      b: 2\n    }]\n  });\n  nomatch({\n    'a.b': {\n      $eq: 3\n    }\n  }, {\n    a: [{\n      b: 1\n    }, {\n      b: 2\n    }]\n  });\n  match({\n    a: {\n      $eq: {\n        x: 1\n      }\n    }\n  }, {\n    a: {\n      x: 1\n    }\n  });\n  nomatch({\n    a: {\n      $eq: {\n        x: 1\n      }\n    }\n  }, {\n    a: {\n      x: 2\n    }\n  });\n  nomatch({\n    a: {\n      $eq: {\n        x: 1\n      }\n    }\n  }, {\n    a: {\n      x: 1,\n      y: 2\n    }\n  }); // $ne\n\n  match({\n    a: {\n      $ne: 1\n    }\n  }, {\n    a: 2\n  });\n  nomatch({\n    a: {\n      $ne: 2\n    }\n  }, {\n    a: 2\n  });\n  match({\n    a: {\n      $ne: [1]\n    }\n  }, {\n    a: [2]\n  });\n  nomatch({\n    a: {\n      $ne: [1, 2]\n    }\n  }, {\n    a: [1, 2]\n  }); // all tested against mongodb\n\n  nomatch({\n    a: {\n      $ne: 1\n    }\n  }, {\n    a: [1, 2]\n  });\n  nomatch({\n    a: {\n      $ne: 2\n    }\n  }, {\n    a: [1, 2]\n  });\n  match({\n    a: {\n      $ne: 3\n    }\n  }, {\n    a: [1, 2]\n  });\n  nomatch({\n    'a.b': {\n      $ne: 1\n    }\n  }, {\n    a: [{\n      b: 1\n    }, {\n      b: 2\n    }]\n  });\n  nomatch({\n    'a.b': {\n      $ne: 2\n    }\n  }, {\n    a: [{\n      b: 1\n    }, {\n      b: 2\n    }]\n  });\n  match({\n    'a.b': {\n      $ne: 3\n    }\n  }, {\n    a: [{\n      b: 1\n    }, {\n      b: 2\n    }]\n  });\n  nomatch({\n    a: {\n      $ne: {\n        x: 1\n      }\n    }\n  }, {\n    a: {\n      x: 1\n    }\n  });\n  match({\n    a: {\n      $ne: {\n        x: 1\n      }\n    }\n  }, {\n    a: {\n      x: 2\n    }\n  });\n  match({\n    a: {\n      $ne: {\n        x: 1\n      }\n    }\n  }, {\n    a: {\n      x: 1,\n      y: 2\n    }\n  }); // This query means: All 'a.b' must be non-5, and some 'a.b' must be >6.\n\n  match({\n    'a.b': {\n      $ne: 5,\n      $gt: 6\n    }\n  }, {\n    a: [{\n      b: 2\n    }, {\n      b: 10\n    }]\n  });\n  nomatch({\n    'a.b': {\n      $ne: 5,\n      $gt: 6\n    }\n  }, {\n    a: [{\n      b: 2\n    }, {\n      b: 4\n    }]\n  });\n  nomatch({\n    'a.b': {\n      $ne: 5,\n      $gt: 6\n    }\n  }, {\n    a: [{\n      b: 2\n    }, {\n      b: 5\n    }]\n  });\n  nomatch({\n    'a.b': {\n      $ne: 5,\n      $gt: 6\n    }\n  }, {\n    a: [{\n      b: 10\n    }, {\n      b: 5\n    }]\n  }); // Should work the same if the branch is at the bottom.\n\n  match({\n    a: {\n      $ne: 5,\n      $gt: 6\n    }\n  }, {\n    a: [2, 10]\n  });\n  nomatch({\n    a: {\n      $ne: 5,\n      $gt: 6\n    }\n  }, {\n    a: [2, 4]\n  });\n  nomatch({\n    a: {\n      $ne: 5,\n      $gt: 6\n    }\n  }, {\n    a: [2, 5]\n  });\n  nomatch({\n    a: {\n      $ne: 5,\n      $gt: 6\n    }\n  }, {\n    a: [10, 5]\n  }); // $in\n\n  match({\n    a: {\n      $in: [1, 2, 3]\n    }\n  }, {\n    a: 2\n  });\n  nomatch({\n    a: {\n      $in: [1, 2, 3]\n    }\n  }, {\n    a: 4\n  });\n  match({\n    a: {\n      $in: [[1], [2], [3]]\n    }\n  }, {\n    a: [2]\n  });\n  nomatch({\n    a: {\n      $in: [[1], [2], [3]]\n    }\n  }, {\n    a: [4]\n  });\n  match({\n    a: {\n      $in: [{\n        b: 1\n      }, {\n        b: 2\n      }, {\n        b: 3\n      }]\n    }\n  }, {\n    a: {\n      b: 2\n    }\n  });\n  nomatch({\n    a: {\n      $in: [{\n        b: 1\n      }, {\n        b: 2\n      }, {\n        b: 3\n      }]\n    }\n  }, {\n    a: {\n      b: 4\n    }\n  });\n  match({\n    a: {\n      $in: [1, 2, 3]\n    }\n  }, {\n    a: [2]\n  }); // tested against mongodb\n\n  match({\n    a: {\n      $in: [{\n        x: 1\n      }, {\n        x: 2\n      }, {\n        x: 3\n      }]\n    }\n  }, {\n    a: [{\n      x: 2\n    }]\n  });\n  match({\n    a: {\n      $in: [1, 2, 3]\n    }\n  }, {\n    a: [4, 2]\n  });\n  nomatch({\n    a: {\n      $in: [1, 2, 3]\n    }\n  }, {\n    a: [4]\n  });\n  match({\n    a: {\n      $in: ['x', /foo/i]\n    }\n  }, {\n    a: 'x'\n  });\n  match({\n    a: {\n      $in: ['x', /foo/i]\n    }\n  }, {\n    a: 'fOo'\n  });\n  match({\n    a: {\n      $in: ['x', /foo/i]\n    }\n  }, {\n    a: ['f', 'fOo']\n  });\n  nomatch({\n    a: {\n      $in: ['x', /foo/i]\n    }\n  }, {\n    a: ['f', 'fOx']\n  });\n  match({\n    a: {\n      $in: [1, null]\n    }\n  }, {});\n  match({\n    'a.b': {\n      $in: [1, null]\n    }\n  }, {});\n  match({\n    'a.b': {\n      $in: [1, null]\n    }\n  }, {\n    a: {}\n  });\n  match({\n    'a.b': {\n      $in: [1, null]\n    }\n  }, {\n    a: {\n      b: null\n    }\n  });\n  nomatch({\n    'a.b': {\n      $in: [1, null]\n    }\n  }, {\n    a: {\n      b: 5\n    }\n  });\n  nomatch({\n    'a.b': {\n      $in: [1]\n    }\n  }, {\n    a: {\n      b: null\n    }\n  });\n  nomatch({\n    'a.b': {\n      $in: [1]\n    }\n  }, {\n    a: {}\n  });\n  nomatch({\n    'a.b': {\n      $in: [1, null]\n    }\n  }, {\n    a: [{\n      b: 5\n    }]\n  });\n  match({\n    'a.b': {\n      $in: [1, null]\n    }\n  }, {\n    a: [{\n      b: 5\n    }, {}]\n  });\n  nomatch({\n    'a.b': {\n      $in: [1, null]\n    }\n  }, {\n    a: [{\n      b: 5\n    }, []]\n  });\n  nomatch({\n    'a.b': {\n      $in: [1, null]\n    }\n  }, {\n    a: [{\n      b: 5\n    }, 5]\n  }); // $nin\n\n  nomatch({\n    a: {\n      $nin: [1, 2, 3]\n    }\n  }, {\n    a: 2\n  });\n  match({\n    a: {\n      $nin: [1, 2, 3]\n    }\n  }, {\n    a: 4\n  });\n  nomatch({\n    a: {\n      $nin: [[1], [2], [3]]\n    }\n  }, {\n    a: [2]\n  });\n  match({\n    a: {\n      $nin: [[1], [2], [3]]\n    }\n  }, {\n    a: [4]\n  });\n  nomatch({\n    a: {\n      $nin: [{\n        b: 1\n      }, {\n        b: 2\n      }, {\n        b: 3\n      }]\n    }\n  }, {\n    a: {\n      b: 2\n    }\n  });\n  match({\n    a: {\n      $nin: [{\n        b: 1\n      }, {\n        b: 2\n      }, {\n        b: 3\n      }]\n    }\n  }, {\n    a: {\n      b: 4\n    }\n  });\n  nomatch({\n    a: {\n      $nin: [1, 2, 3]\n    }\n  }, {\n    a: [2]\n  }); // tested against mongodb\n\n  nomatch({\n    a: {\n      $nin: [{\n        x: 1\n      }, {\n        x: 2\n      }, {\n        x: 3\n      }]\n    }\n  }, {\n    a: [{\n      x: 2\n    }]\n  });\n  nomatch({\n    a: {\n      $nin: [1, 2, 3]\n    }\n  }, {\n    a: [4, 2]\n  });\n  nomatch({\n    'a.b': {\n      $nin: [1, 2, 3]\n    }\n  }, {\n    a: [{\n      b: 4\n    }, {\n      b: 2\n    }]\n  });\n  match({\n    a: {\n      $nin: [1, 2, 3]\n    }\n  }, {\n    a: [4]\n  });\n  match({\n    'a.b': {\n      $nin: [1, 2, 3]\n    }\n  }, {\n    a: [{\n      b: 4\n    }]\n  });\n  nomatch({\n    a: {\n      $nin: ['x', /foo/i]\n    }\n  }, {\n    a: 'x'\n  });\n  nomatch({\n    a: {\n      $nin: ['x', /foo/i]\n    }\n  }, {\n    a: 'fOo'\n  });\n  nomatch({\n    a: {\n      $nin: ['x', /foo/i]\n    }\n  }, {\n    a: ['f', 'fOo']\n  });\n  match({\n    a: {\n      $nin: ['x', /foo/i]\n    }\n  }, {\n    a: ['f', 'fOx']\n  });\n  nomatch({\n    a: {\n      $nin: [1, null]\n    }\n  }, {});\n  nomatch({\n    'a.b': {\n      $nin: [1, null]\n    }\n  }, {});\n  nomatch({\n    'a.b': {\n      $nin: [1, null]\n    }\n  }, {\n    a: {}\n  });\n  nomatch({\n    'a.b': {\n      $nin: [1, null]\n    }\n  }, {\n    a: {\n      b: null\n    }\n  });\n  match({\n    'a.b': {\n      $nin: [1, null]\n    }\n  }, {\n    a: {\n      b: 5\n    }\n  });\n  match({\n    'a.b': {\n      $nin: [1]\n    }\n  }, {\n    a: {\n      b: null\n    }\n  });\n  match({\n    'a.b': {\n      $nin: [1]\n    }\n  }, {\n    a: {}\n  });\n  match({\n    'a.b': {\n      $nin: [1, null]\n    }\n  }, {\n    a: [{\n      b: 5\n    }]\n  });\n  nomatch({\n    'a.b': {\n      $nin: [1, null]\n    }\n  }, {\n    a: [{\n      b: 5\n    }, {}]\n  });\n  match({\n    'a.b': {\n      $nin: [1, null]\n    }\n  }, {\n    a: [{\n      b: 5\n    }, []]\n  });\n  match({\n    'a.b': {\n      $nin: [1, null]\n    }\n  }, {\n    a: [{\n      b: 5\n    }, 5]\n  }); // $size\n\n  match({\n    a: {\n      $size: 0\n    }\n  }, {\n    a: []\n  });\n  match({\n    a: {\n      $size: 1\n    }\n  }, {\n    a: [2]\n  });\n  match({\n    a: {\n      $size: 2\n    }\n  }, {\n    a: [2, 2]\n  });\n  nomatch({\n    a: {\n      $size: 0\n    }\n  }, {\n    a: [2]\n  });\n  nomatch({\n    a: {\n      $size: 1\n    }\n  }, {\n    a: []\n  });\n  nomatch({\n    a: {\n      $size: 1\n    }\n  }, {\n    a: [2, 2]\n  });\n  nomatch({\n    a: {\n      $size: 0\n    }\n  }, {\n    a: \"2\"\n  });\n  nomatch({\n    a: {\n      $size: 1\n    }\n  }, {\n    a: \"2\"\n  });\n  nomatch({\n    a: {\n      $size: 2\n    }\n  }, {\n    a: \"2\"\n  });\n  nomatch({\n    a: {\n      $size: 2\n    }\n  }, {\n    a: [[2, 2]]\n  }); // tested against mongodb\n  // $bitsAllClear - number\n\n  match({\n    a: {\n      $bitsAllClear: [0, 1, 2, 3]\n    }\n  }, {\n    a: 0\n  });\n  match({\n    a: {\n      $bitsAllClear: [0, 1, 2, 3]\n    }\n  }, {\n    a: 16\n  });\n  nomatch({\n    a: {\n      $bitsAllClear: [0, 1, 2, 3]\n    }\n  }, {\n    a: 1\n  });\n  nomatch({\n    a: {\n      $bitsAllClear: [0, 1, 2, 3]\n    }\n  }, {\n    a: 2\n  });\n  nomatch({\n    a: {\n      $bitsAllClear: [0, 1, 2, 3]\n    }\n  }, {\n    a: 4\n  });\n  nomatch({\n    a: {\n      $bitsAllClear: [0, 1, 2, 3]\n    }\n  }, {\n    a: 8\n  }); // $bitsAllClear - buffer\n\n  match({\n    a: {\n      $bitsAllClear: new Uint8Array([3])\n    }\n  }, {\n    a: new Uint8Array([4])\n  });\n  match({\n    a: {\n      $bitsAllClear: new Uint8Array([0, 1])\n    }\n  }, {\n    a: new Uint8Array([255])\n  }); // 256 should not be set for 255.\n\n  match({\n    a: {\n      $bitsAllClear: new Uint8Array([3])\n    }\n  }, {\n    a: 4\n  });\n  match({\n    a: {\n      $bitsAllClear: new Uint8Array([3])\n    }\n  }, {\n    a: 0\n  }); // $bitsAllSet - number\n\n  match({\n    a: {\n      $bitsAllSet: [0, 1, 2, 3]\n    }\n  }, {\n    a: 15\n  });\n  nomatch({\n    a: {\n      $bitsAllSet: [0, 1, 2, 3]\n    }\n  }, {\n    a: 7\n  });\n  nomatch({\n    a: {\n      $bitsAllSet: [0, 1, 2, 3]\n    }\n  }, {\n    a: 256\n  });\n  nomatch({\n    a: {\n      $bitsAllSet: [0, 1, 2, 3]\n    }\n  }, {\n    a: 50000\n  });\n  match({\n    a: {\n      $bitsAllSet: [0, 1, 2]\n    }\n  }, {\n    a: 15\n  });\n  match({\n    a: {\n      $bitsAllSet: [0, 12]\n    }\n  }, {\n    a: 4097\n  });\n  nomatch({\n    a: {\n      $bitsAllSet: [0, 12]\n    }\n  }, {\n    a: 4096\n  });\n  nomatch({\n    a: {\n      $bitsAllSet: [0, 12]\n    }\n  }, {\n    a: 1\n  }); // $bitsAllSet - buffer\n\n  match({\n    a: {\n      $bitsAllSet: new Uint8Array([3])\n    }\n  }, {\n    a: new Uint8Array([3])\n  });\n  match({\n    a: {\n      $bitsAllSet: new Uint8Array([7])\n    }\n  }, {\n    a: new Uint8Array([15])\n  });\n  match({\n    a: {\n      $bitsAllSet: new Uint8Array([3])\n    }\n  }, {\n    a: 3\n  }); // $bitsAnySet - number\n\n  match({\n    a: {\n      $bitsAnySet: [0, 1, 2, 3]\n    }\n  }, {\n    a: 1\n  });\n  match({\n    a: {\n      $bitsAnySet: [0, 1, 2, 3]\n    }\n  }, {\n    a: 2\n  });\n  match({\n    a: {\n      $bitsAnySet: [0, 1, 2, 3]\n    }\n  }, {\n    a: 4\n  });\n  match({\n    a: {\n      $bitsAnySet: [0, 1, 2, 3]\n    }\n  }, {\n    a: 8\n  });\n  match({\n    a: {\n      $bitsAnySet: [4]\n    }\n  }, {\n    a: 16\n  });\n  nomatch({\n    a: {\n      $bitsAnySet: [0, 1, 2, 3]\n    }\n  }, {\n    a: 16\n  });\n  nomatch({\n    a: {\n      $bitsAnySet: [0, 1, 2, 3]\n    }\n  }, {\n    a: 0\n  }); // $bitsAnySet - buffer\n\n  match({\n    a: {\n      $bitsAnySet: new Uint8Array([3])\n    }\n  }, {\n    a: new Uint8Array([7])\n  });\n  match({\n    a: {\n      $bitsAnySet: new Uint8Array([15])\n    }\n  }, {\n    a: new Uint8Array([7])\n  });\n  match({\n    a: {\n      $bitsAnySet: new Uint8Array([3])\n    }\n  }, {\n    a: 1\n  }); // $bitsAnyClear - number\n\n  match({\n    a: {\n      $bitsAnyClear: [0, 1, 2, 3]\n    }\n  }, {\n    a: 0\n  });\n  match({\n    a: {\n      $bitsAnyClear: [0, 1, 2, 3]\n    }\n  }, {\n    a: 1\n  });\n  match({\n    a: {\n      $bitsAnyClear: [0, 1, 2, 3]\n    }\n  }, {\n    a: 2\n  });\n  match({\n    a: {\n      $bitsAnyClear: [0, 1, 2, 3]\n    }\n  }, {\n    a: 4\n  });\n  match({\n    a: {\n      $bitsAnyClear: [0, 1, 2, 3]\n    }\n  }, {\n    a: 8\n  });\n  match({\n    a: {\n      $bitsAnyClear: [0, 1, 2, 3]\n    }\n  }, {\n    a: 16\n  });\n  nomatch({\n    a: {\n      $bitsAnyClear: [0, 1, 2, 3]\n    }\n  }, {\n    a: 15\n  });\n  match({\n    a: {\n      $bitsAnyClear: [0, 1, 2, 3]\n    }\n  }, {\n    a: 7\n  });\n  nomatch({\n    a: {\n      $bitsAnyClear: [0, 1, 2]\n    }\n  }, {\n    a: 7\n  });\n  match({\n    a: {\n      $bitsAnyClear: [0, 1, 2, 3]\n    }\n  }, {\n    a: 3\n  });\n  nomatch({\n    a: {\n      $bitsAnyClear: [0, 1]\n    }\n  }, {\n    a: 3\n  });\n  match({\n    a: {\n      $bitsAnyClear: [0, 1, 2, 3]\n    }\n  }, {\n    a: 1\n  });\n  nomatch({\n    a: {\n      $bitsAnyClear: [0]\n    }\n  }, {\n    a: 1\n  });\n  nomatch({\n    a: {\n      $bitsAnyClear: [4]\n    }\n  }, {\n    a: 16\n  }); // $bitsAnyClear - buffer\n\n  match({\n    a: {\n      $bitsAnyClear: new Uint8Array([8])\n    }\n  }, {\n    a: new Uint8Array([7])\n  });\n  match({\n    a: {\n      $bitsAnyClear: new Uint8Array([1])\n    }\n  }, {\n    a: new Uint8Array([0])\n  });\n  match({\n    a: {\n      $bitsAnyClear: new Uint8Array([1])\n    }\n  }, {\n    a: 4\n  }); // taken from: https://github.com/mongodb/mongo/blob/master/jstests/core/bittest.js\n\n  var c = new LocalCollection();\n\n  function matchCount(query, count) {\n    var matches = c.find(query).count();\n\n    if (matches !== count) {\n      test.fail({\n        message: \"minimongo match count failure: matched \" + matches + \" times, but should match \" + count + \" times\",\n        query: JSON.stringify(query),\n        count: JSON.stringify(count)\n      });\n    }\n  } // Tests on numbers.\n\n\n  c.insert({\n    a: 0\n  });\n  c.insert({\n    a: 1\n  });\n  c.insert({\n    a: 54\n  });\n  c.insert({\n    a: 88\n  });\n  c.insert({\n    a: 255\n  }); // Tests with bitmask.\n\n  matchCount({\n    a: {\n      $bitsAllSet: 0\n    }\n  }, 5);\n  matchCount({\n    a: {\n      $bitsAllSet: 1\n    }\n  }, 2);\n  matchCount({\n    a: {\n      $bitsAllSet: 16\n    }\n  }, 3);\n  matchCount({\n    a: {\n      $bitsAllSet: 54\n    }\n  }, 2);\n  matchCount({\n    a: {\n      $bitsAllSet: 55\n    }\n  }, 1);\n  matchCount({\n    a: {\n      $bitsAllSet: 88\n    }\n  }, 2);\n  matchCount({\n    a: {\n      $bitsAllSet: 255\n    }\n  }, 1);\n  matchCount({\n    a: {\n      $bitsAllClear: 0\n    }\n  }, 5);\n  matchCount({\n    a: {\n      $bitsAllClear: 1\n    }\n  }, 3);\n  matchCount({\n    a: {\n      $bitsAllClear: 16\n    }\n  }, 2);\n  matchCount({\n    a: {\n      $bitsAllClear: 129\n    }\n  }, 3);\n  matchCount({\n    a: {\n      $bitsAllClear: 255\n    }\n  }, 1);\n  matchCount({\n    a: {\n      $bitsAnySet: 0\n    }\n  }, 0);\n  matchCount({\n    a: {\n      $bitsAnySet: 9\n    }\n  }, 3);\n  matchCount({\n    a: {\n      $bitsAnySet: 255\n    }\n  }, 4);\n  matchCount({\n    a: {\n      $bitsAnyClear: 0\n    }\n  }, 0);\n  matchCount({\n    a: {\n      $bitsAnyClear: 18\n    }\n  }, 3);\n  matchCount({\n    a: {\n      $bitsAnyClear: 24\n    }\n  }, 3);\n  matchCount({\n    a: {\n      $bitsAnyClear: 255\n    }\n  }, 4); // Tests with array of bit positions.\n\n  matchCount({\n    a: {\n      $bitsAllSet: []\n    }\n  }, 5);\n  matchCount({\n    a: {\n      $bitsAllSet: [0]\n    }\n  }, 2);\n  matchCount({\n    a: {\n      $bitsAllSet: [4]\n    }\n  }, 3);\n  matchCount({\n    a: {\n      $bitsAllSet: [1, 2, 4, 5]\n    }\n  }, 2);\n  matchCount({\n    a: {\n      $bitsAllSet: [0, 1, 2, 4, 5]\n    }\n  }, 1);\n  matchCount({\n    a: {\n      $bitsAllSet: [3, 4, 6]\n    }\n  }, 2);\n  matchCount({\n    a: {\n      $bitsAllSet: [0, 1, 2, 3, 4, 5, 6, 7]\n    }\n  }, 1);\n  matchCount({\n    a: {\n      $bitsAllClear: []\n    }\n  }, 5);\n  matchCount({\n    a: {\n      $bitsAllClear: [0]\n    }\n  }, 3);\n  matchCount({\n    a: {\n      $bitsAllClear: [4]\n    }\n  }, 2);\n  matchCount({\n    a: {\n      $bitsAllClear: [1, 7]\n    }\n  }, 3);\n  matchCount({\n    a: {\n      $bitsAllClear: [0, 1, 2, 3, 4, 5, 6, 7]\n    }\n  }, 1);\n  matchCount({\n    a: {\n      $bitsAnySet: []\n    }\n  }, 0);\n  matchCount({\n    a: {\n      $bitsAnySet: [1, 3]\n    }\n  }, 3);\n  matchCount({\n    a: {\n      $bitsAnySet: [0, 1, 2, 3, 4, 5, 6, 7]\n    }\n  }, 4);\n  matchCount({\n    a: {\n      $bitsAnyClear: []\n    }\n  }, 0);\n  matchCount({\n    a: {\n      $bitsAnyClear: [1, 4]\n    }\n  }, 3);\n  matchCount({\n    a: {\n      $bitsAnyClear: [3, 4]\n    }\n  }, 3);\n  matchCount({\n    a: {\n      $bitsAnyClear: [0, 1, 2, 3, 4, 5, 6, 7]\n    }\n  }, 4); // Tests with multiple predicates.\n\n  matchCount({\n    a: {\n      $bitsAllSet: 54,\n      $bitsAllClear: 201\n    }\n  }, 1); // Tests on negative numbers\n\n  c.remove({});\n  c.insert({\n    a: -0\n  });\n  c.insert({\n    a: -1\n  });\n  c.insert({\n    a: -54\n  }); // Tests with bitmask.\n\n  matchCount({\n    a: {\n      $bitsAllSet: 0\n    }\n  }, 3);\n  matchCount({\n    a: {\n      $bitsAllSet: 2\n    }\n  }, 2);\n  matchCount({\n    a: {\n      $bitsAllSet: 127\n    }\n  }, 1);\n  matchCount({\n    a: {\n      $bitsAllSet: 74\n    }\n  }, 2);\n  matchCount({\n    a: {\n      $bitsAllClear: 0\n    }\n  }, 3);\n  matchCount({\n    a: {\n      $bitsAllClear: 53\n    }\n  }, 2);\n  matchCount({\n    a: {\n      $bitsAllClear: 127\n    }\n  }, 1);\n  matchCount({\n    a: {\n      $bitsAnySet: 0\n    }\n  }, 0);\n  matchCount({\n    a: {\n      $bitsAnySet: 2\n    }\n  }, 2);\n  matchCount({\n    a: {\n      $bitsAnySet: 127\n    }\n  }, 2);\n  matchCount({\n    a: {\n      $bitsAnyClear: 0\n    }\n  }, 0);\n  matchCount({\n    a: {\n      $bitsAnyClear: 53\n    }\n  }, 2);\n  matchCount({\n    a: {\n      $bitsAnyClear: 127\n    }\n  }, 2); // Tests with array of bit positions.\n\n  var allPositions = [];\n\n  for (var i = 0; i < 64; i++) {\n    allPositions.push(i);\n  }\n\n  matchCount({\n    a: {\n      $bitsAllSet: []\n    }\n  }, 3);\n  matchCount({\n    a: {\n      $bitsAllSet: [1]\n    }\n  }, 2);\n  matchCount({\n    a: {\n      $bitsAllSet: allPositions\n    }\n  }, 1);\n  matchCount({\n    a: {\n      $bitsAllSet: [1, 7, 6, 3, 100]\n    }\n  }, 2);\n  matchCount({\n    a: {\n      $bitsAllClear: []\n    }\n  }, 3);\n  matchCount({\n    a: {\n      $bitsAllClear: [5, 4, 2, 0]\n    }\n  }, 2);\n  matchCount({\n    a: {\n      $bitsAllClear: allPositions\n    }\n  }, 1);\n  matchCount({\n    a: {\n      $bitsAnySet: []\n    }\n  }, 0);\n  matchCount({\n    a: {\n      $bitsAnySet: [1]\n    }\n  }, 2);\n  matchCount({\n    a: {\n      $bitsAnySet: allPositions\n    }\n  }, 2);\n  matchCount({\n    a: {\n      $bitsAnyClear: []\n    }\n  }, 0);\n  matchCount({\n    a: {\n      $bitsAnyClear: [0, 2, 4, 5, 100]\n    }\n  }, 2);\n  matchCount({\n    a: {\n      $bitsAnyClear: allPositions\n    }\n  }, 2); // Tests with multiple predicates.\n\n  matchCount({\n    a: {\n      $bitsAllSet: 74,\n      $bitsAllClear: 53\n    }\n  }, 1); // Tests on BinData.\n\n  c.remove({});\n  c.insert({\n    a: EJSON.parse('{\"$binary\": \"AAAAAAAAAAAAAAAAAAAAAAAAAAAA\"}')\n  });\n  c.insert({\n    a: EJSON.parse('{\"$binary\": \"AANgAAAAAAAAAAAAAAAAAAAAAAAA\"}')\n  });\n  c.insert({\n    a: EJSON.parse('{\"$binary\": \"JANgqwetkqwklEWRbWERKKJREtbq\"}')\n  });\n  c.insert({\n    a: EJSON.parse('{\"$binary\": \"////////////////////////////\"}')\n  }); // Tests with binary string bitmask.\n\n  matchCount({\n    a: {\n      $bitsAllSet: EJSON.parse('{\"$binary\": \"AAAAAAAAAAAAAAAAAAAAAAAAAAAA\"}')\n    }\n  }, 4);\n  matchCount({\n    a: {\n      $bitsAllSet: EJSON.parse('{\"$binary\": \"AANgAAAAAAAAAAAAAAAAAAAAAAAA\"}')\n    }\n  }, 3);\n  matchCount({\n    a: {\n      $bitsAllSet: EJSON.parse('{\"$binary\": \"JANgqwetkqwklEWRbWERKKJREtbq\"}')\n    }\n  }, 2);\n  matchCount({\n    a: {\n      $bitsAllSet: EJSON.parse('{\"$binary\": \"////////////////////////////\"}')\n    }\n  }, 1);\n  matchCount({\n    a: {\n      $bitsAllClear: EJSON.parse('{\"$binary\": \"AAAAAAAAAAAAAAAAAAAAAAAAAAAA\"}')\n    }\n  }, 4);\n  matchCount({\n    a: {\n      $bitsAllClear: EJSON.parse('{\"$binary\": \"AAyfAAAAAAAAAAAAAAAAAAAAAAAA\"}')\n    }\n  }, 3);\n  matchCount({\n    a: {\n      $bitsAllClear: EJSON.parse('{\"$binary\": \"JAyfqwetkqwklEWRbWERKKJREtbq\"}')\n    }\n  }, 2);\n  matchCount({\n    a: {\n      $bitsAllClear: EJSON.parse('{\"$binary\": \"////////////////////////////\"}')\n    }\n  }, 1);\n  matchCount({\n    a: {\n      $bitsAnySet: EJSON.parse('{\"$binary\": \"AAAAAAAAAAAAAAAAAAAAAAAAAAAA\"}')\n    }\n  }, 0);\n  matchCount({\n    a: {\n      $bitsAnySet: EJSON.parse('{\"$binary\": \"AAyfAAAAAAAAAAAAAAAAAAAAAAAA\"}')\n    }\n  }, 1);\n  matchCount({\n    a: {\n      $bitsAnySet: EJSON.parse('{\"$binary\": \"JAyfqwetkqwklEWRbWERKKJREtbq\"}')\n    }\n  }, 2);\n  matchCount({\n    a: {\n      $bitsAnySet: EJSON.parse('{\"$binary\": \"////////////////////////////\"}')\n    }\n  }, 3);\n  matchCount({\n    a: {\n      $bitsAnyClear: EJSON.parse('{\"$binary\": \"AAAAAAAAAAAAAAAAAAAAAAAAAAAA\"}')\n    }\n  }, 0);\n  matchCount({\n    a: {\n      $bitsAnyClear: EJSON.parse('{\"$binary\": \"AANgAAAAAAAAAAAAAAAAAAAAAAAA\"}')\n    }\n  }, 1);\n  matchCount({\n    a: {\n      $bitsAnyClear: EJSON.parse('{\"$binary\": \"JANgqwetkqwklEWRbWERKKJREtbq\"}')\n    }\n  }, 2);\n  matchCount({\n    a: {\n      $bitsAnyClear: EJSON.parse('{\"$binary\": \"////////////////////////////\"}')\n    }\n  }, 3); // Tests with multiple predicates.\n\n  matchCount({\n    a: {\n      $bitsAllSet: EJSON.parse('{\"$binary\": \"AANgAAAAAAAAAAAAAAAAAAAAAAAA\"}'),\n      $bitsAllClear: EJSON.parse('{\"$binary\": \"//yf////////////////////////\"}')\n    }\n  }, 1);\n  c.remove({});\n  nomatch({\n    a: {\n      $bitsAllSet: 1\n    }\n  }, {\n    a: false\n  });\n  nomatch({\n    a: {\n      $bitsAllSet: 1\n    }\n  }, {\n    a: NaN\n  });\n  nomatch({\n    a: {\n      $bitsAllSet: 1\n    }\n  }, {\n    a: Infinity\n  });\n  nomatch({\n    a: {\n      $bitsAllSet: 1\n    }\n  }, {\n    a: null\n  });\n  nomatch({\n    a: {\n      $bitsAllSet: 1\n    }\n  }, {\n    a: 'asdf'\n  });\n  nomatch({\n    a: {\n      $bitsAllSet: 1\n    }\n  }, {\n    a: ['a', 'b']\n  });\n  nomatch({\n    a: {\n      $bitsAllSet: 1\n    }\n  }, {\n    a: {\n      foo: 'bar'\n    }\n  });\n  nomatch({\n    a: {\n      $bitsAllSet: 1\n    }\n  }, {\n    a: 1.2\n  });\n  nomatch({\n    a: {\n      $bitsAllSet: 1\n    }\n  }, {\n    a: \"1\"\n  });\n\n  _.each([false, NaN, Infinity, null, 'asdf', ['a', 'b'], {\n    foo: 'bar'\n  }, 1.2, \"1\", [0, -1]], function (badValue) {\n    test.throws(function () {\n      match({\n        a: {\n          $bitsAllSet: badValue\n        }\n      }, {\n        a: 42\n      });\n    });\n  }); // $type\n\n\n  match({\n    a: {\n      $type: 1\n    }\n  }, {\n    a: 1.1\n  });\n  match({\n    a: {\n      $type: 1\n    }\n  }, {\n    a: 1\n  });\n  nomatch({\n    a: {\n      $type: 1\n    }\n  }, {\n    a: \"1\"\n  });\n  match({\n    a: {\n      $type: 2\n    }\n  }, {\n    a: \"1\"\n  });\n  nomatch({\n    a: {\n      $type: 2\n    }\n  }, {\n    a: 1\n  });\n  match({\n    a: {\n      $type: 3\n    }\n  }, {\n    a: {}\n  });\n  match({\n    a: {\n      $type: 3\n    }\n  }, {\n    a: {\n      b: 2\n    }\n  });\n  nomatch({\n    a: {\n      $type: 3\n    }\n  }, {\n    a: []\n  });\n  nomatch({\n    a: {\n      $type: 3\n    }\n  }, {\n    a: [1]\n  });\n  nomatch({\n    a: {\n      $type: 3\n    }\n  }, {\n    a: null\n  });\n  match({\n    a: {\n      $type: 5\n    }\n  }, {\n    a: EJSON.newBinary(0)\n  });\n  match({\n    a: {\n      $type: 5\n    }\n  }, {\n    a: EJSON.newBinary(4)\n  });\n  nomatch({\n    a: {\n      $type: 5\n    }\n  }, {\n    a: []\n  });\n  nomatch({\n    a: {\n      $type: 5\n    }\n  }, {\n    a: [42]\n  });\n  match({\n    a: {\n      $type: 7\n    }\n  }, {\n    a: new MongoID.ObjectID()\n  });\n  nomatch({\n    a: {\n      $type: 7\n    }\n  }, {\n    a: \"1234567890abcd1234567890\"\n  });\n  match({\n    a: {\n      $type: 8\n    }\n  }, {\n    a: true\n  });\n  match({\n    a: {\n      $type: 8\n    }\n  }, {\n    a: false\n  });\n  nomatch({\n    a: {\n      $type: 8\n    }\n  }, {\n    a: \"true\"\n  });\n  nomatch({\n    a: {\n      $type: 8\n    }\n  }, {\n    a: 0\n  });\n  nomatch({\n    a: {\n      $type: 8\n    }\n  }, {\n    a: null\n  });\n  nomatch({\n    a: {\n      $type: 8\n    }\n  }, {\n    a: ''\n  });\n  nomatch({\n    a: {\n      $type: 8\n    }\n  }, {});\n  match({\n    a: {\n      $type: 9\n    }\n  }, {\n    a: new Date()\n  });\n  nomatch({\n    a: {\n      $type: 9\n    }\n  }, {\n    a: +new Date()\n  });\n  match({\n    a: {\n      $type: 10\n    }\n  }, {\n    a: null\n  });\n  nomatch({\n    a: {\n      $type: 10\n    }\n  }, {\n    a: false\n  });\n  nomatch({\n    a: {\n      $type: 10\n    }\n  }, {\n    a: ''\n  });\n  nomatch({\n    a: {\n      $type: 10\n    }\n  }, {\n    a: 0\n  });\n  nomatch({\n    a: {\n      $type: 10\n    }\n  }, {});\n  match({\n    a: {\n      $type: 11\n    }\n  }, {\n    a: /x/\n  });\n  nomatch({\n    a: {\n      $type: 11\n    }\n  }, {\n    a: 'x'\n  });\n  nomatch({\n    a: {\n      $type: 11\n    }\n  }, {}); // The normal rule for {$type:4} (4 means array) is that it NOT good enough to\n  // just have an array that's the leaf that matches the path.  (An array inside\n  // that array is good, though.)\n\n  nomatch({\n    a: {\n      $type: 4\n    }\n  }, {\n    a: []\n  });\n  nomatch({\n    a: {\n      $type: 4\n    }\n  }, {\n    a: [1]\n  }); // tested against mongodb\n\n  match({\n    a: {\n      $type: 1\n    }\n  }, {\n    a: [1]\n  });\n  nomatch({\n    a: {\n      $type: 2\n    }\n  }, {\n    a: [1]\n  });\n  match({\n    a: {\n      $type: 1\n    }\n  }, {\n    a: [\"1\", 1]\n  });\n  match({\n    a: {\n      $type: 2\n    }\n  }, {\n    a: [\"1\", 1]\n  });\n  nomatch({\n    a: {\n      $type: 3\n    }\n  }, {\n    a: [\"1\", 1]\n  });\n  nomatch({\n    a: {\n      $type: 4\n    }\n  }, {\n    a: [\"1\", 1]\n  });\n  nomatch({\n    a: {\n      $type: 1\n    }\n  }, {\n    a: [\"1\", []]\n  });\n  match({\n    a: {\n      $type: 2\n    }\n  }, {\n    a: [\"1\", []]\n  });\n  match({\n    a: {\n      $type: 4\n    }\n  }, {\n    a: [\"1\", []]\n  }); // tested against mongodb\n  // An exception to the normal rule is that an array found via numeric index is\n  // examined itself, and its elements are not.\n\n  match({\n    'a.0': {\n      $type: 4\n    }\n  }, {\n    a: [[0]]\n  });\n  nomatch({\n    'a.0': {\n      $type: 1\n    }\n  }, {\n    a: [[0]]\n  }); // regular expressions\n\n  match({\n    a: /a/\n  }, {\n    a: 'cat'\n  });\n  nomatch({\n    a: /a/\n  }, {\n    a: 'cut'\n  });\n  nomatch({\n    a: /a/\n  }, {\n    a: 'CAT'\n  });\n  match({\n    a: /a/i\n  }, {\n    a: 'CAT'\n  });\n  match({\n    a: /a/\n  }, {\n    a: ['foo', 'bar']\n  }); // search within array...\n\n  nomatch({\n    a: /,/\n  }, {\n    a: ['foo', 'bar']\n  }); // but not by stringifying\n\n  match({\n    a: {\n      $regex: 'a'\n    }\n  }, {\n    a: ['foo', 'bar']\n  });\n  nomatch({\n    a: {\n      $regex: ','\n    }\n  }, {\n    a: ['foo', 'bar']\n  });\n  match({\n    a: {\n      $regex: /a/\n    }\n  }, {\n    a: 'cat'\n  });\n  nomatch({\n    a: {\n      $regex: /a/\n    }\n  }, {\n    a: 'cut'\n  });\n  nomatch({\n    a: {\n      $regex: /a/\n    }\n  }, {\n    a: 'CAT'\n  });\n  match({\n    a: {\n      $regex: /a/i\n    }\n  }, {\n    a: 'CAT'\n  });\n  match({\n    a: {\n      $regex: /a/,\n      $options: 'i'\n    }\n  }, {\n    a: 'CAT'\n  }); // tested\n\n  match({\n    a: {\n      $regex: /a/i,\n      $options: 'i'\n    }\n  }, {\n    a: 'CAT'\n  }); // tested\n\n  nomatch({\n    a: {\n      $regex: /a/i,\n      $options: ''\n    }\n  }, {\n    a: 'CAT'\n  }); // tested\n\n  match({\n    a: {\n      $regex: 'a'\n    }\n  }, {\n    a: 'cat'\n  });\n  nomatch({\n    a: {\n      $regex: 'a'\n    }\n  }, {\n    a: 'cut'\n  });\n  nomatch({\n    a: {\n      $regex: 'a'\n    }\n  }, {\n    a: 'CAT'\n  });\n  match({\n    a: {\n      $regex: 'a',\n      $options: 'i'\n    }\n  }, {\n    a: 'CAT'\n  });\n  match({\n    a: {\n      $regex: '',\n      $options: 'i'\n    }\n  }, {\n    a: 'foo'\n  });\n  nomatch({\n    a: {\n      $regex: '',\n      $options: 'i'\n    }\n  }, {});\n  nomatch({\n    a: {\n      $regex: '',\n      $options: 'i'\n    }\n  }, {\n    a: 5\n  });\n  nomatch({\n    a: /undefined/\n  }, {});\n  nomatch({\n    a: {\n      $regex: 'undefined'\n    }\n  }, {});\n  nomatch({\n    a: /xxx/\n  }, {});\n  nomatch({\n    a: {\n      $regex: 'xxx'\n    }\n  }, {}); // GitHub issue #2817:\n  // Regexps with a global flag ('g') keep a state when tested against the same\n  // string. Selector shouldn't return different result for similar documents\n  // because of this state.\n\n  var reusedRegexp = /sh/ig;\n  match({\n    a: reusedRegexp\n  }, {\n    a: 'Shorts'\n  });\n  match({\n    a: reusedRegexp\n  }, {\n    a: 'Shorts'\n  });\n  match({\n    a: reusedRegexp\n  }, {\n    a: 'Shorts'\n  });\n  match({\n    a: {\n      $regex: reusedRegexp\n    }\n  }, {\n    a: 'Shorts'\n  });\n  match({\n    a: {\n      $regex: reusedRegexp\n    }\n  }, {\n    a: 'Shorts'\n  });\n  match({\n    a: {\n      $regex: reusedRegexp\n    }\n  }, {\n    a: 'Shorts'\n  });\n  test.throws(function () {\n    match({\n      a: {\n        $options: 'i'\n      }\n    }, {\n      a: 12\n    });\n  });\n  match({\n    a: /a/\n  }, {\n    a: ['dog', 'cat']\n  });\n  nomatch({\n    a: /a/\n  }, {\n    a: ['dog', 'puppy']\n  }); // we don't support regexps in minimongo very well (eg, there's no EJSON\n  // encoding so it won't go over the wire), but run these tests anyway\n\n  match({\n    a: /a/\n  }, {\n    a: /a/\n  });\n  match({\n    a: /a/\n  }, {\n    a: ['x', /a/]\n  });\n  nomatch({\n    a: /a/\n  }, {\n    a: /a/i\n  });\n  nomatch({\n    a: /a/m\n  }, {\n    a: /a/\n  });\n  nomatch({\n    a: /a/\n  }, {\n    a: /b/\n  });\n  nomatch({\n    a: /5/\n  }, {\n    a: 5\n  });\n  nomatch({\n    a: /t/\n  }, {\n    a: true\n  });\n  match({\n    a: /m/i\n  }, {\n    a: ['x', 'xM']\n  });\n  test.throws(function () {\n    match({\n      a: {\n        $regex: /a/,\n        $options: 'x'\n      }\n    }, {\n      a: 'cat'\n    });\n  });\n  test.throws(function () {\n    match({\n      a: {\n        $regex: /a/,\n        $options: 's'\n      }\n    }, {\n      a: 'cat'\n    });\n  }); // $not\n\n  match({\n    x: {\n      $not: {\n        $gt: 7\n      }\n    }\n  }, {\n    x: 6\n  });\n  nomatch({\n    x: {\n      $not: {\n        $gt: 7\n      }\n    }\n  }, {\n    x: 8\n  });\n  match({\n    x: {\n      $not: {\n        $lt: 10,\n        $gt: 7\n      }\n    }\n  }, {\n    x: 11\n  });\n  nomatch({\n    x: {\n      $not: {\n        $lt: 10,\n        $gt: 7\n      }\n    }\n  }, {\n    x: 9\n  });\n  match({\n    x: {\n      $not: {\n        $lt: 10,\n        $gt: 7\n      }\n    }\n  }, {\n    x: 6\n  });\n  match({\n    x: {\n      $not: {\n        $gt: 7\n      }\n    }\n  }, {\n    x: [2, 3, 4]\n  });\n  match({\n    'x.y': {\n      $not: {\n        $gt: 7\n      }\n    }\n  }, {\n    x: [{\n      y: 2\n    }, {\n      y: 3\n    }, {\n      y: 4\n    }]\n  });\n  nomatch({\n    x: {\n      $not: {\n        $gt: 7\n      }\n    }\n  }, {\n    x: [2, 3, 4, 10]\n  });\n  nomatch({\n    'x.y': {\n      $not: {\n        $gt: 7\n      }\n    }\n  }, {\n    x: [{\n      y: 2\n    }, {\n      y: 3\n    }, {\n      y: 4\n    }, {\n      y: 10\n    }]\n  });\n  match({\n    x: {\n      $not: /a/\n    }\n  }, {\n    x: \"dog\"\n  });\n  nomatch({\n    x: {\n      $not: /a/\n    }\n  }, {\n    x: \"cat\"\n  });\n  match({\n    x: {\n      $not: /a/\n    }\n  }, {\n    x: [\"dog\", \"puppy\"]\n  });\n  nomatch({\n    x: {\n      $not: /a/\n    }\n  }, {\n    x: [\"kitten\", \"cat\"]\n  }); // dotted keypaths: bare values\n\n  match({\n    \"a.b\": 1\n  }, {\n    a: {\n      b: 1\n    }\n  });\n  nomatch({\n    \"a.b\": 1\n  }, {\n    a: {\n      b: 2\n    }\n  });\n  match({\n    \"a.b\": [1, 2, 3]\n  }, {\n    a: {\n      b: [1, 2, 3]\n    }\n  });\n  nomatch({\n    \"a.b\": [1, 2, 3]\n  }, {\n    a: {\n      b: [4]\n    }\n  });\n  match({\n    \"a.b\": /a/\n  }, {\n    a: {\n      b: \"cat\"\n    }\n  });\n  nomatch({\n    \"a.b\": /a/\n  }, {\n    a: {\n      b: \"dog\"\n    }\n  });\n  match({\n    \"a.b.c\": null\n  }, {});\n  match({\n    \"a.b.c\": null\n  }, {\n    a: 1\n  });\n  match({\n    \"a.b\": null\n  }, {\n    a: 1\n  });\n  match({\n    \"a.b.c\": null\n  }, {\n    a: {\n      b: 4\n    }\n  }); // dotted keypaths, nulls, numeric indices, arrays\n\n  nomatch({\n    \"a.b\": null\n  }, {\n    a: [1]\n  });\n  match({\n    \"a.b\": []\n  }, {\n    a: {\n      b: []\n    }\n  });\n  var big = {\n    a: [{\n      b: 1\n    }, 2, {}, {\n      b: [3, 4]\n    }]\n  };\n  match({\n    \"a.b\": 1\n  }, big);\n  match({\n    \"a.b\": [3, 4]\n  }, big);\n  match({\n    \"a.b\": 3\n  }, big);\n  match({\n    \"a.b\": 4\n  }, big);\n  match({\n    \"a.b\": null\n  }, big); // matches on slot 2\n\n  match({\n    'a.1': 8\n  }, {\n    a: [7, 8, 9]\n  });\n  nomatch({\n    'a.1': 7\n  }, {\n    a: [7, 8, 9]\n  });\n  nomatch({\n    'a.1': null\n  }, {\n    a: [7, 8, 9]\n  });\n  match({\n    'a.1': [8, 9]\n  }, {\n    a: [7, [8, 9]]\n  });\n  nomatch({\n    'a.1': 6\n  }, {\n    a: [[6, 7], [8, 9]]\n  });\n  nomatch({\n    'a.1': 7\n  }, {\n    a: [[6, 7], [8, 9]]\n  });\n  nomatch({\n    'a.1': 8\n  }, {\n    a: [[6, 7], [8, 9]]\n  });\n  nomatch({\n    'a.1': 9\n  }, {\n    a: [[6, 7], [8, 9]]\n  });\n  match({\n    \"a.1\": 2\n  }, {\n    a: [0, {\n      1: 2\n    }, 3]\n  });\n  match({\n    \"a.1\": {\n      1: 2\n    }\n  }, {\n    a: [0, {\n      1: 2\n    }, 3]\n  });\n  match({\n    \"x.1.y\": 8\n  }, {\n    x: [7, {\n      y: 8\n    }, 9]\n  }); // comes from trying '1' as key in the plain object\n\n  match({\n    \"x.1.y\": null\n  }, {\n    x: [7, {\n      y: 8\n    }, 9]\n  });\n  match({\n    \"a.1.b\": 9\n  }, {\n    a: [7, {\n      b: 9\n    }, {\n      1: {\n        b: 'foo'\n      }\n    }]\n  });\n  match({\n    \"a.1.b\": 'foo'\n  }, {\n    a: [7, {\n      b: 9\n    }, {\n      1: {\n        b: 'foo'\n      }\n    }]\n  });\n  match({\n    \"a.1.b\": null\n  }, {\n    a: [7, {\n      b: 9\n    }, {\n      1: {\n        b: 'foo'\n      }\n    }]\n  });\n  match({\n    \"a.1.b\": 2\n  }, {\n    a: [1, [{\n      b: 2\n    }], 3]\n  });\n  nomatch({\n    \"a.1.b\": null\n  }, {\n    a: [1, [{\n      b: 2\n    }], 3]\n  }); // this is new behavior in mongo 2.5\n\n  nomatch({\n    \"a.0.b\": null\n  }, {\n    a: [5]\n  });\n  match({\n    \"a.1\": 4\n  }, {\n    a: [{\n      1: 4\n    }, 5]\n  });\n  match({\n    \"a.1\": 5\n  }, {\n    a: [{\n      1: 4\n    }, 5]\n  });\n  nomatch({\n    \"a.1\": null\n  }, {\n    a: [{\n      1: 4\n    }, 5]\n  });\n  match({\n    \"a.1.foo\": 4\n  }, {\n    a: [{\n      1: {\n        foo: 4\n      }\n    }, {\n      foo: 5\n    }]\n  });\n  match({\n    \"a.1.foo\": 5\n  }, {\n    a: [{\n      1: {\n        foo: 4\n      }\n    }, {\n      foo: 5\n    }]\n  });\n  match({\n    \"a.1.foo\": null\n  }, {\n    a: [{\n      1: {\n        foo: 4\n      }\n    }, {\n      foo: 5\n    }]\n  }); // trying to access a dotted field that is undefined at some point\n  // down the chain\n\n  nomatch({\n    \"a.b\": 1\n  }, {\n    x: 2\n  });\n  nomatch({\n    \"a.b.c\": 1\n  }, {\n    a: {\n      x: 2\n    }\n  });\n  nomatch({\n    \"a.b.c\": 1\n  }, {\n    a: {\n      b: {\n        x: 2\n      }\n    }\n  });\n  nomatch({\n    \"a.b.c\": 1\n  }, {\n    a: {\n      b: 1\n    }\n  });\n  nomatch({\n    \"a.b.c\": 1\n  }, {\n    a: {\n      b: 0\n    }\n  }); // dotted keypaths: literal objects\n\n  match({\n    \"a.b\": {\n      c: 1\n    }\n  }, {\n    a: {\n      b: {\n        c: 1\n      }\n    }\n  });\n  nomatch({\n    \"a.b\": {\n      c: 1\n    }\n  }, {\n    a: {\n      b: {\n        c: 2\n      }\n    }\n  });\n  nomatch({\n    \"a.b\": {\n      c: 1\n    }\n  }, {\n    a: {\n      b: 2\n    }\n  });\n  match({\n    \"a.b\": {\n      c: 1,\n      d: 2\n    }\n  }, {\n    a: {\n      b: {\n        c: 1,\n        d: 2\n      }\n    }\n  });\n  nomatch({\n    \"a.b\": {\n      c: 1,\n      d: 2\n    }\n  }, {\n    a: {\n      b: {\n        c: 1,\n        d: 1\n      }\n    }\n  });\n  nomatch({\n    \"a.b\": {\n      c: 1,\n      d: 2\n    }\n  }, {\n    a: {\n      b: {\n        d: 2\n      }\n    }\n  }); // dotted keypaths: $ operators\n\n  match({\n    \"a.b\": {\n      $in: [1, 2, 3]\n    }\n  }, {\n    a: {\n      b: [2]\n    }\n  }); // tested against mongodb\n\n  match({\n    \"a.b\": {\n      $in: [{\n        x: 1\n      }, {\n        x: 2\n      }, {\n        x: 3\n      }]\n    }\n  }, {\n    a: {\n      b: [{\n        x: 2\n      }]\n    }\n  });\n  match({\n    \"a.b\": {\n      $in: [1, 2, 3]\n    }\n  }, {\n    a: {\n      b: [4, 2]\n    }\n  });\n  nomatch({\n    \"a.b\": {\n      $in: [1, 2, 3]\n    }\n  }, {\n    a: {\n      b: [4]\n    }\n  }); // $or\n\n  test.throws(function () {\n    match({\n      $or: []\n    }, {});\n  });\n  test.throws(function () {\n    match({\n      $or: [5]\n    }, {});\n  });\n  test.throws(function () {\n    match({\n      $or: []\n    }, {\n      a: 1\n    });\n  });\n  match({\n    $or: [{\n      a: 1\n    }]\n  }, {\n    a: 1\n  });\n  nomatch({\n    $or: [{\n      b: 2\n    }]\n  }, {\n    a: 1\n  });\n  match({\n    $or: [{\n      a: 1\n    }, {\n      b: 2\n    }]\n  }, {\n    a: 1\n  });\n  nomatch({\n    $or: [{\n      c: 3\n    }, {\n      d: 4\n    }]\n  }, {\n    a: 1\n  });\n  match({\n    $or: [{\n      a: 1\n    }, {\n      b: 2\n    }]\n  }, {\n    a: [1, 2, 3]\n  });\n  nomatch({\n    $or: [{\n      a: 1\n    }, {\n      b: 2\n    }]\n  }, {\n    c: [1, 2, 3]\n  });\n  nomatch({\n    $or: [{\n      a: 1\n    }, {\n      b: 2\n    }]\n  }, {\n    a: [2, 3, 4]\n  });\n  match({\n    $or: [{\n      a: 1\n    }, {\n      a: 2\n    }]\n  }, {\n    a: 1\n  });\n  match({\n    $or: [{\n      a: 1\n    }, {\n      a: 2\n    }],\n    b: 2\n  }, {\n    a: 1,\n    b: 2\n  });\n  nomatch({\n    $or: [{\n      a: 2\n    }, {\n      a: 3\n    }],\n    b: 2\n  }, {\n    a: 1,\n    b: 2\n  });\n  nomatch({\n    $or: [{\n      a: 1\n    }, {\n      a: 2\n    }],\n    b: 3\n  }, {\n    a: 1,\n    b: 2\n  }); // Combining $or with equality\n\n  match({\n    x: 1,\n    $or: [{\n      a: 1\n    }, {\n      b: 1\n    }]\n  }, {\n    x: 1,\n    b: 1\n  });\n  match({\n    $or: [{\n      a: 1\n    }, {\n      b: 1\n    }],\n    x: 1\n  }, {\n    x: 1,\n    b: 1\n  });\n  nomatch({\n    x: 1,\n    $or: [{\n      a: 1\n    }, {\n      b: 1\n    }]\n  }, {\n    b: 1\n  });\n  nomatch({\n    x: 1,\n    $or: [{\n      a: 1\n    }, {\n      b: 1\n    }]\n  }, {\n    x: 1\n  }); // $or and $lt, $lte, $gt, $gte\n\n  match({\n    $or: [{\n      a: {\n        $lte: 1\n      }\n    }, {\n      a: 2\n    }]\n  }, {\n    a: 1\n  });\n  nomatch({\n    $or: [{\n      a: {\n        $lt: 1\n      }\n    }, {\n      a: 2\n    }]\n  }, {\n    a: 1\n  });\n  match({\n    $or: [{\n      a: {\n        $gte: 1\n      }\n    }, {\n      a: 2\n    }]\n  }, {\n    a: 1\n  });\n  nomatch({\n    $or: [{\n      a: {\n        $gt: 1\n      }\n    }, {\n      a: 2\n    }]\n  }, {\n    a: 1\n  });\n  match({\n    $or: [{\n      b: {\n        $gt: 1\n      }\n    }, {\n      b: {\n        $lt: 3\n      }\n    }]\n  }, {\n    b: 2\n  });\n  nomatch({\n    $or: [{\n      b: {\n        $lt: 1\n      }\n    }, {\n      b: {\n        $gt: 3\n      }\n    }]\n  }, {\n    b: 2\n  }); // $or and $in\n\n  match({\n    $or: [{\n      a: {\n        $in: [1, 2, 3]\n      }\n    }]\n  }, {\n    a: 1\n  });\n  nomatch({\n    $or: [{\n      a: {\n        $in: [4, 5, 6]\n      }\n    }]\n  }, {\n    a: 1\n  });\n  match({\n    $or: [{\n      a: {\n        $in: [1, 2, 3]\n      }\n    }, {\n      b: 2\n    }]\n  }, {\n    a: 1\n  });\n  match({\n    $or: [{\n      a: {\n        $in: [1, 2, 3]\n      }\n    }, {\n      b: 2\n    }]\n  }, {\n    b: 2\n  });\n  nomatch({\n    $or: [{\n      a: {\n        $in: [1, 2, 3]\n      }\n    }, {\n      b: 2\n    }]\n  }, {\n    c: 3\n  });\n  match({\n    $or: [{\n      a: {\n        $in: [1, 2, 3]\n      }\n    }, {\n      b: {\n        $in: [1, 2, 3]\n      }\n    }]\n  }, {\n    b: 2\n  });\n  nomatch({\n    $or: [{\n      a: {\n        $in: [1, 2, 3]\n      }\n    }, {\n      b: {\n        $in: [4, 5, 6]\n      }\n    }]\n  }, {\n    b: 2\n  }); // $or and $nin\n\n  nomatch({\n    $or: [{\n      a: {\n        $nin: [1, 2, 3]\n      }\n    }]\n  }, {\n    a: 1\n  });\n  match({\n    $or: [{\n      a: {\n        $nin: [4, 5, 6]\n      }\n    }]\n  }, {\n    a: 1\n  });\n  nomatch({\n    $or: [{\n      a: {\n        $nin: [1, 2, 3]\n      }\n    }, {\n      b: 2\n    }]\n  }, {\n    a: 1\n  });\n  match({\n    $or: [{\n      a: {\n        $nin: [1, 2, 3]\n      }\n    }, {\n      b: 2\n    }]\n  }, {\n    b: 2\n  });\n  match({\n    $or: [{\n      a: {\n        $nin: [1, 2, 3]\n      }\n    }, {\n      b: 2\n    }]\n  }, {\n    c: 3\n  });\n  match({\n    $or: [{\n      a: {\n        $nin: [1, 2, 3]\n      }\n    }, {\n      b: {\n        $nin: [1, 2, 3]\n      }\n    }]\n  }, {\n    b: 2\n  });\n  nomatch({\n    $or: [{\n      a: {\n        $nin: [1, 2, 3]\n      }\n    }, {\n      b: {\n        $nin: [1, 2, 3]\n      }\n    }]\n  }, {\n    a: 1,\n    b: 2\n  });\n  match({\n    $or: [{\n      a: {\n        $nin: [1, 2, 3]\n      }\n    }, {\n      b: {\n        $nin: [4, 5, 6]\n      }\n    }]\n  }, {\n    b: 2\n  }); // $or and dot-notation\n\n  match({\n    $or: [{\n      \"a.b\": 1\n    }, {\n      \"a.b\": 2\n    }]\n  }, {\n    a: {\n      b: 1\n    }\n  });\n  match({\n    $or: [{\n      \"a.b\": 1\n    }, {\n      \"a.c\": 1\n    }]\n  }, {\n    a: {\n      b: 1\n    }\n  });\n  nomatch({\n    $or: [{\n      \"a.b\": 2\n    }, {\n      \"a.c\": 1\n    }]\n  }, {\n    a: {\n      b: 1\n    }\n  }); // $or and nested objects\n\n  match({\n    $or: [{\n      a: {\n        b: 1,\n        c: 2\n      }\n    }, {\n      a: {\n        b: 2,\n        c: 1\n      }\n    }]\n  }, {\n    a: {\n      b: 1,\n      c: 2\n    }\n  });\n  nomatch({\n    $or: [{\n      a: {\n        b: 1,\n        c: 3\n      }\n    }, {\n      a: {\n        b: 2,\n        c: 1\n      }\n    }]\n  }, {\n    a: {\n      b: 1,\n      c: 2\n    }\n  }); // $or and regexes\n\n  match({\n    $or: [{\n      a: /a/\n    }]\n  }, {\n    a: \"cat\"\n  });\n  nomatch({\n    $or: [{\n      a: /o/\n    }]\n  }, {\n    a: \"cat\"\n  });\n  match({\n    $or: [{\n      a: /a/\n    }, {\n      a: /o/\n    }]\n  }, {\n    a: \"cat\"\n  });\n  nomatch({\n    $or: [{\n      a: /i/\n    }, {\n      a: /o/\n    }]\n  }, {\n    a: \"cat\"\n  });\n  match({\n    $or: [{\n      a: /i/\n    }, {\n      b: /o/\n    }]\n  }, {\n    a: \"cat\",\n    b: \"dog\"\n  }); // $or and $ne\n\n  match({\n    $or: [{\n      a: {\n        $ne: 1\n      }\n    }]\n  }, {});\n  nomatch({\n    $or: [{\n      a: {\n        $ne: 1\n      }\n    }]\n  }, {\n    a: 1\n  });\n  match({\n    $or: [{\n      a: {\n        $ne: 1\n      }\n    }]\n  }, {\n    a: 2\n  });\n  match({\n    $or: [{\n      a: {\n        $ne: 1\n      }\n    }]\n  }, {\n    b: 1\n  });\n  match({\n    $or: [{\n      a: {\n        $ne: 1\n      }\n    }, {\n      a: {\n        $ne: 2\n      }\n    }]\n  }, {\n    a: 1\n  });\n  match({\n    $or: [{\n      a: {\n        $ne: 1\n      }\n    }, {\n      b: {\n        $ne: 1\n      }\n    }]\n  }, {\n    a: 1\n  });\n  nomatch({\n    $or: [{\n      a: {\n        $ne: 1\n      }\n    }, {\n      b: {\n        $ne: 2\n      }\n    }]\n  }, {\n    a: 1,\n    b: 2\n  }); // $or and $not\n\n  match({\n    $or: [{\n      a: {\n        $not: {\n          $mod: [10, 1]\n        }\n      }\n    }]\n  }, {});\n  nomatch({\n    $or: [{\n      a: {\n        $not: {\n          $mod: [10, 1]\n        }\n      }\n    }]\n  }, {\n    a: 1\n  });\n  match({\n    $or: [{\n      a: {\n        $not: {\n          $mod: [10, 1]\n        }\n      }\n    }]\n  }, {\n    a: 2\n  });\n  match({\n    $or: [{\n      a: {\n        $not: {\n          $mod: [10, 1]\n        }\n      }\n    }, {\n      a: {\n        $not: {\n          $mod: [10, 2]\n        }\n      }\n    }]\n  }, {\n    a: 1\n  });\n  nomatch({\n    $or: [{\n      a: {\n        $not: {\n          $mod: [10, 1]\n        }\n      }\n    }, {\n      a: {\n        $mod: [10, 2]\n      }\n    }]\n  }, {\n    a: 1\n  });\n  match({\n    $or: [{\n      a: {\n        $not: {\n          $mod: [10, 1]\n        }\n      }\n    }, {\n      a: {\n        $mod: [10, 2]\n      }\n    }]\n  }, {\n    a: 2\n  });\n  match({\n    $or: [{\n      a: {\n        $not: {\n          $mod: [10, 1]\n        }\n      }\n    }, {\n      a: {\n        $mod: [10, 2]\n      }\n    }]\n  }, {\n    a: 3\n  }); // this is possibly an open-ended task, so we stop here ...\n  // $nor\n\n  test.throws(function () {\n    match({\n      $nor: []\n    }, {});\n  });\n  test.throws(function () {\n    match({\n      $nor: [5]\n    }, {});\n  });\n  test.throws(function () {\n    match({\n      $nor: []\n    }, {\n      a: 1\n    });\n  });\n  nomatch({\n    $nor: [{\n      a: 1\n    }]\n  }, {\n    a: 1\n  });\n  match({\n    $nor: [{\n      b: 2\n    }]\n  }, {\n    a: 1\n  });\n  nomatch({\n    $nor: [{\n      a: 1\n    }, {\n      b: 2\n    }]\n  }, {\n    a: 1\n  });\n  match({\n    $nor: [{\n      c: 3\n    }, {\n      d: 4\n    }]\n  }, {\n    a: 1\n  });\n  nomatch({\n    $nor: [{\n      a: 1\n    }, {\n      b: 2\n    }]\n  }, {\n    a: [1, 2, 3]\n  });\n  match({\n    $nor: [{\n      a: 1\n    }, {\n      b: 2\n    }]\n  }, {\n    c: [1, 2, 3]\n  });\n  match({\n    $nor: [{\n      a: 1\n    }, {\n      b: 2\n    }]\n  }, {\n    a: [2, 3, 4]\n  });\n  nomatch({\n    $nor: [{\n      a: 1\n    }, {\n      a: 2\n    }]\n  }, {\n    a: 1\n  }); // $nor and $lt, $lte, $gt, $gte\n\n  nomatch({\n    $nor: [{\n      a: {\n        $lte: 1\n      }\n    }, {\n      a: 2\n    }]\n  }, {\n    a: 1\n  });\n  match({\n    $nor: [{\n      a: {\n        $lt: 1\n      }\n    }, {\n      a: 2\n    }]\n  }, {\n    a: 1\n  });\n  nomatch({\n    $nor: [{\n      a: {\n        $gte: 1\n      }\n    }, {\n      a: 2\n    }]\n  }, {\n    a: 1\n  });\n  match({\n    $nor: [{\n      a: {\n        $gt: 1\n      }\n    }, {\n      a: 2\n    }]\n  }, {\n    a: 1\n  });\n  nomatch({\n    $nor: [{\n      b: {\n        $gt: 1\n      }\n    }, {\n      b: {\n        $lt: 3\n      }\n    }]\n  }, {\n    b: 2\n  });\n  match({\n    $nor: [{\n      b: {\n        $lt: 1\n      }\n    }, {\n      b: {\n        $gt: 3\n      }\n    }]\n  }, {\n    b: 2\n  }); // $nor and $in\n\n  nomatch({\n    $nor: [{\n      a: {\n        $in: [1, 2, 3]\n      }\n    }]\n  }, {\n    a: 1\n  });\n  match({\n    $nor: [{\n      a: {\n        $in: [4, 5, 6]\n      }\n    }]\n  }, {\n    a: 1\n  });\n  nomatch({\n    $nor: [{\n      a: {\n        $in: [1, 2, 3]\n      }\n    }, {\n      b: 2\n    }]\n  }, {\n    a: 1\n  });\n  nomatch({\n    $nor: [{\n      a: {\n        $in: [1, 2, 3]\n      }\n    }, {\n      b: 2\n    }]\n  }, {\n    b: 2\n  });\n  match({\n    $nor: [{\n      a: {\n        $in: [1, 2, 3]\n      }\n    }, {\n      b: 2\n    }]\n  }, {\n    c: 3\n  });\n  nomatch({\n    $nor: [{\n      a: {\n        $in: [1, 2, 3]\n      }\n    }, {\n      b: {\n        $in: [1, 2, 3]\n      }\n    }]\n  }, {\n    b: 2\n  });\n  match({\n    $nor: [{\n      a: {\n        $in: [1, 2, 3]\n      }\n    }, {\n      b: {\n        $in: [4, 5, 6]\n      }\n    }]\n  }, {\n    b: 2\n  }); // $nor and $nin\n\n  match({\n    $nor: [{\n      a: {\n        $nin: [1, 2, 3]\n      }\n    }]\n  }, {\n    a: 1\n  });\n  nomatch({\n    $nor: [{\n      a: {\n        $nin: [4, 5, 6]\n      }\n    }]\n  }, {\n    a: 1\n  });\n  match({\n    $nor: [{\n      a: {\n        $nin: [1, 2, 3]\n      }\n    }, {\n      b: 2\n    }]\n  }, {\n    a: 1\n  });\n  nomatch({\n    $nor: [{\n      a: {\n        $nin: [1, 2, 3]\n      }\n    }, {\n      b: 2\n    }]\n  }, {\n    b: 2\n  });\n  nomatch({\n    $nor: [{\n      a: {\n        $nin: [1, 2, 3]\n      }\n    }, {\n      b: 2\n    }]\n  }, {\n    c: 3\n  });\n  nomatch({\n    $nor: [{\n      a: {\n        $nin: [1, 2, 3]\n      }\n    }, {\n      b: {\n        $nin: [1, 2, 3]\n      }\n    }]\n  }, {\n    b: 2\n  });\n  match({\n    $nor: [{\n      a: {\n        $nin: [1, 2, 3]\n      }\n    }, {\n      b: {\n        $nin: [1, 2, 3]\n      }\n    }]\n  }, {\n    a: 1,\n    b: 2\n  });\n  nomatch({\n    $nor: [{\n      a: {\n        $nin: [1, 2, 3]\n      }\n    }, {\n      b: {\n        $nin: [4, 5, 6]\n      }\n    }]\n  }, {\n    b: 2\n  }); // $nor and dot-notation\n\n  nomatch({\n    $nor: [{\n      \"a.b\": 1\n    }, {\n      \"a.b\": 2\n    }]\n  }, {\n    a: {\n      b: 1\n    }\n  });\n  nomatch({\n    $nor: [{\n      \"a.b\": 1\n    }, {\n      \"a.c\": 1\n    }]\n  }, {\n    a: {\n      b: 1\n    }\n  });\n  match({\n    $nor: [{\n      \"a.b\": 2\n    }, {\n      \"a.c\": 1\n    }]\n  }, {\n    a: {\n      b: 1\n    }\n  }); // $nor and nested objects\n\n  nomatch({\n    $nor: [{\n      a: {\n        b: 1,\n        c: 2\n      }\n    }, {\n      a: {\n        b: 2,\n        c: 1\n      }\n    }]\n  }, {\n    a: {\n      b: 1,\n      c: 2\n    }\n  });\n  match({\n    $nor: [{\n      a: {\n        b: 1,\n        c: 3\n      }\n    }, {\n      a: {\n        b: 2,\n        c: 1\n      }\n    }]\n  }, {\n    a: {\n      b: 1,\n      c: 2\n    }\n  }); // $nor and regexes\n\n  nomatch({\n    $nor: [{\n      a: /a/\n    }]\n  }, {\n    a: \"cat\"\n  });\n  match({\n    $nor: [{\n      a: /o/\n    }]\n  }, {\n    a: \"cat\"\n  });\n  nomatch({\n    $nor: [{\n      a: /a/\n    }, {\n      a: /o/\n    }]\n  }, {\n    a: \"cat\"\n  });\n  match({\n    $nor: [{\n      a: /i/\n    }, {\n      a: /o/\n    }]\n  }, {\n    a: \"cat\"\n  });\n  nomatch({\n    $nor: [{\n      a: /i/\n    }, {\n      b: /o/\n    }]\n  }, {\n    a: \"cat\",\n    b: \"dog\"\n  }); // $nor and $ne\n\n  nomatch({\n    $nor: [{\n      a: {\n        $ne: 1\n      }\n    }]\n  }, {});\n  match({\n    $nor: [{\n      a: {\n        $ne: 1\n      }\n    }]\n  }, {\n    a: 1\n  });\n  nomatch({\n    $nor: [{\n      a: {\n        $ne: 1\n      }\n    }]\n  }, {\n    a: 2\n  });\n  nomatch({\n    $nor: [{\n      a: {\n        $ne: 1\n      }\n    }]\n  }, {\n    b: 1\n  });\n  nomatch({\n    $nor: [{\n      a: {\n        $ne: 1\n      }\n    }, {\n      a: {\n        $ne: 2\n      }\n    }]\n  }, {\n    a: 1\n  });\n  nomatch({\n    $nor: [{\n      a: {\n        $ne: 1\n      }\n    }, {\n      b: {\n        $ne: 1\n      }\n    }]\n  }, {\n    a: 1\n  });\n  match({\n    $nor: [{\n      a: {\n        $ne: 1\n      }\n    }, {\n      b: {\n        $ne: 2\n      }\n    }]\n  }, {\n    a: 1,\n    b: 2\n  }); // $nor and $not\n\n  nomatch({\n    $nor: [{\n      a: {\n        $not: {\n          $mod: [10, 1]\n        }\n      }\n    }]\n  }, {});\n  match({\n    $nor: [{\n      a: {\n        $not: {\n          $mod: [10, 1]\n        }\n      }\n    }]\n  }, {\n    a: 1\n  });\n  nomatch({\n    $nor: [{\n      a: {\n        $not: {\n          $mod: [10, 1]\n        }\n      }\n    }]\n  }, {\n    a: 2\n  });\n  nomatch({\n    $nor: [{\n      a: {\n        $not: {\n          $mod: [10, 1]\n        }\n      }\n    }, {\n      a: {\n        $not: {\n          $mod: [10, 2]\n        }\n      }\n    }]\n  }, {\n    a: 1\n  });\n  match({\n    $nor: [{\n      a: {\n        $not: {\n          $mod: [10, 1]\n        }\n      }\n    }, {\n      a: {\n        $mod: [10, 2]\n      }\n    }]\n  }, {\n    a: 1\n  });\n  nomatch({\n    $nor: [{\n      a: {\n        $not: {\n          $mod: [10, 1]\n        }\n      }\n    }, {\n      a: {\n        $mod: [10, 2]\n      }\n    }]\n  }, {\n    a: 2\n  });\n  nomatch({\n    $nor: [{\n      a: {\n        $not: {\n          $mod: [10, 1]\n        }\n      }\n    }, {\n      a: {\n        $mod: [10, 2]\n      }\n    }]\n  }, {\n    a: 3\n  }); // $and\n\n  test.throws(function () {\n    match({\n      $and: []\n    }, {});\n  });\n  test.throws(function () {\n    match({\n      $and: [5]\n    }, {});\n  });\n  test.throws(function () {\n    match({\n      $and: []\n    }, {\n      a: 1\n    });\n  });\n  match({\n    $and: [{\n      a: 1\n    }]\n  }, {\n    a: 1\n  });\n  nomatch({\n    $and: [{\n      a: 1\n    }, {\n      a: 2\n    }]\n  }, {\n    a: 1\n  });\n  nomatch({\n    $and: [{\n      a: 1\n    }, {\n      b: 1\n    }]\n  }, {\n    a: 1\n  });\n  match({\n    $and: [{\n      a: 1\n    }, {\n      b: 2\n    }]\n  }, {\n    a: 1,\n    b: 2\n  });\n  nomatch({\n    $and: [{\n      a: 1\n    }, {\n      b: 1\n    }]\n  }, {\n    a: 1,\n    b: 2\n  });\n  match({\n    $and: [{\n      a: 1\n    }, {\n      b: 2\n    }],\n    c: 3\n  }, {\n    a: 1,\n    b: 2,\n    c: 3\n  });\n  nomatch({\n    $and: [{\n      a: 1\n    }, {\n      b: 2\n    }],\n    c: 4\n  }, {\n    a: 1,\n    b: 2,\n    c: 3\n  }); // $and and regexes\n\n  match({\n    $and: [{\n      a: /a/\n    }]\n  }, {\n    a: \"cat\"\n  });\n  match({\n    $and: [{\n      a: /a/i\n    }]\n  }, {\n    a: \"CAT\"\n  });\n  nomatch({\n    $and: [{\n      a: /o/\n    }]\n  }, {\n    a: \"cat\"\n  });\n  nomatch({\n    $and: [{\n      a: /a/\n    }, {\n      a: /o/\n    }]\n  }, {\n    a: \"cat\"\n  });\n  match({\n    $and: [{\n      a: /a/\n    }, {\n      b: /o/\n    }]\n  }, {\n    a: \"cat\",\n    b: \"dog\"\n  });\n  nomatch({\n    $and: [{\n      a: /a/\n    }, {\n      b: /a/\n    }]\n  }, {\n    a: \"cat\",\n    b: \"dog\"\n  }); // $and, dot-notation, and nested objects\n\n  match({\n    $and: [{\n      \"a.b\": 1\n    }]\n  }, {\n    a: {\n      b: 1\n    }\n  });\n  match({\n    $and: [{\n      a: {\n        b: 1\n      }\n    }]\n  }, {\n    a: {\n      b: 1\n    }\n  });\n  nomatch({\n    $and: [{\n      \"a.b\": 2\n    }]\n  }, {\n    a: {\n      b: 1\n    }\n  });\n  nomatch({\n    $and: [{\n      \"a.c\": 1\n    }]\n  }, {\n    a: {\n      b: 1\n    }\n  });\n  nomatch({\n    $and: [{\n      \"a.b\": 1\n    }, {\n      \"a.b\": 2\n    }]\n  }, {\n    a: {\n      b: 1\n    }\n  });\n  nomatch({\n    $and: [{\n      \"a.b\": 1\n    }, {\n      a: {\n        b: 2\n      }\n    }]\n  }, {\n    a: {\n      b: 1\n    }\n  });\n  match({\n    $and: [{\n      \"a.b\": 1\n    }, {\n      \"c.d\": 2\n    }]\n  }, {\n    a: {\n      b: 1\n    },\n    c: {\n      d: 2\n    }\n  });\n  nomatch({\n    $and: [{\n      \"a.b\": 1\n    }, {\n      \"c.d\": 1\n    }]\n  }, {\n    a: {\n      b: 1\n    },\n    c: {\n      d: 2\n    }\n  });\n  match({\n    $and: [{\n      \"a.b\": 1\n    }, {\n      c: {\n        d: 2\n      }\n    }]\n  }, {\n    a: {\n      b: 1\n    },\n    c: {\n      d: 2\n    }\n  });\n  nomatch({\n    $and: [{\n      \"a.b\": 1\n    }, {\n      c: {\n        d: 1\n      }\n    }]\n  }, {\n    a: {\n      b: 1\n    },\n    c: {\n      d: 2\n    }\n  });\n  nomatch({\n    $and: [{\n      \"a.b\": 2\n    }, {\n      c: {\n        d: 2\n      }\n    }]\n  }, {\n    a: {\n      b: 1\n    },\n    c: {\n      d: 2\n    }\n  });\n  match({\n    $and: [{\n      a: {\n        b: 1\n      }\n    }, {\n      c: {\n        d: 2\n      }\n    }]\n  }, {\n    a: {\n      b: 1\n    },\n    c: {\n      d: 2\n    }\n  });\n  nomatch({\n    $and: [{\n      a: {\n        b: 2\n      }\n    }, {\n      c: {\n        d: 2\n      }\n    }]\n  }, {\n    a: {\n      b: 1\n    },\n    c: {\n      d: 2\n    }\n  }); // $and and $in\n\n  nomatch({\n    $and: [{\n      a: {\n        $in: []\n      }\n    }]\n  }, {});\n  match({\n    $and: [{\n      a: {\n        $in: [1, 2, 3]\n      }\n    }]\n  }, {\n    a: 1\n  });\n  nomatch({\n    $and: [{\n      a: {\n        $in: [4, 5, 6]\n      }\n    }]\n  }, {\n    a: 1\n  });\n  nomatch({\n    $and: [{\n      a: {\n        $in: [1, 2, 3]\n      }\n    }, {\n      a: {\n        $in: [4, 5, 6]\n      }\n    }]\n  }, {\n    a: 1\n  });\n  nomatch({\n    $and: [{\n      a: {\n        $in: [1, 2, 3]\n      }\n    }, {\n      b: {\n        $in: [1, 2, 3]\n      }\n    }]\n  }, {\n    a: 1,\n    b: 4\n  });\n  match({\n    $and: [{\n      a: {\n        $in: [1, 2, 3]\n      }\n    }, {\n      b: {\n        $in: [4, 5, 6]\n      }\n    }]\n  }, {\n    a: 1,\n    b: 4\n  }); // $and and $nin\n\n  match({\n    $and: [{\n      a: {\n        $nin: []\n      }\n    }]\n  }, {});\n  nomatch({\n    $and: [{\n      a: {\n        $nin: [1, 2, 3]\n      }\n    }]\n  }, {\n    a: 1\n  });\n  match({\n    $and: [{\n      a: {\n        $nin: [4, 5, 6]\n      }\n    }]\n  }, {\n    a: 1\n  });\n  nomatch({\n    $and: [{\n      a: {\n        $nin: [1, 2, 3]\n      }\n    }, {\n      a: {\n        $nin: [4, 5, 6]\n      }\n    }]\n  }, {\n    a: 1\n  });\n  nomatch({\n    $and: [{\n      a: {\n        $nin: [1, 2, 3]\n      }\n    }, {\n      b: {\n        $nin: [1, 2, 3]\n      }\n    }]\n  }, {\n    a: 1,\n    b: 4\n  });\n  nomatch({\n    $and: [{\n      a: {\n        $nin: [1, 2, 3]\n      }\n    }, {\n      b: {\n        $nin: [4, 5, 6]\n      }\n    }]\n  }, {\n    a: 1,\n    b: 4\n  }); // $and and $lt, $lte, $gt, $gte\n\n  match({\n    $and: [{\n      a: {\n        $lt: 2\n      }\n    }]\n  }, {\n    a: 1\n  });\n  nomatch({\n    $and: [{\n      a: {\n        $lt: 1\n      }\n    }]\n  }, {\n    a: 1\n  });\n  match({\n    $and: [{\n      a: {\n        $lte: 1\n      }\n    }]\n  }, {\n    a: 1\n  });\n  match({\n    $and: [{\n      a: {\n        $gt: 0\n      }\n    }]\n  }, {\n    a: 1\n  });\n  nomatch({\n    $and: [{\n      a: {\n        $gt: 1\n      }\n    }]\n  }, {\n    a: 1\n  });\n  match({\n    $and: [{\n      a: {\n        $gte: 1\n      }\n    }]\n  }, {\n    a: 1\n  });\n  match({\n    $and: [{\n      a: {\n        $gt: 0\n      }\n    }, {\n      a: {\n        $lt: 2\n      }\n    }]\n  }, {\n    a: 1\n  });\n  nomatch({\n    $and: [{\n      a: {\n        $gt: 1\n      }\n    }, {\n      a: {\n        $lt: 2\n      }\n    }]\n  }, {\n    a: 1\n  });\n  nomatch({\n    $and: [{\n      a: {\n        $gt: 0\n      }\n    }, {\n      a: {\n        $lt: 1\n      }\n    }]\n  }, {\n    a: 1\n  });\n  match({\n    $and: [{\n      a: {\n        $gte: 1\n      }\n    }, {\n      a: {\n        $lte: 1\n      }\n    }]\n  }, {\n    a: 1\n  });\n  nomatch({\n    $and: [{\n      a: {\n        $gte: 2\n      }\n    }, {\n      a: {\n        $lte: 0\n      }\n    }]\n  }, {\n    a: 1\n  }); // $and and $ne\n\n  match({\n    $and: [{\n      a: {\n        $ne: 1\n      }\n    }]\n  }, {});\n  nomatch({\n    $and: [{\n      a: {\n        $ne: 1\n      }\n    }]\n  }, {\n    a: 1\n  });\n  match({\n    $and: [{\n      a: {\n        $ne: 1\n      }\n    }]\n  }, {\n    a: 2\n  });\n  nomatch({\n    $and: [{\n      a: {\n        $ne: 1\n      }\n    }, {\n      a: {\n        $ne: 2\n      }\n    }]\n  }, {\n    a: 2\n  });\n  match({\n    $and: [{\n      a: {\n        $ne: 1\n      }\n    }, {\n      a: {\n        $ne: 3\n      }\n    }]\n  }, {\n    a: 2\n  }); // $and and $not\n\n  match({\n    $and: [{\n      a: {\n        $not: {\n          $gt: 2\n        }\n      }\n    }]\n  }, {\n    a: 1\n  });\n  nomatch({\n    $and: [{\n      a: {\n        $not: {\n          $lt: 2\n        }\n      }\n    }]\n  }, {\n    a: 1\n  });\n  match({\n    $and: [{\n      a: {\n        $not: {\n          $lt: 0\n        }\n      }\n    }, {\n      a: {\n        $not: {\n          $gt: 2\n        }\n      }\n    }]\n  }, {\n    a: 1\n  });\n  nomatch({\n    $and: [{\n      a: {\n        $not: {\n          $lt: 2\n        }\n      }\n    }, {\n      a: {\n        $not: {\n          $gt: 0\n        }\n      }\n    }]\n  }, {\n    a: 1\n  }); // $where\n\n  match({\n    $where: \"this.a === 1\"\n  }, {\n    a: 1\n  });\n  match({\n    $where: \"obj.a === 1\"\n  }, {\n    a: 1\n  });\n  nomatch({\n    $where: \"this.a !== 1\"\n  }, {\n    a: 1\n  });\n  nomatch({\n    $where: \"obj.a !== 1\"\n  }, {\n    a: 1\n  });\n  nomatch({\n    $where: \"this.a === 1\",\n    a: 2\n  }, {\n    a: 1\n  });\n  match({\n    $where: \"this.a === 1\",\n    b: 2\n  }, {\n    a: 1,\n    b: 2\n  });\n  match({\n    $where: \"this.a === 1 && this.b === 2\"\n  }, {\n    a: 1,\n    b: 2\n  });\n  match({\n    $where: \"this.a instanceof Array\"\n  }, {\n    a: []\n  });\n  nomatch({\n    $where: \"this.a instanceof Array\"\n  }, {\n    a: 1\n  }); // reaching into array\n\n  match({\n    \"dogs.0.name\": \"Fido\"\n  }, {\n    dogs: [{\n      name: \"Fido\"\n    }, {\n      name: \"Rex\"\n    }]\n  });\n  match({\n    \"dogs.1.name\": \"Rex\"\n  }, {\n    dogs: [{\n      name: \"Fido\"\n    }, {\n      name: \"Rex\"\n    }]\n  });\n  nomatch({\n    \"dogs.1.name\": \"Fido\"\n  }, {\n    dogs: [{\n      name: \"Fido\"\n    }, {\n      name: \"Rex\"\n    }]\n  });\n  match({\n    \"room.1b\": \"bla\"\n  }, {\n    room: {\n      \"1b\": \"bla\"\n    }\n  });\n  match({\n    \"dogs.name\": \"Fido\"\n  }, {\n    dogs: [{\n      name: \"Fido\"\n    }, {\n      name: \"Rex\"\n    }]\n  });\n  match({\n    \"dogs.name\": \"Rex\"\n  }, {\n    dogs: [{\n      name: \"Fido\"\n    }, {\n      name: \"Rex\"\n    }]\n  });\n  match({\n    \"animals.dogs.name\": \"Fido\"\n  }, {\n    animals: [{\n      dogs: [{\n        name: \"Rover\"\n      }]\n    }, {}, {\n      dogs: [{\n        name: \"Fido\"\n      }, {\n        name: \"Rex\"\n      }]\n    }]\n  });\n  match({\n    \"animals.dogs.name\": \"Fido\"\n  }, {\n    animals: [{\n      dogs: {\n        name: \"Rex\"\n      }\n    }, {\n      dogs: {\n        name: \"Fido\"\n      }\n    }]\n  });\n  match({\n    \"animals.dogs.name\": \"Fido\"\n  }, {\n    animals: [{\n      dogs: [{\n        name: \"Rover\"\n      }]\n    }, {}, {\n      dogs: [{\n        name: [\"Fido\"]\n      }, {\n        name: \"Rex\"\n      }]\n    }]\n  });\n  nomatch({\n    \"dogs.name\": \"Fido\"\n  }, {\n    dogs: []\n  }); // $elemMatch\n\n  match({\n    dogs: {\n      $elemMatch: {\n        name: /e/\n      }\n    }\n  }, {\n    dogs: [{\n      name: \"Fido\"\n    }, {\n      name: \"Rex\"\n    }]\n  });\n  nomatch({\n    dogs: {\n      $elemMatch: {\n        name: /a/\n      }\n    }\n  }, {\n    dogs: [{\n      name: \"Fido\"\n    }, {\n      name: \"Rex\"\n    }]\n  });\n  match({\n    dogs: {\n      $elemMatch: {\n        age: {\n          $gt: 4\n        }\n      }\n    }\n  }, {\n    dogs: [{\n      name: \"Fido\",\n      age: 5\n    }, {\n      name: \"Rex\",\n      age: 3\n    }]\n  });\n  match({\n    dogs: {\n      $elemMatch: {\n        name: \"Fido\",\n        age: {\n          $gt: 4\n        }\n      }\n    }\n  }, {\n    dogs: [{\n      name: \"Fido\",\n      age: 5\n    }, {\n      name: \"Rex\",\n      age: 3\n    }]\n  });\n  nomatch({\n    dogs: {\n      $elemMatch: {\n        name: \"Fido\",\n        age: {\n          $gt: 5\n        }\n      }\n    }\n  }, {\n    dogs: [{\n      name: \"Fido\",\n      age: 5\n    }, {\n      name: \"Rex\",\n      age: 3\n    }]\n  });\n  match({\n    dogs: {\n      $elemMatch: {\n        name: /i/,\n        age: {\n          $gt: 4\n        }\n      }\n    }\n  }, {\n    dogs: [{\n      name: \"Fido\",\n      age: 5\n    }, {\n      name: \"Rex\",\n      age: 3\n    }]\n  });\n  nomatch({\n    dogs: {\n      $elemMatch: {\n        name: /e/,\n        age: 5\n      }\n    }\n  }, {\n    dogs: [{\n      name: \"Fido\",\n      age: 5\n    }, {\n      name: \"Rex\",\n      age: 3\n    }]\n  });\n  match({\n    x: {\n      $elemMatch: {\n        y: 9\n      }\n    }\n  }, {\n    x: [{\n      y: 9\n    }]\n  });\n  nomatch({\n    x: {\n      $elemMatch: {\n        y: 9\n      }\n    }\n  }, {\n    x: [[{\n      y: 9\n    }]]\n  });\n  match({\n    x: {\n      $elemMatch: {\n        $gt: 5,\n        $lt: 9\n      }\n    }\n  }, {\n    x: [8]\n  });\n  nomatch({\n    x: {\n      $elemMatch: {\n        $gt: 5,\n        $lt: 9\n      }\n    }\n  }, {\n    x: [[8]]\n  });\n  match({\n    'a.x': {\n      $elemMatch: {\n        y: 9\n      }\n    }\n  }, {\n    a: [{\n      x: []\n    }, {\n      x: [{\n        y: 9\n      }]\n    }]\n  });\n  nomatch({\n    a: {\n      $elemMatch: {\n        x: 5\n      }\n    }\n  }, {\n    a: {\n      x: 5\n    }\n  });\n  match({\n    a: {\n      $elemMatch: {\n        0: {\n          $gt: 5,\n          $lt: 9\n        }\n      }\n    }\n  }, {\n    a: [[6]]\n  });\n  match({\n    a: {\n      $elemMatch: {\n        '0.b': {\n          $gt: 5,\n          $lt: 9\n        }\n      }\n    }\n  }, {\n    a: [[{\n      b: 6\n    }]]\n  });\n  match({\n    a: {\n      $elemMatch: {\n        x: 1,\n        $or: [{\n          a: 1\n        }, {\n          b: 1\n        }]\n      }\n    }\n  }, {\n    a: [{\n      x: 1,\n      b: 1\n    }]\n  });\n  match({\n    a: {\n      $elemMatch: {\n        $or: [{\n          a: 1\n        }, {\n          b: 1\n        }],\n        x: 1\n      }\n    }\n  }, {\n    a: [{\n      x: 1,\n      b: 1\n    }]\n  });\n  match({\n    a: {\n      $elemMatch: {\n        $or: [{\n          a: 1\n        }, {\n          b: 1\n        }]\n      }\n    }\n  }, {\n    a: [{\n      x: 1,\n      b: 1\n    }]\n  });\n  match({\n    a: {\n      $elemMatch: {\n        $or: [{\n          a: 1\n        }, {\n          b: 1\n        }]\n      }\n    }\n  }, {\n    a: [{\n      x: 1,\n      b: 1\n    }]\n  });\n  match({\n    a: {\n      $elemMatch: {\n        $and: [{\n          b: 1\n        }, {\n          x: 1\n        }]\n      }\n    }\n  }, {\n    a: [{\n      x: 1,\n      b: 1\n    }]\n  });\n  nomatch({\n    a: {\n      $elemMatch: {\n        x: 1,\n        $or: [{\n          a: 1\n        }, {\n          b: 1\n        }]\n      }\n    }\n  }, {\n    a: [{\n      b: 1\n    }]\n  });\n  nomatch({\n    a: {\n      $elemMatch: {\n        x: 1,\n        $or: [{\n          a: 1\n        }, {\n          b: 1\n        }]\n      }\n    }\n  }, {\n    a: [{\n      x: 1\n    }]\n  });\n  nomatch({\n    a: {\n      $elemMatch: {\n        x: 1,\n        $or: [{\n          a: 1\n        }, {\n          b: 1\n        }]\n      }\n    }\n  }, {\n    a: [{\n      x: 1\n    }, {\n      b: 1\n    }]\n  });\n  test.throws(function () {\n    match({\n      a: {\n        $elemMatch: {\n          $gte: 1,\n          $or: [{\n            a: 1\n          }, {\n            b: 1\n          }]\n        }\n      }\n    }, {\n      a: [{\n        x: 1,\n        b: 1\n      }]\n    });\n  });\n  test.throws(function () {\n    match({\n      x: {\n        $elemMatch: {\n          $and: [{\n            $gt: 5,\n            $lt: 9\n          }]\n        }\n      }\n    }, {\n      x: [8]\n    });\n  }); // $comment\n\n  match({\n    a: 5,\n    $comment: \"asdf\"\n  }, {\n    a: 5\n  });\n  nomatch({\n    a: 6,\n    $comment: \"asdf\"\n  }, {\n    a: 5\n  }); // XXX still needs tests:\n  // - non-scalar arguments to $gt, $lt, etc\n});\nTinytest.add(\"minimongo - projection_compiler\", function (test) {\n  var testProjection = function (projection, tests) {\n    var projection_f = LocalCollection._compileProjection(projection);\n\n    var equalNonStrict = function (a, b, desc) {\n      test.isTrue(_.isEqual(a, b), desc);\n    };\n\n    _.each(tests, function (testCase) {\n      equalNonStrict(projection_f(testCase[0]), testCase[1], testCase[2]);\n    });\n  };\n\n  var testCompileProjectionThrows = function (projection, expectedError) {\n    test.throws(function () {\n      LocalCollection._compileProjection(projection);\n    }, expectedError);\n  };\n\n  testProjection({\n    'foo': 1,\n    'bar': 1\n  }, [[{\n    foo: 42,\n    bar: \"something\",\n    baz: \"else\"\n  }, {\n    foo: 42,\n    bar: \"something\"\n  }, \"simplest - whitelist\"], [{\n    foo: {\n      nested: 17\n    },\n    baz: {}\n  }, {\n    foo: {\n      nested: 17\n    }\n  }, \"nested whitelisted field\"], [{\n    _id: \"uid\",\n    bazbaz: 42\n  }, {\n    _id: \"uid\"\n  }, \"simplest whitelist - preserve _id\"]]);\n  testProjection({\n    'foo': 0,\n    'bar': 0\n  }, [[{\n    foo: 42,\n    bar: \"something\",\n    baz: \"else\"\n  }, {\n    baz: \"else\"\n  }, \"simplest - blacklist\"], [{\n    foo: {\n      nested: 17\n    },\n    baz: {\n      foo: \"something\"\n    }\n  }, {\n    baz: {\n      foo: \"something\"\n    }\n  }, \"nested blacklisted field\"], [{\n    _id: \"uid\",\n    bazbaz: 42\n  }, {\n    _id: \"uid\",\n    bazbaz: 42\n  }, \"simplest blacklist - preserve _id\"]]);\n  testProjection({\n    _id: 0,\n    foo: 1\n  }, [[{\n    foo: 42,\n    bar: 33,\n    _id: \"uid\"\n  }, {\n    foo: 42\n  }, \"whitelist - _id blacklisted\"]]);\n  testProjection({\n    _id: 0,\n    foo: 0\n  }, [[{\n    foo: 42,\n    bar: 33,\n    _id: \"uid\"\n  }, {\n    bar: 33\n  }, \"blacklist - _id blacklisted\"]]);\n  testProjection({\n    'foo.bar.baz': 1\n  }, [[{\n    foo: {\n      meh: \"fur\",\n      bar: {\n        baz: 42\n      },\n      tr: 1\n    },\n    bar: 33,\n    baz: 'trolololo'\n  }, {\n    foo: {\n      bar: {\n        baz: 42\n      }\n    }\n  }, \"whitelist nested\"], // Behavior of this test is looked up in actual mongo\n  [{\n    foo: {\n      meh: \"fur\",\n      bar: \"nope\",\n      tr: 1\n    },\n    bar: 33,\n    baz: 'trolololo'\n  }, {\n    foo: {}\n  }, \"whitelist nested - path not found in doc, different type\"], // Behavior of this test is looked up in actual mongo\n  [{\n    foo: {\n      meh: \"fur\",\n      bar: [],\n      tr: 1\n    },\n    bar: 33,\n    baz: 'trolololo'\n  }, {\n    foo: {\n      bar: []\n    }\n  }, \"whitelist nested - path not found in doc\"]]);\n  testProjection({\n    'hope.humanity': 0,\n    'hope.people': 0\n  }, [[{\n    hope: {\n      humanity: \"lost\",\n      people: 'broken',\n      candies: 'long live!'\n    }\n  }, {\n    hope: {\n      candies: 'long live!'\n    }\n  }, \"blacklist nested\"], [{\n    hope: \"new\"\n  }, {\n    hope: \"new\"\n  }, \"blacklist nested - path not found in doc\"]]);\n  testProjection({\n    _id: 1\n  }, [[{\n    _id: 42,\n    x: 1,\n    y: {\n      z: \"2\"\n    }\n  }, {\n    _id: 42\n  }, \"_id whitelisted\"], [{\n    _id: 33\n  }, {\n    _id: 33\n  }, \"_id whitelisted, _id only\"], [{\n    x: 1\n  }, {}, \"_id whitelisted, no _id\"]]);\n  testProjection({\n    _id: 0\n  }, [[{\n    _id: 42,\n    x: 1,\n    y: {\n      z: \"2\"\n    }\n  }, {\n    x: 1,\n    y: {\n      z: \"2\"\n    }\n  }, \"_id blacklisted\"], [{\n    _id: 33\n  }, {}, \"_id blacklisted, _id only\"], [{\n    x: 1\n  }, {\n    x: 1\n  }, \"_id blacklisted, no _id\"]]);\n  testProjection({}, [[{\n    a: 1,\n    b: 2,\n    c: \"3\"\n  }, {\n    a: 1,\n    b: 2,\n    c: \"3\"\n  }, \"empty projection\"]]);\n  testCompileProjectionThrows({\n    'inc': 1,\n    'excl': 0\n  }, \"You cannot currently mix including and excluding fields\");\n  testCompileProjectionThrows({\n    _id: 1,\n    a: 0\n  }, \"You cannot currently mix including and excluding fields\");\n  testCompileProjectionThrows({\n    'a': 1,\n    'a.b': 1\n  }, \"using both of them may trigger unexpected behavior\");\n  testCompileProjectionThrows({\n    'a.b.c': 1,\n    'a.b': 1,\n    'a': 1\n  }, \"using both of them may trigger unexpected behavior\");\n  testCompileProjectionThrows(\"some string\", \"fields option must be an object\");\n});\nTinytest.add(\"minimongo - fetch with fields\", function (test) {\n  var c = new LocalCollection();\n\n  _.times(30, function (i) {\n    c.insert({\n      something: Random.id(),\n      anything: {\n        foo: \"bar\",\n        cool: \"hot\"\n      },\n      nothing: i,\n      i: i\n    });\n  }); // Test just a regular fetch with some projection\n\n\n  var fetchResults = c.find({}, {\n    fields: {\n      'something': 1,\n      'anything.foo': 1\n    }\n  }).fetch();\n  test.isTrue(_.all(fetchResults, function (x) {\n    return x && x.something && x.anything && x.anything.foo && x.anything.foo === \"bar\" && !_.has(x, 'nothing') && !_.has(x.anything, 'cool');\n  })); // Test with a selector, even field used in the selector is excluded in the\n  // projection\n\n  fetchResults = c.find({\n    nothing: {\n      $gte: 5\n    }\n  }, {\n    fields: {\n      nothing: 0\n    }\n  }).fetch();\n  test.isTrue(_.all(fetchResults, function (x) {\n    return x && x.something && x.anything && x.anything.foo === \"bar\" && x.anything.cool === \"hot\" && !_.has(x, 'nothing') && x.i && x.i >= 5;\n  }));\n  test.isTrue(fetchResults.length === 25); // Test that we can sort, based on field excluded from the projection, use\n  // skip and limit as well!\n  // following find will get indexes [10..20) sorted by nothing\n\n  fetchResults = c.find({}, {\n    sort: {\n      nothing: 1\n    },\n    limit: 10,\n    skip: 10,\n    fields: {\n      i: 1,\n      something: 1\n    }\n  }).fetch();\n  test.isTrue(_.all(fetchResults, function (x) {\n    return x && x.something && x.i >= 10 && x.i < 20;\n  }));\n\n  _.each(fetchResults, function (x, i, arr) {\n    if (!i) return;\n    test.isTrue(x.i === arr[i - 1].i + 1);\n  }); // Temporary unsupported operators\n  // queries are taken from MongoDB docs examples\n\n\n  test.throws(function () {\n    c.find({}, {\n      fields: {\n        'grades.$': 1\n      }\n    });\n  });\n  test.throws(function () {\n    c.find({}, {\n      fields: {\n        grades: {\n          $elemMatch: {\n            mean: 70\n          }\n        }\n      }\n    });\n  });\n  test.throws(function () {\n    c.find({}, {\n      fields: {\n        grades: {\n          $slice: [20, 10]\n        }\n      }\n    });\n  });\n});\nTinytest.add(\"minimongo - fetch with projection, subarrays\", function (test) {\n  // Apparently projection of type 'foo.bar.x' for\n  // { foo: [ { bar: { x: 42 } }, { bar: { x: 3 } } ] }\n  // should return exactly this object. More precisely, arrays are considered as\n  // sets and are queried separately and then merged back to result set\n  var c = new LocalCollection(); // Insert a test object with two set fields\n\n  c.insert({\n    setA: [{\n      fieldA: 42,\n      fieldB: 33\n    }, {\n      fieldA: \"the good\",\n      fieldB: \"the bad\",\n      fieldC: \"the ugly\"\n    }],\n    setB: [{\n      anotherA: {},\n      anotherB: \"meh\"\n    }, {\n      anotherA: 1234,\n      anotherB: 431\n    }]\n  });\n\n  var equalNonStrict = function (a, b, desc) {\n    test.isTrue(_.isEqual(a, b), desc);\n  };\n\n  var testForProjection = function (projection, expected) {\n    var fetched = c.find({}, {\n      fields: projection\n    }).fetch()[0];\n    equalNonStrict(fetched, expected, \"failed sub-set projection: \" + JSON.stringify(projection));\n  };\n\n  testForProjection({\n    'setA.fieldA': 1,\n    'setB.anotherB': 1,\n    _id: 0\n  }, {\n    setA: [{\n      fieldA: 42\n    }, {\n      fieldA: \"the good\"\n    }],\n    setB: [{\n      anotherB: \"meh\"\n    }, {\n      anotherB: 431\n    }]\n  });\n  testForProjection({\n    'setA.fieldA': 0,\n    'setB.anotherA': 0,\n    _id: 0\n  }, {\n    setA: [{\n      fieldB: 33\n    }, {\n      fieldB: \"the bad\",\n      fieldC: \"the ugly\"\n    }],\n    setB: [{\n      anotherB: \"meh\"\n    }, {\n      anotherB: 431\n    }]\n  });\n  c.remove({});\n  c.insert({\n    a: [[{\n      b: 1,\n      c: 2\n    }, {\n      b: 2,\n      c: 4\n    }], {\n      b: 3,\n      c: 5\n    }, [{\n      b: 4,\n      c: 9\n    }]]\n  });\n  testForProjection({\n    'a.b': 1,\n    _id: 0\n  }, {\n    a: [[{\n      b: 1\n    }, {\n      b: 2\n    }], {\n      b: 3\n    }, [{\n      b: 4\n    }]]\n  });\n  testForProjection({\n    'a.b': 0,\n    _id: 0\n  }, {\n    a: [[{\n      c: 2\n    }, {\n      c: 4\n    }], {\n      c: 5\n    }, [{\n      c: 9\n    }]]\n  });\n});\nTinytest.add(\"minimongo - fetch with projection, deep copy\", function (test) {\n  // Compiled fields projection defines the contract: returned document doesn't\n  // retain anything from the passed argument.\n  var doc = {\n    a: {\n      x: 42\n    },\n    b: {\n      y: {\n        z: 33\n      }\n    },\n    c: \"asdf\"\n  };\n  var fields = {\n    'a': 1,\n    'b.y': 1\n  };\n\n  var projectionFn = LocalCollection._compileProjection(fields);\n\n  var filteredDoc = projectionFn(doc);\n  doc.a.x++;\n  doc.b.y.z--;\n  test.equal(filteredDoc.a.x, 42, \"projection returning deep copy - including\");\n  test.equal(filteredDoc.b.y.z, 33, \"projection returning deep copy - including\");\n  fields = {\n    c: 0\n  };\n  projectionFn = LocalCollection._compileProjection(fields);\n  filteredDoc = projectionFn(doc);\n  doc.a.x = 5;\n  test.equal(filteredDoc.a.x, 43, \"projection returning deep copy - excluding\");\n});\nTinytest.add(\"minimongo - observe ordered with projection\", function (test) {\n  // These tests are copy-paste from \"minimongo -observe ordered\",\n  // slightly modified to test projection\n  var operations = [];\n  var cbs = log_callbacks(operations);\n  var handle;\n  var c = new LocalCollection();\n  handle = c.find({}, {\n    sort: {\n      a: 1\n    },\n    fields: {\n      a: 1\n    }\n  }).observe(cbs);\n  test.isTrue(handle.collection === c);\n  c.insert({\n    _id: 'foo',\n    a: 1,\n    b: 2\n  });\n  test.equal(operations.shift(), ['added', {\n    a: 1\n  }, 0, null]);\n  c.update({\n    a: 1\n  }, {\n    $set: {\n      a: 2,\n      b: 1\n    }\n  });\n  test.equal(operations.shift(), ['changed', {\n    a: 2\n  }, 0, {\n    a: 1\n  }]);\n  c.insert({\n    _id: 'bar',\n    a: 10,\n    c: 33\n  });\n  test.equal(operations.shift(), ['added', {\n    a: 10\n  }, 1, null]);\n  c.update({}, {\n    $inc: {\n      a: 1\n    }\n  }, {\n    multi: true\n  });\n  c.update({}, {\n    $inc: {\n      c: 1\n    }\n  }, {\n    multi: true\n  });\n  test.equal(operations.shift(), ['changed', {\n    a: 3\n  }, 0, {\n    a: 2\n  }]);\n  test.equal(operations.shift(), ['changed', {\n    a: 11\n  }, 1, {\n    a: 10\n  }]);\n  c.update({\n    a: 11\n  }, {\n    a: 1,\n    b: 44\n  });\n  test.equal(operations.shift(), ['changed', {\n    a: 1\n  }, 1, {\n    a: 11\n  }]);\n  test.equal(operations.shift(), ['moved', {\n    a: 1\n  }, 1, 0, 'foo']);\n  c.remove({\n    a: 2\n  });\n  test.equal(operations.shift(), undefined);\n  c.remove({\n    a: 3\n  });\n  test.equal(operations.shift(), ['removed', 'foo', 1, {\n    a: 3\n  }]); // test stop\n\n  handle.stop();\n  var idA2 = Random.id();\n  c.insert({\n    _id: idA2,\n    a: 2\n  });\n  test.equal(operations.shift(), undefined);\n  var cursor = c.find({}, {\n    fields: {\n      a: 1,\n      _id: 0\n    }\n  });\n  test.throws(function () {\n    cursor.observeChanges({\n      added: function () {}\n    });\n  });\n  test.throws(function () {\n    cursor.observe({\n      added: function () {}\n    });\n  }); // test initial inserts (and backwards sort)\n\n  handle = c.find({}, {\n    sort: {\n      a: -1\n    },\n    fields: {\n      a: 1\n    }\n  }).observe(cbs);\n  test.equal(operations.shift(), ['added', {\n    a: 2\n  }, 0, null]);\n  test.equal(operations.shift(), ['added', {\n    a: 1\n  }, 1, null]);\n  handle.stop(); // test _suppress_initial\n\n  handle = c.find({}, {\n    sort: {\n      a: -1\n    },\n    fields: {\n      a: 1\n    }\n  }).observe(_.extend(cbs, {\n    _suppress_initial: true\n  }));\n  test.equal(operations.shift(), undefined);\n  c.insert({\n    a: 100,\n    b: {\n      foo: \"bar\"\n    }\n  });\n  test.equal(operations.shift(), ['added', {\n    a: 100\n  }, 0, idA2]);\n  handle.stop(); // test skip and limit.\n\n  c.remove({});\n  handle = c.find({}, {\n    sort: {\n      a: 1\n    },\n    skip: 1,\n    limit: 2,\n    fields: {\n      'blacklisted': 0\n    }\n  }).observe(cbs);\n  test.equal(operations.shift(), undefined);\n  c.insert({\n    a: 1,\n    blacklisted: 1324\n  });\n  test.equal(operations.shift(), undefined);\n  c.insert({\n    _id: 'foo',\n    a: 2,\n    blacklisted: [\"something\"]\n  });\n  test.equal(operations.shift(), ['added', {\n    a: 2\n  }, 0, null]);\n  c.insert({\n    a: 3,\n    blacklisted: {\n      2: 3\n    }\n  });\n  test.equal(operations.shift(), ['added', {\n    a: 3\n  }, 1, null]);\n  c.insert({\n    a: 4,\n    blacklisted: 6\n  });\n  test.equal(operations.shift(), undefined);\n  c.update({\n    a: 1\n  }, {\n    a: 0,\n    blacklisted: 4444\n  });\n  test.equal(operations.shift(), undefined);\n  c.update({\n    a: 0\n  }, {\n    a: 5,\n    blacklisted: 11111\n  });\n  test.equal(operations.shift(), ['removed', 'foo', 0, {\n    a: 2\n  }]);\n  test.equal(operations.shift(), ['added', {\n    a: 4\n  }, 1, null]);\n  c.update({\n    a: 3\n  }, {\n    a: 3.5,\n    blacklisted: 333.4444\n  });\n  test.equal(operations.shift(), ['changed', {\n    a: 3.5\n  }, 0, {\n    a: 3\n  }]);\n  handle.stop(); // test _no_indices\n\n  c.remove({});\n  handle = c.find({}, {\n    sort: {\n      a: 1\n    },\n    fields: {\n      a: 1\n    }\n  }).observe(_.extend(cbs, {\n    _no_indices: true\n  }));\n  c.insert({\n    _id: 'foo',\n    a: 1,\n    zoo: \"crazy\"\n  });\n  test.equal(operations.shift(), ['added', {\n    a: 1\n  }, -1, null]);\n  c.update({\n    a: 1\n  }, {\n    $set: {\n      a: 2,\n      foobar: \"player\"\n    }\n  });\n  test.equal(operations.shift(), ['changed', {\n    a: 2\n  }, -1, {\n    a: 1\n  }]);\n  c.insert({\n    a: 10,\n    b: 123.45\n  });\n  test.equal(operations.shift(), ['added', {\n    a: 10\n  }, -1, null]);\n  c.update({}, {\n    $inc: {\n      a: 1,\n      b: 2\n    }\n  }, {\n    multi: true\n  });\n  test.equal(operations.shift(), ['changed', {\n    a: 3\n  }, -1, {\n    a: 2\n  }]);\n  test.equal(operations.shift(), ['changed', {\n    a: 11\n  }, -1, {\n    a: 10\n  }]);\n  c.update({\n    a: 11,\n    b: 125.45\n  }, {\n    a: 1,\n    b: 444\n  });\n  test.equal(operations.shift(), ['changed', {\n    a: 1\n  }, -1, {\n    a: 11\n  }]);\n  test.equal(operations.shift(), ['moved', {\n    a: 1\n  }, -1, -1, 'foo']);\n  c.remove({\n    a: 2\n  });\n  test.equal(operations.shift(), undefined);\n  c.remove({\n    a: 3\n  });\n  test.equal(operations.shift(), ['removed', 'foo', -1, {\n    a: 3\n  }]);\n  handle.stop();\n});\nTinytest.add(\"minimongo - ordering\", function (test) {\n  var shortBinary = EJSON.newBinary(1);\n  shortBinary[0] = 128;\n  var longBinary1 = EJSON.newBinary(2);\n  longBinary1[1] = 42;\n  var longBinary2 = EJSON.newBinary(2);\n  longBinary2[1] = 50;\n  var date1 = new Date();\n  var date2 = new Date(date1.getTime() + 1000); // value ordering\n\n  assert_ordering(test, LocalCollection._f._cmp, [null, 1, 2.2, 3, \"03\", \"1\", \"11\", \"2\", \"a\", \"aaa\", {}, {\n    a: 2\n  }, {\n    a: 3\n  }, {\n    a: 3,\n    b: 4\n  }, {\n    b: 4\n  }, {\n    b: 4,\n    a: 3\n  }, {\n    b: {}\n  }, {\n    b: [1, 2, 3]\n  }, {\n    b: [1, 2, 4]\n  }, [], [1, 2], [1, 2, 3], [1, 2, 4], [1, 2, \"4\"], [1, 2, [4]], shortBinary, longBinary1, longBinary2, new MongoID.ObjectID(\"1234567890abcd1234567890\"), new MongoID.ObjectID(\"abcd1234567890abcd123456\"), false, true, date1, date2]); // document ordering under a sort specification\n\n  var verify = function (sorts, docs) {\n    _.each(_.isArray(sorts) ? sorts : [sorts], function (sort) {\n      var sorter = new Minimongo.Sorter(sort);\n      assert_ordering(test, sorter.getComparator(), docs);\n    });\n  }; // note: [] doesn't sort with \"arrays\", it sorts as \"undefined\". the position\n  // of arrays in _typeorder only matters for things like $lt. (This behavior\n  // verified with MongoDB 2.2.1.) We don't define the relative order of {a: []}\n  // and {c: 1} is undefined (MongoDB does seem to care but it's not clear how\n  // or why).\n\n\n  verify([{\n    \"a\": 1\n  }, [\"a\"], [[\"a\", \"asc\"]]], [{\n    a: []\n  }, {\n    a: 1\n  }, {\n    a: {}\n  }, {\n    a: true\n  }]);\n  verify([{\n    \"a\": 1\n  }, [\"a\"], [[\"a\", \"asc\"]]], [{\n    c: 1\n  }, {\n    a: 1\n  }, {\n    a: {}\n  }, {\n    a: true\n  }]);\n  verify([{\n    \"a\": -1\n  }, [[\"a\", \"desc\"]]], [{\n    a: true\n  }, {\n    a: {}\n  }, {\n    a: 1\n  }, {\n    c: 1\n  }]);\n  verify([{\n    \"a\": -1\n  }, [[\"a\", \"desc\"]]], [{\n    a: true\n  }, {\n    a: {}\n  }, {\n    a: 1\n  }, {\n    a: []\n  }]);\n  verify([{\n    \"a\": 1,\n    \"b\": -1\n  }, [\"a\", [\"b\", \"desc\"]], [[\"a\", \"asc\"], [\"b\", \"desc\"]]], [{\n    c: 1\n  }, {\n    a: 1,\n    b: 3\n  }, {\n    a: 1,\n    b: 2\n  }, {\n    a: 2,\n    b: 0\n  }]);\n  verify([{\n    \"a\": 1,\n    \"b\": 1\n  }, [\"a\", \"b\"], [[\"a\", \"asc\"], [\"b\", \"asc\"]]], [{\n    c: 1\n  }, {\n    a: 1,\n    b: 2\n  }, {\n    a: 1,\n    b: 3\n  }, {\n    a: 2,\n    b: 0\n  }]);\n  test.throws(function () {\n    new Minimongo.Sorter(\"a\");\n  });\n  test.throws(function () {\n    new Minimongo.Sorter(123);\n  }); // We don't support $natural:1 (since we don't actually have Mongo's on-disk\n  // ordering available!)\n\n  test.throws(function () {\n    new Minimongo.Sorter({\n      $natural: 1\n    });\n  }); // No sort spec implies everything equal.\n\n  test.equal(new Minimongo.Sorter({}).getComparator()({\n    a: 1\n  }, {\n    a: 2\n  }), 0); // All sorts of array edge cases!\n  // Increasing sort sorts by the smallest element it finds; 1 < 2.\n\n  verify({\n    a: 1\n  }, [{\n    a: [1, 10, 20]\n  }, {\n    a: [5, 2, 99]\n  }]); // Decreasing sorts by largest it finds; 99 > 20.\n\n  verify({\n    a: -1\n  }, [{\n    a: [5, 2, 99]\n  }, {\n    a: [1, 10, 20]\n  }]); // Can also sort by specific array indices.\n\n  verify({\n    'a.1': 1\n  }, [{\n    a: [5, 2, 99]\n  }, {\n    a: [1, 10, 20]\n  }]); // We do NOT expand sub-arrays, so the minimum in the second doc is 5, not\n  // -20. (Numbers always sort before arrays.)\n\n  verify({\n    a: 1\n  }, [{\n    a: [1, [10, 15], 20]\n  }, {\n    a: [5, [-5, -20], 18]\n  }]); // The maximum in each of these is the array, since arrays are \"greater\" than\n  // numbers. And [10, 15] is greater than [-5, -20].\n\n  verify({\n    a: -1\n  }, [{\n    a: [1, [10, 15], 20]\n  }, {\n    a: [5, [-5, -20], 18]\n  }]); // 'a.0' here ONLY means \"first element of a\", not \"first element of something\n  // found in a\", so it CANNOT find the 10 or -5.\n\n  verify({\n    'a.0': 1\n  }, [{\n    a: [1, [10, 15], 20]\n  }, {\n    a: [5, [-5, -20], 18]\n  }]);\n  verify({\n    'a.0': -1\n  }, [{\n    a: [5, [-5, -20], 18]\n  }, {\n    a: [1, [10, 15], 20]\n  }]); // Similarly, this is just comparing [-5,-20] to [10, 15].\n\n  verify({\n    'a.1': 1\n  }, [{\n    a: [5, [-5, -20], 18]\n  }, {\n    a: [1, [10, 15], 20]\n  }]);\n  verify({\n    'a.1': -1\n  }, [{\n    a: [1, [10, 15], 20]\n  }, {\n    a: [5, [-5, -20], 18]\n  }]); // Here we are just comparing [10,15] directly to [19,3] (and NOT also\n  // iterating over the numbers; this is implemented by setting dontIterate in\n  // makeLookupFunction).  So [10,15]<[19,3] even though 3 is the smallest\n  // number you can find there.\n\n  verify({\n    'a.1': 1\n  }, [{\n    a: [1, [10, 15], 20]\n  }, {\n    a: [5, [19, 3], 18]\n  }]);\n  verify({\n    'a.1': -1\n  }, [{\n    a: [5, [19, 3], 18]\n  }, {\n    a: [1, [10, 15], 20]\n  }]); // Minimal elements are 1 and 5.\n\n  verify({\n    a: 1\n  }, [{\n    a: [1, [10, 15], 20]\n  }, {\n    a: [5, [19, 3], 18]\n  }]); // Maximal elements are [19,3] and [10,15] (because arrays sort higher than\n  // numbers), even though there's a 20 floating around.\n\n  verify({\n    a: -1\n  }, [{\n    a: [5, [19, 3], 18]\n  }, {\n    a: [1, [10, 15], 20]\n  }]); // Maximal elements are [10,15] and [3,19].  [10,15] is bigger even though 19\n  // is the biggest number in them, because array comparison is lexicographic.\n\n  verify({\n    a: -1\n  }, [{\n    a: [1, [10, 15], 20]\n  }, {\n    a: [5, [3, 19], 18]\n  }]); // (0,4) < (0,5), so they go in this order.  It's not correct to consider\n  // (0,3) as a sort key for the second document because they come from\n  // different a-branches.\n\n  verify({\n    'a.x': 1,\n    'a.y': 1\n  }, [{\n    a: [{\n      x: 0,\n      y: 4\n    }]\n  }, {\n    a: [{\n      x: 0,\n      y: 5\n    }, {\n      x: 1,\n      y: 3\n    }]\n  }]);\n  verify({\n    'a.0.s': 1\n  }, [{\n    a: [{\n      s: 1\n    }]\n  }, {\n    a: [{\n      s: 2\n    }]\n  }]);\n});\nTinytest.add(\"minimongo - sort\", function (test) {\n  var c = new LocalCollection();\n\n  for (var i = 0; i < 50; i++) {\n    for (var j = 0; j < 2; j++) {\n      c.insert({\n        a: i,\n        b: j,\n        _id: i + \"_\" + j\n      });\n    }\n  }\n\n  test.equal(c.find({\n    a: {\n      $gt: 10\n    }\n  }, {\n    sort: {\n      b: -1,\n      a: 1\n    },\n    limit: 5\n  }).fetch(), [{\n    a: 11,\n    b: 1,\n    _id: \"11_1\"\n  }, {\n    a: 12,\n    b: 1,\n    _id: \"12_1\"\n  }, {\n    a: 13,\n    b: 1,\n    _id: \"13_1\"\n  }, {\n    a: 14,\n    b: 1,\n    _id: \"14_1\"\n  }, {\n    a: 15,\n    b: 1,\n    _id: \"15_1\"\n  }]);\n  test.equal(c.find({\n    a: {\n      $gt: 10\n    }\n  }, {\n    sort: {\n      b: -1,\n      a: 1\n    },\n    skip: 3,\n    limit: 5\n  }).fetch(), [{\n    a: 14,\n    b: 1,\n    _id: \"14_1\"\n  }, {\n    a: 15,\n    b: 1,\n    _id: \"15_1\"\n  }, {\n    a: 16,\n    b: 1,\n    _id: \"16_1\"\n  }, {\n    a: 17,\n    b: 1,\n    _id: \"17_1\"\n  }, {\n    a: 18,\n    b: 1,\n    _id: \"18_1\"\n  }]);\n  test.equal(c.find({\n    a: {\n      $gte: 20\n    }\n  }, {\n    sort: {\n      a: 1,\n      b: -1\n    },\n    skip: 50,\n    limit: 5\n  }).fetch(), [{\n    a: 45,\n    b: 1,\n    _id: \"45_1\"\n  }, {\n    a: 45,\n    b: 0,\n    _id: \"45_0\"\n  }, {\n    a: 46,\n    b: 1,\n    _id: \"46_1\"\n  }, {\n    a: 46,\n    b: 0,\n    _id: \"46_0\"\n  }, {\n    a: 47,\n    b: 1,\n    _id: \"47_1\"\n  }]);\n});\nTinytest.add(\"minimongo - subkey sort\", function (test) {\n  var c = new LocalCollection(); // normal case\n\n  c.insert({\n    a: {\n      b: 2\n    }\n  });\n  c.insert({\n    a: {\n      b: 1\n    }\n  });\n  c.insert({\n    a: {\n      b: 3\n    }\n  });\n  test.equal(_.pluck(c.find({}, {\n    sort: {\n      'a.b': -1\n    }\n  }).fetch(), 'a'), [{\n    b: 3\n  }, {\n    b: 2\n  }, {\n    b: 1\n  }]); // isn't an object\n\n  c.insert({\n    a: 1\n  });\n  test.equal(_.pluck(c.find({}, {\n    sort: {\n      'a.b': 1\n    }\n  }).fetch(), 'a'), [1, {\n    b: 1\n  }, {\n    b: 2\n  }, {\n    b: 3\n  }]); // complex object\n\n  c.insert({\n    a: {\n      b: {\n        c: 1\n      }\n    }\n  });\n  test.equal(_.pluck(c.find({}, {\n    sort: {\n      'a.b': -1\n    }\n  }).fetch(), 'a'), [{\n    b: {\n      c: 1\n    }\n  }, {\n    b: 3\n  }, {\n    b: 2\n  }, {\n    b: 1\n  }, 1]); // no such top level prop\n\n  c.insert({\n    c: 1\n  });\n  test.equal(_.pluck(c.find({}, {\n    sort: {\n      'a.b': -1\n    }\n  }).fetch(), 'a'), [{\n    b: {\n      c: 1\n    }\n  }, {\n    b: 3\n  }, {\n    b: 2\n  }, {\n    b: 1\n  }, 1, undefined]); // no such mid level prop. just test that it doesn't throw.\n\n  test.equal(c.find({}, {\n    sort: {\n      'a.nope.c': -1\n    }\n  }).count(), 6);\n});\nTinytest.add(\"minimongo - array sort\", function (test) {\n  var c = new LocalCollection(); // \"up\" and \"down\" are the indices that the docs should have when sorted\n  // ascending and descending by \"a.x\" respectively. They are not reverses of\n  // each other: when sorting ascending, you use the minimum value you can find\n  // in the document, and when sorting descending, you use the maximum value you\n  // can find. So [1, 4] shows up in the 1 slot when sorting ascending and the 4\n  // slot when sorting descending.\n  //\n  // Similarly, \"selected\" is the index that the doc should have in the query\n  // that sorts ascending on \"a.x\" and selects {'a.x': {$gt: 1}}. In this case,\n  // the 1 in [1, 4] may not be used as a sort key.\n\n  c.insert({\n    up: 1,\n    down: 1,\n    selected: 2,\n    a: {\n      x: [1, 4]\n    }\n  });\n  c.insert({\n    up: 2,\n    down: 2,\n    selected: 0,\n    a: [{\n      x: [2]\n    }, {\n      x: 3\n    }]\n  });\n  c.insert({\n    up: 0,\n    down: 4,\n    a: {\n      x: 0\n    }\n  });\n  c.insert({\n    up: 3,\n    down: 3,\n    selected: 1,\n    a: {\n      x: 2.5\n    }\n  });\n  c.insert({\n    up: 4,\n    down: 0,\n    selected: 3,\n    a: {\n      x: 5\n    }\n  }); // Test that the the documents in \"cursor\" contain values with the name\n  // \"field\" running from 0 to the max value of that name in the collection.\n\n  var testCursorMatchesField = function (cursor, field) {\n    var fieldValues = [];\n    c.find().forEach(function (doc) {\n      if (_.has(doc, field)) fieldValues.push(doc[field]);\n    });\n    test.equal(_.pluck(cursor.fetch(), field), _.range(_.max(fieldValues) + 1));\n  };\n\n  testCursorMatchesField(c.find({}, {\n    sort: {\n      'a.x': 1\n    }\n  }), 'up');\n  testCursorMatchesField(c.find({}, {\n    sort: {\n      'a.x': -1\n    }\n  }), 'down');\n  testCursorMatchesField(c.find({\n    'a.x': {\n      $gt: 1\n    }\n  }, {\n    sort: {\n      'a.x': 1\n    }\n  }), 'selected');\n});\nTinytest.add(\"minimongo - sort keys\", function (test) {\n  var keyListToObject = function (keyList) {\n    var obj = {};\n\n    _.each(keyList, function (key) {\n      obj[EJSON.stringify(key)] = true;\n    });\n\n    return obj;\n  };\n\n  var testKeys = function (sortSpec, doc, expectedKeyList) {\n    var expectedKeys = keyListToObject(expectedKeyList);\n    var sorter = new Minimongo.Sorter(sortSpec);\n    var actualKeyList = [];\n\n    sorter._generateKeysFromDoc(doc, function (key) {\n      actualKeyList.push(key);\n    });\n\n    var actualKeys = keyListToObject(actualKeyList);\n    test.equal(actualKeys, expectedKeys);\n  };\n\n  var testParallelError = function (sortSpec, doc) {\n    var sorter = new Minimongo.Sorter(sortSpec);\n    test.throws(function () {\n      sorter._generateKeysFromDoc(doc, function () {});\n    }, /parallel arrays/);\n  }; // Just non-array fields.\n\n\n  testKeys({\n    'a.x': 1,\n    'a.y': 1\n  }, {\n    a: {\n      x: 0,\n      y: 5\n    }\n  }, [[0, 5]]); // Ensure that we don't get [0,3] and [1,5].\n\n  testKeys({\n    'a.x': 1,\n    'a.y': 1\n  }, {\n    a: [{\n      x: 0,\n      y: 5\n    }, {\n      x: 1,\n      y: 3\n    }]\n  }, [[0, 5], [1, 3]]); // Ensure we can combine \"array fields\" with \"non-array fields\".\n\n  testKeys({\n    'a.x': 1,\n    'a.y': 1,\n    b: -1\n  }, {\n    a: [{\n      x: 0,\n      y: 5\n    }, {\n      x: 1,\n      y: 3\n    }],\n    b: 42\n  }, [[0, 5, 42], [1, 3, 42]]);\n  testKeys({\n    b: -1,\n    'a.x': 1,\n    'a.y': 1\n  }, {\n    a: [{\n      x: 0,\n      y: 5\n    }, {\n      x: 1,\n      y: 3\n    }],\n    b: 42\n  }, [[42, 0, 5], [42, 1, 3]]);\n  testKeys({\n    'a.x': 1,\n    b: -1,\n    'a.y': 1\n  }, {\n    a: [{\n      x: 0,\n      y: 5\n    }, {\n      x: 1,\n      y: 3\n    }],\n    b: 42\n  }, [[0, 42, 5], [1, 42, 3]]);\n  testKeys({\n    a: 1,\n    b: 1\n  }, {\n    a: [1, 2, 3],\n    b: 42\n  }, [[1, 42], [2, 42], [3, 42]]); // Don't support multiple arrays at the same level.\n\n  testParallelError({\n    a: 1,\n    b: 1\n  }, {\n    a: [1, 2, 3],\n    b: [42]\n  }); // We are MORE STRICT than Mongo here; Mongo supports this!\n  // XXX support this too  #NestedArraySort\n\n  testParallelError({\n    'a.x': 1,\n    'a.y': 1\n  }, {\n    a: [{\n      x: 1,\n      y: [2, 3]\n    }, {\n      x: 2,\n      y: [4, 5]\n    }]\n  });\n});\nTinytest.add(\"minimongo - sort key filter\", function (test) {\n  var testOrder = function (sortSpec, selector, doc1, doc2) {\n    var matcher = new Minimongo.Matcher(selector);\n    var sorter = new Minimongo.Sorter(sortSpec, {\n      matcher: matcher\n    });\n    var comparator = sorter.getComparator();\n    var comparison = comparator(doc1, doc2);\n    test.isTrue(comparison < 0);\n  };\n\n  testOrder({\n    'a.x': 1\n  }, {\n    'a.x': {\n      $gt: 1\n    }\n  }, {\n    a: {\n      x: 3\n    }\n  }, {\n    a: {\n      x: [1, 4]\n    }\n  });\n  testOrder({\n    'a.x': 1\n  }, {\n    'a.x': {\n      $gt: 0\n    }\n  }, {\n    a: {\n      x: [1, 4]\n    }\n  }, {\n    a: {\n      x: 3\n    }\n  });\n\n  var keyCompatible = function (sortSpec, selector, key, compatible) {\n    var matcher = new Minimongo.Matcher(selector);\n    var sorter = new Minimongo.Sorter(sortSpec, {\n      matcher: matcher\n    });\n\n    var actual = sorter._keyCompatibleWithSelector(key);\n\n    test.equal(actual, compatible);\n  };\n\n  keyCompatible({\n    a: 1\n  }, {\n    a: 5\n  }, [5], true);\n  keyCompatible({\n    a: 1\n  }, {\n    a: 5\n  }, [8], false);\n  keyCompatible({\n    a: 1\n  }, {\n    a: {\n      x: 5\n    }\n  }, [{\n    x: 5\n  }], true);\n  keyCompatible({\n    a: 1\n  }, {\n    a: {\n      x: 5\n    }\n  }, [{\n    x: 5,\n    y: 9\n  }], false);\n  keyCompatible({\n    'a.x': 1\n  }, {\n    a: {\n      x: 5\n    }\n  }, [5], true); // To confirm this:\n  //   > db.x.insert({_id: \"q\", a: [{x:1}, {x:5}], b: 2})\n  //   > db.x.insert({_id: \"w\", a: [{x:5}, {x:10}], b: 1})\n  //   > db.x.find({}).sort({'a.x': 1, b: 1})\n  //   { \"_id\" : \"q\", \"a\" : [  {  \"x\" : 1 },  {  \"x\" : 5 } ], \"b\" : 2 }\n  //   { \"_id\" : \"w\", \"a\" : [  {  \"x\" : 5 },  {  \"x\" : 10 } ], \"b\" : 1 }\n  //   > db.x.find({a: {x:5}}).sort({'a.x': 1, b: 1})\n  //   { \"_id\" : \"q\", \"a\" : [  {  \"x\" : 1 },  {  \"x\" : 5 } ], \"b\" : 2 }\n  //   { \"_id\" : \"w\", \"a\" : [  {  \"x\" : 5 },  {  \"x\" : 10 } ], \"b\" : 1 }\n  //   > db.x.find({'a.x': 5}).sort({'a.x': 1, b: 1})\n  //   { \"_id\" : \"w\", \"a\" : [  {  \"x\" : 5 },  {  \"x\" : 10 } ], \"b\" : 1 }\n  //   { \"_id\" : \"q\", \"a\" : [  {  \"x\" : 1 },  {  \"x\" : 5 } ], \"b\" : 2 }\n  // ie, only the last one manages to trigger the key compatibility code,\n  // not the previous one.  (The \"b\" sort is necessary because when the key\n  // compatibility code *does* kick in, both documents only end up with \"5\"\n  // for the first field as their only sort key, and we need to differentiate\n  // somehow...)\n\n  keyCompatible({\n    'a.x': 1\n  }, {\n    a: {\n      x: 5\n    }\n  }, [1], true);\n  keyCompatible({\n    'a.x': 1\n  }, {\n    'a.x': 5\n  }, [5], true);\n  keyCompatible({\n    'a.x': 1\n  }, {\n    'a.x': 5\n  }, [1], false); // Regex key check.\n\n  keyCompatible({\n    a: 1\n  }, {\n    a: /^foo+/\n  }, ['foo'], true);\n  keyCompatible({\n    a: 1\n  }, {\n    a: /^foo+/\n  }, ['foooo'], true);\n  keyCompatible({\n    a: 1\n  }, {\n    a: /^foo+/\n  }, ['foooobar'], true);\n  keyCompatible({\n    a: 1\n  }, {\n    a: /^foo+/\n  }, ['afoooo'], false);\n  keyCompatible({\n    a: 1\n  }, {\n    a: /^foo+/\n  }, [''], false);\n  keyCompatible({\n    a: 1\n  }, {\n    a: {\n      $regex: \"^foo+\"\n    }\n  }, ['foo'], true);\n  keyCompatible({\n    a: 1\n  }, {\n    a: {\n      $regex: \"^foo+\"\n    }\n  }, ['foooo'], true);\n  keyCompatible({\n    a: 1\n  }, {\n    a: {\n      $regex: \"^foo+\"\n    }\n  }, ['foooobar'], true);\n  keyCompatible({\n    a: 1\n  }, {\n    a: {\n      $regex: \"^foo+\"\n    }\n  }, ['afoooo'], false);\n  keyCompatible({\n    a: 1\n  }, {\n    a: {\n      $regex: \"^foo+\"\n    }\n  }, [''], false);\n  keyCompatible({\n    a: 1\n  }, {\n    a: /^foo+/i\n  }, ['foo'], true); // Key compatibility check appears to be turned off for regexps with flags.\n\n  keyCompatible({\n    a: 1\n  }, {\n    a: /^foo+/i\n  }, ['bar'], true);\n  keyCompatible({\n    a: 1\n  }, {\n    a: /^foo+/m\n  }, ['bar'], true);\n  keyCompatible({\n    a: 1\n  }, {\n    a: {\n      $regex: \"^foo+\",\n      $options: \"i\"\n    }\n  }, ['bar'], true);\n  keyCompatible({\n    a: 1\n  }, {\n    a: {\n      $regex: \"^foo+\",\n      $options: \"m\"\n    }\n  }, ['bar'], true); // Multiple keys!\n\n  keyCompatible({\n    a: 1,\n    b: 1,\n    c: 1\n  }, {\n    a: {\n      $gt: 5\n    },\n    c: {\n      $lt: 3\n    }\n  }, [6, \"bla\", 2], true);\n  keyCompatible({\n    a: 1,\n    b: 1,\n    c: 1\n  }, {\n    a: {\n      $gt: 5\n    },\n    c: {\n      $lt: 3\n    }\n  }, [6, \"bla\", 4], false);\n  keyCompatible({\n    a: 1,\n    b: 1,\n    c: 1\n  }, {\n    a: {\n      $gt: 5\n    },\n    c: {\n      $lt: 3\n    }\n  }, [3, \"bla\", 1], false); // No filtering is done (ie, all keys are compatible) if the first key isn't\n  // constrained.\n\n  keyCompatible({\n    a: 1,\n    b: 1,\n    c: 1\n  }, {\n    c: {\n      $lt: 3\n    }\n  }, [3, \"bla\", 4], true);\n});\nTinytest.add(\"minimongo - sort function\", function (test) {\n  var c = new LocalCollection();\n  c.insert({\n    a: 1\n  });\n  c.insert({\n    a: 10\n  });\n  c.insert({\n    a: 5\n  });\n  c.insert({\n    a: 7\n  });\n  c.insert({\n    a: 2\n  });\n  c.insert({\n    a: 4\n  });\n  c.insert({\n    a: 3\n  });\n\n  var sortFunction = function (doc1, doc2) {\n    return doc2.a - doc1.a;\n  };\n\n  test.equal(c.find({}, {\n    sort: sortFunction\n  }).fetch(), c.find({}).fetch().sort(sortFunction));\n  test.notEqual(c.find({}).fetch(), c.find({}).fetch().sort(sortFunction));\n  test.equal(c.find({}, {\n    sort: {\n      a: -1\n    }\n  }).fetch(), c.find({}).fetch().sort(sortFunction));\n});\nTinytest.add(\"minimongo - binary search\", function (test) {\n  var forwardCmp = function (a, b) {\n    return a - b;\n  };\n\n  var backwardCmp = function (a, b) {\n    return -1 * forwardCmp(a, b);\n  };\n\n  var checkSearch = function (cmp, array, value, expected, message) {\n    var actual = LocalCollection._binarySearch(cmp, array, value);\n\n    if (expected != actual) {\n      test.fail({\n        type: \"minimongo-binary-search\",\n        message: message + \" : Expected index \" + expected + \" but had \" + actual\n      });\n    }\n  };\n\n  var checkSearchForward = function (array, value, expected, message) {\n    checkSearch(forwardCmp, array, value, expected, message);\n  };\n\n  var checkSearchBackward = function (array, value, expected, message) {\n    checkSearch(backwardCmp, array, value, expected, message);\n  };\n\n  checkSearchForward([1, 2, 5, 7], 4, 2, \"Inner insert\");\n  checkSearchForward([1, 2, 3, 4], 3, 3, \"Inner insert, equal value\");\n  checkSearchForward([1, 2, 5], 4, 2, \"Inner insert, odd length\");\n  checkSearchForward([1, 3, 5, 6], 9, 4, \"End insert\");\n  checkSearchForward([1, 3, 5, 6], 0, 0, \"Beginning insert\");\n  checkSearchForward([1], 0, 0, \"Single array, less than.\");\n  checkSearchForward([1], 1, 1, \"Single array, equal.\");\n  checkSearchForward([1], 2, 1, \"Single array, greater than.\");\n  checkSearchForward([], 1, 0, \"Empty array\");\n  checkSearchForward([1, 1, 1, 2, 2, 2, 2], 1, 3, \"Highly degenerate array, lower\");\n  checkSearchForward([1, 1, 1, 2, 2, 2, 2], 2, 7, \"Highly degenerate array, upper\");\n  checkSearchForward([2, 2, 2, 2, 2, 2, 2], 1, 0, \"Highly degenerate array, lower\");\n  checkSearchForward([2, 2, 2, 2, 2, 2, 2], 2, 7, \"Highly degenerate array, equal\");\n  checkSearchForward([2, 2, 2, 2, 2, 2, 2], 3, 7, \"Highly degenerate array, upper\");\n  checkSearchBackward([7, 5, 2, 1], 4, 2, \"Backward: Inner insert\");\n  checkSearchBackward([4, 3, 2, 1], 3, 2, \"Backward: Inner insert, equal value\");\n  checkSearchBackward([5, 2, 1], 4, 1, \"Backward: Inner insert, odd length\");\n  checkSearchBackward([6, 5, 3, 1], 9, 0, \"Backward: Beginning insert\");\n  checkSearchBackward([6, 5, 3, 1], 0, 4, \"Backward: End insert\");\n  checkSearchBackward([1], 0, 1, \"Backward: Single array, less than.\");\n  checkSearchBackward([1], 1, 1, \"Backward: Single array, equal.\");\n  checkSearchBackward([1], 2, 0, \"Backward: Single array, greater than.\");\n  checkSearchBackward([], 1, 0, \"Backward: Empty array\");\n  checkSearchBackward([2, 2, 2, 2, 1, 1, 1], 1, 7, \"Backward: Degenerate array, lower\");\n  checkSearchBackward([2, 2, 2, 2, 1, 1, 1], 2, 4, \"Backward: Degenerate array, upper\");\n  checkSearchBackward([2, 2, 2, 2, 2, 2, 2], 1, 7, \"Backward: Highly degenerate array, upper\");\n  checkSearchBackward([2, 2, 2, 2, 2, 2, 2], 2, 7, \"Backward: Highly degenerate array, upper\");\n  checkSearchBackward([2, 2, 2, 2, 2, 2, 2], 3, 0, \"Backward: Highly degenerate array, upper\");\n});\nTinytest.add(\"minimongo - modify\", function (test) {\n  var modifyWithQuery = function (doc, query, mod, expected) {\n    var coll = new LocalCollection();\n    coll.insert(doc); // The query is relevant for 'a.$.b'.\n\n    coll.update(query, mod);\n    var actual = coll.findOne();\n    delete actual._id; // added by insert\n\n    if (typeof expected === \"function\") {\n      expected(actual, EJSON.stringify({\n        input: doc,\n        mod: mod\n      }));\n    } else {\n      test.equal(actual, expected, EJSON.stringify({\n        input: doc,\n        mod: mod\n      }));\n    }\n  };\n\n  var modify = function (doc, mod, expected) {\n    modifyWithQuery(doc, {}, mod, expected);\n  };\n\n  var exceptionWithQuery = function (doc, query, mod) {\n    var coll = new LocalCollection();\n    coll.insert(doc);\n    test.throws(function () {\n      coll.update(query, mod);\n    });\n  };\n\n  var exception = function (doc, mod) {\n    exceptionWithQuery(doc, {}, mod);\n  };\n\n  var upsert = function (query, mod, expected) {\n    var coll = new LocalCollection();\n    var result = coll.upsert(query, mod);\n    var actual = coll.findOne();\n\n    if (expected._id) {\n      test.equal(result.insertedId, expected._id);\n    } else {\n      delete actual._id;\n    }\n\n    test.equal(actual, expected);\n  };\n\n  var upsertException = function (query, mod) {\n    var coll = new LocalCollection();\n    test.throws(function () {\n      coll.upsert(query, mod);\n    });\n  }; // document replacement\n\n\n  modify({}, {}, {});\n  modify({\n    a: 12\n  }, {}, {}); // tested against mongodb\n\n  modify({\n    a: 12\n  }, {\n    a: 13\n  }, {\n    a: 13\n  });\n  modify({\n    a: 12,\n    b: 99\n  }, {\n    a: 13\n  }, {\n    a: 13\n  });\n  exception({\n    a: 12\n  }, {\n    a: 13,\n    $set: {\n      b: 13\n    }\n  });\n  exception({\n    a: 12\n  }, {\n    $set: {\n      b: 13\n    },\n    a: 13\n  });\n  exception({\n    a: 12\n  }, {\n    $a: 13\n  }); //invalid operator\n\n  exception({\n    a: 12\n  }, {\n    b: {\n      $a: 13\n    }\n  });\n  exception({\n    a: 12\n  }, {\n    b: {\n      'a.b': 13\n    }\n  });\n  exception({\n    a: 12\n  }, {\n    b: {\n      '\\0a': 13\n    }\n  }); // keys\n\n  modify({}, {\n    $set: {\n      'a': 12\n    }\n  }, {\n    a: 12\n  });\n  modify({}, {\n    $set: {\n      'a.b': 12\n    }\n  }, {\n    a: {\n      b: 12\n    }\n  });\n  modify({}, {\n    $set: {\n      'a.b.c': 12\n    }\n  }, {\n    a: {\n      b: {\n        c: 12\n      }\n    }\n  });\n  modify({\n    a: {\n      d: 99\n    }\n  }, {\n    $set: {\n      'a.b.c': 12\n    }\n  }, {\n    a: {\n      d: 99,\n      b: {\n        c: 12\n      }\n    }\n  });\n  modify({}, {\n    $set: {\n      'a.b.3.c': 12\n    }\n  }, {\n    a: {\n      b: {\n        3: {\n          c: 12\n        }\n      }\n    }\n  });\n  modify({\n    a: {\n      b: []\n    }\n  }, {\n    $set: {\n      'a.b.3.c': 12\n    }\n  }, {\n    a: {\n      b: [null, null, null, {\n        c: 12\n      }]\n    }\n  });\n  exception({\n    a: [null, null, null]\n  }, {\n    $set: {\n      'a.1.b': 12\n    }\n  });\n  exception({\n    a: [null, 1, null]\n  }, {\n    $set: {\n      'a.1.b': 12\n    }\n  });\n  exception({\n    a: [null, \"x\", null]\n  }, {\n    $set: {\n      'a.1.b': 12\n    }\n  });\n  exception({\n    a: [null, [], null]\n  }, {\n    $set: {\n      'a.1.b': 12\n    }\n  });\n  modify({\n    a: [null, null, null]\n  }, {\n    $set: {\n      'a.3.b': 12\n    }\n  }, {\n    a: [null, null, null, {\n      b: 12\n    }]\n  });\n  exception({\n    a: []\n  }, {\n    $set: {\n      'a.b': 12\n    }\n  });\n  exception({\n    a: 12\n  }, {\n    $set: {\n      'a.b': 99\n    }\n  }); // tested on mongo\n\n  exception({\n    a: 'x'\n  }, {\n    $set: {\n      'a.b': 99\n    }\n  });\n  exception({\n    a: true\n  }, {\n    $set: {\n      'a.b': 99\n    }\n  });\n  exception({\n    a: null\n  }, {\n    $set: {\n      'a.b': 99\n    }\n  });\n  modify({\n    a: {}\n  }, {\n    $set: {\n      'a.3': 12\n    }\n  }, {\n    a: {\n      '3': 12\n    }\n  });\n  modify({\n    a: []\n  }, {\n    $set: {\n      'a.3': 12\n    }\n  }, {\n    a: [null, null, null, 12]\n  });\n  exception({}, {\n    $set: {\n      '': 12\n    }\n  }); // tested on mongo\n\n  exception({}, {\n    $set: {\n      '.': 12\n    }\n  }); // tested on mongo\n\n  exception({}, {\n    $set: {\n      'a.': 12\n    }\n  }); // tested on mongo\n\n  exception({}, {\n    $set: {\n      '. ': 12\n    }\n  }); // tested on mongo\n\n  exception({}, {\n    $inc: {\n      '... ': 12\n    }\n  }); // tested on mongo\n\n  exception({}, {\n    $set: {\n      'a..b': 12\n    }\n  }); // tested on mongo\n\n  modify({\n    a: [1, 2, 3]\n  }, {\n    $set: {\n      'a.01': 99\n    }\n  }, {\n    a: [1, 99, 3]\n  });\n  modify({\n    a: [1, {\n      a: 98\n    }, 3]\n  }, {\n    $set: {\n      'a.01.b': 99\n    }\n  }, {\n    a: [1, {\n      a: 98,\n      b: 99\n    }, 3]\n  });\n  modify({}, {\n    $set: {\n      '2.a.b': 12\n    }\n  }, {\n    '2': {\n      'a': {\n        'b': 12\n      }\n    }\n  }); // tested\n\n  exception({\n    x: []\n  }, {\n    $set: {\n      'x.2..a': 99\n    }\n  });\n  modify({\n    x: [null, null]\n  }, {\n    $set: {\n      'x.2.a': 1\n    }\n  }, {\n    x: [null, null, {\n      a: 1\n    }]\n  });\n  exception({\n    x: [null, null]\n  }, {\n    $set: {\n      'x.1.a': 1\n    }\n  }); // a.$.b\n\n  modifyWithQuery({\n    a: [{\n      x: 2\n    }, {\n      x: 4\n    }]\n  }, {\n    'a.x': 4\n  }, {\n    $set: {\n      'a.$.z': 9\n    }\n  }, {\n    a: [{\n      x: 2\n    }, {\n      x: 4,\n      z: 9\n    }]\n  });\n  exception({\n    a: [{\n      x: 2\n    }, {\n      x: 4\n    }]\n  }, {\n    $set: {\n      'a.$.z': 9\n    }\n  });\n  exceptionWithQuery({\n    a: [{\n      x: 2\n    }, {\n      x: 4\n    }],\n    b: 5\n  }, {\n    b: 5\n  }, {\n    $set: {\n      'a.$.z': 9\n    }\n  }); // can't have two $\n\n  exceptionWithQuery({\n    a: [{\n      x: [2]\n    }]\n  }, {\n    'a.x': 2\n  }, {\n    $set: {\n      'a.$.x.$': 9\n    }\n  });\n  modifyWithQuery({\n    a: [5, 6, 7]\n  }, {\n    a: 6\n  }, {\n    $set: {\n      'a.$': 9\n    }\n  }, {\n    a: [5, 9, 7]\n  });\n  modifyWithQuery({\n    a: [{\n      b: [{\n        c: 9\n      }, {\n        c: 10\n      }]\n    }, {\n      b: {\n        c: 11\n      }\n    }]\n  }, {\n    'a.b.c': 10\n  }, {\n    $unset: {\n      'a.$.b': 1\n    }\n  }, {\n    a: [{}, {\n      b: {\n        c: 11\n      }\n    }]\n  });\n  modifyWithQuery({\n    a: [{\n      b: [{\n        c: 9\n      }, {\n        c: 10\n      }]\n    }, {\n      b: {\n        c: 11\n      }\n    }]\n  }, {\n    'a.b.c': 11\n  }, {\n    $unset: {\n      'a.$.b': 1\n    }\n  }, {\n    a: [{\n      b: [{\n        c: 9\n      }, {\n        c: 10\n      }]\n    }, {}]\n  });\n  modifyWithQuery({\n    a: [1]\n  }, {\n    'a.0': 1\n  }, {\n    $set: {\n      'a.$': 5\n    }\n  }, {\n    a: [5]\n  });\n  modifyWithQuery({\n    a: [9]\n  }, {\n    a: {\n      $mod: [2, 1]\n    }\n  }, {\n    $set: {\n      'a.$': 5\n    }\n  }, {\n    a: [5]\n  }); // Negatives don't set '$'.\n\n  exceptionWithQuery({\n    a: [1]\n  }, {\n    $not: {\n      a: 2\n    }\n  }, {\n    $set: {\n      'a.$': 5\n    }\n  });\n  exceptionWithQuery({\n    a: [1]\n  }, {\n    'a.0': {\n      $ne: 2\n    }\n  }, {\n    $set: {\n      'a.$': 5\n    }\n  }); // One $or clause works.\n\n  modifyWithQuery({\n    a: [{\n      x: 2\n    }, {\n      x: 4\n    }]\n  }, {\n    $or: [{\n      'a.x': 4\n    }]\n  }, {\n    $set: {\n      'a.$.z': 9\n    }\n  }, {\n    a: [{\n      x: 2\n    }, {\n      x: 4,\n      z: 9\n    }]\n  }); // More $or clauses throw.\n\n  exceptionWithQuery({\n    a: [{\n      x: 2\n    }, {\n      x: 4\n    }]\n  }, {\n    $or: [{\n      'a.x': 4\n    }, {\n      'a.x': 4\n    }]\n  }, {\n    $set: {\n      'a.$.z': 9\n    }\n  }); // $and uses the last one.\n\n  modifyWithQuery({\n    a: [{\n      x: 1\n    }, {\n      x: 3\n    }]\n  }, {\n    $and: [{\n      'a.x': 1\n    }, {\n      'a.x': 3\n    }]\n  }, {\n    $set: {\n      'a.$.x': 5\n    }\n  }, {\n    a: [{\n      x: 1\n    }, {\n      x: 5\n    }]\n  });\n  modifyWithQuery({\n    a: [{\n      x: 1\n    }, {\n      x: 3\n    }]\n  }, {\n    $and: [{\n      'a.x': 3\n    }, {\n      'a.x': 1\n    }]\n  }, {\n    $set: {\n      'a.$.x': 5\n    }\n  }, {\n    a: [{\n      x: 5\n    }, {\n      x: 3\n    }]\n  }); // Same goes for the implicit AND of a document selector.\n\n  modifyWithQuery({\n    a: [{\n      x: 1\n    }, {\n      y: 3\n    }]\n  }, {\n    'a.x': 1,\n    'a.y': 3\n  }, {\n    $set: {\n      'a.$.z': 5\n    }\n  }, {\n    a: [{\n      x: 1\n    }, {\n      y: 3,\n      z: 5\n    }]\n  });\n  modifyWithQuery({\n    a: [{\n      x: 1\n    }, {\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }, {\n    a: {\n      $elemMatch: {\n        x: 1,\n        y: 1\n      }\n    }\n  }, {\n    $set: {\n      'a.$.x': 2\n    }\n  }, {\n    a: [{\n      x: 1\n    }, {\n      y: 1\n    }, {\n      x: 2,\n      y: 1\n    }]\n  });\n  modifyWithQuery({\n    a: [{\n      b: [{\n        x: 1\n      }, {\n        y: 1\n      }, {\n        x: 1,\n        y: 1\n      }]\n    }]\n  }, {\n    'a.b': {\n      $elemMatch: {\n        x: 1,\n        y: 1\n      }\n    }\n  }, {\n    $set: {\n      'a.$.b': 3\n    }\n  }, {\n    a: [{\n      b: 3\n    }]\n  }); // with $near, make sure it does not find the closest one (#3599)\n\n  modifyWithQuery({\n    a: []\n  }, {\n    'a.b': {\n      $near: [5, 5]\n    }\n  }, {\n    $set: {\n      'a.$.b': 'k'\n    }\n  }, {\n    \"a\": []\n  });\n  modifyWithQuery({\n    a: [{\n      b: [[3, 3], [4, 4]]\n    }]\n  }, {\n    'a.b': {\n      $near: [5, 5]\n    }\n  }, {\n    $set: {\n      'a.$.b': 'k'\n    }\n  }, {\n    \"a\": [{\n      \"b\": \"k\"\n    }]\n  });\n  modifyWithQuery({\n    a: [{\n      b: [1, 1]\n    }, {\n      b: [[3, 3], [4, 4]]\n    }, {\n      b: [9, 9]\n    }]\n  }, {\n    'a.b': {\n      $near: [5, 5]\n    }\n  }, {\n    $set: {\n      'a.$.b': 'k'\n    }\n  }, {\n    \"a\": [{\n      \"b\": \"k\"\n    }, {\n      \"b\": [[3, 3], [4, 4]]\n    }, {\n      \"b\": [9, 9]\n    }]\n  });\n  modifyWithQuery({\n    a: [{\n      b: [1, 1]\n    }, {\n      b: [[3, 3], [4, 4]]\n    }, {\n      b: [9, 9]\n    }]\n  }, {\n    'a.b': {\n      $near: [9, 9],\n      $maxDistance: 1\n    }\n  }, {\n    $set: {\n      'a.$.b': 'k'\n    }\n  }, {\n    \"a\": [{\n      \"b\": \"k\"\n    }, {\n      \"b\": [[3, 3], [4, 4]]\n    }, {\n      \"b\": [9, 9]\n    }]\n  });\n  modifyWithQuery({\n    a: [{\n      b: [1, 1]\n    }, {\n      b: [[3, 3], [4, 4]]\n    }, {\n      b: [9, 9]\n    }]\n  }, {\n    'a.b': {\n      $near: [9, 9]\n    }\n  }, {\n    $set: {\n      'a.$.b': 'k'\n    }\n  }, {\n    \"a\": [{\n      \"b\": \"k\"\n    }, {\n      \"b\": [[3, 3], [4, 4]]\n    }, {\n      \"b\": [9, 9]\n    }]\n  });\n  modifyWithQuery({\n    a: [{\n      b: [9, 9]\n    }, {\n      b: [[3, 3], [4, 4]]\n    }, {\n      b: [9, 9]\n    }]\n  }, {\n    'a.b': {\n      $near: [9, 9]\n    }\n  }, {\n    $set: {\n      'a.$.b': 'k'\n    }\n  }, {\n    \"a\": [{\n      \"b\": \"k\"\n    }, {\n      \"b\": [[3, 3], [4, 4]]\n    }, {\n      \"b\": [9, 9]\n    }]\n  });\n  modifyWithQuery({\n    a: [{\n      b: [4, 3]\n    }, {\n      c: [1, 1]\n    }]\n  }, {\n    'a.c': {\n      $near: [1, 1]\n    }\n  }, {\n    $set: {\n      'a.$.c': 'k'\n    }\n  }, {\n    \"a\": [{\n      \"c\": \"k\",\n      \"b\": [4, 3]\n    }, {\n      \"c\": [1, 1]\n    }]\n  });\n  modifyWithQuery({\n    a: [{\n      c: [9, 9]\n    }, {\n      b: [[3, 3], [4, 4]]\n    }, {\n      b: [1, 1]\n    }]\n  }, {\n    'a.b': {\n      $near: [1, 1]\n    }\n  }, {\n    $set: {\n      'a.$.b': 'k'\n    }\n  }, {\n    \"a\": [{\n      \"c\": [9, 9],\n      \"b\": \"k\"\n    }, {\n      \"b\": [[3, 3], [4, 4]]\n    }, {\n      \"b\": [1, 1]\n    }]\n  });\n  modifyWithQuery({\n    a: [{\n      c: [9, 9],\n      b: [4, 3]\n    }, {\n      b: [[3, 3], [4, 4]]\n    }, {\n      b: [1, 1]\n    }]\n  }, {\n    'a.b': {\n      $near: [1, 1]\n    }\n  }, {\n    $set: {\n      'a.$.b': 'k'\n    }\n  }, {\n    \"a\": [{\n      \"c\": [9, 9],\n      \"b\": \"k\"\n    }, {\n      \"b\": [[3, 3], [4, 4]]\n    }, {\n      \"b\": [1, 1]\n    }]\n  }); // $inc\n\n  modify({\n    a: 1,\n    b: 2\n  }, {\n    $inc: {\n      a: 10\n    }\n  }, {\n    a: 11,\n    b: 2\n  });\n  modify({\n    a: 1,\n    b: 2\n  }, {\n    $inc: {\n      c: 10\n    }\n  }, {\n    a: 1,\n    b: 2,\n    c: 10\n  });\n  exception({\n    a: 1\n  }, {\n    $inc: {\n      a: '10'\n    }\n  });\n  exception({\n    a: 1\n  }, {\n    $inc: {\n      a: true\n    }\n  });\n  exception({\n    a: 1\n  }, {\n    $inc: {\n      a: [10]\n    }\n  });\n  exception({\n    a: '1'\n  }, {\n    $inc: {\n      a: 10\n    }\n  });\n  exception({\n    a: [1]\n  }, {\n    $inc: {\n      a: 10\n    }\n  });\n  exception({\n    a: {}\n  }, {\n    $inc: {\n      a: 10\n    }\n  });\n  exception({\n    a: false\n  }, {\n    $inc: {\n      a: 10\n    }\n  });\n  exception({\n    a: null\n  }, {\n    $inc: {\n      a: 10\n    }\n  });\n  modify({\n    a: [1, 2]\n  }, {\n    $inc: {\n      'a.1': 10\n    }\n  }, {\n    a: [1, 12]\n  });\n  modify({\n    a: [1, 2]\n  }, {\n    $inc: {\n      'a.2': 10\n    }\n  }, {\n    a: [1, 2, 10]\n  });\n  modify({\n    a: [1, 2]\n  }, {\n    $inc: {\n      'a.3': 10\n    }\n  }, {\n    a: [1, 2, null, 10]\n  });\n  modify({\n    a: {\n      b: 2\n    }\n  }, {\n    $inc: {\n      'a.b': 10\n    }\n  }, {\n    a: {\n      b: 12\n    }\n  });\n  modify({\n    a: {\n      b: 2\n    }\n  }, {\n    $inc: {\n      'a.c': 10\n    }\n  }, {\n    a: {\n      b: 2,\n      c: 10\n    }\n  });\n  exception({}, {\n    $inc: {\n      _id: 1\n    }\n  }); // $currentDate\n\n  modify({}, {\n    $currentDate: {\n      a: true\n    }\n  }, function (result, msg) {\n    test.instanceOf(result.a, Date, msg);\n  });\n  modify({}, {\n    $currentDate: {\n      a: {\n        $type: \"date\"\n      }\n    }\n  }, function (result, msg) {\n    test.instanceOf(result.a, Date, msg);\n  });\n  exception({}, {\n    $currentDate: {\n      a: false\n    }\n  });\n  exception({}, {\n    $currentDate: {\n      a: {}\n    }\n  });\n  exception({}, {\n    $currentDate: {\n      a: {\n        $type: \"timestamp\"\n      }\n    }\n  }); // $min\n\n  modify({\n    a: 1,\n    b: 2\n  }, {\n    $min: {\n      b: 1\n    }\n  }, {\n    a: 1,\n    b: 1\n  });\n  modify({\n    a: 1,\n    b: 2\n  }, {\n    $min: {\n      b: 3\n    }\n  }, {\n    a: 1,\n    b: 2\n  });\n  modify({\n    a: 1,\n    b: 2\n  }, {\n    $min: {\n      c: 10\n    }\n  }, {\n    a: 1,\n    b: 2,\n    c: 10\n  });\n  exception({\n    a: 1\n  }, {\n    $min: {\n      a: '10'\n    }\n  });\n  exception({\n    a: 1\n  }, {\n    $min: {\n      a: true\n    }\n  });\n  exception({\n    a: 1\n  }, {\n    $min: {\n      a: [10]\n    }\n  });\n  exception({\n    a: '1'\n  }, {\n    $min: {\n      a: 10\n    }\n  });\n  exception({\n    a: [1]\n  }, {\n    $min: {\n      a: 10\n    }\n  });\n  exception({\n    a: {}\n  }, {\n    $min: {\n      a: 10\n    }\n  });\n  exception({\n    a: false\n  }, {\n    $min: {\n      a: 10\n    }\n  });\n  exception({\n    a: null\n  }, {\n    $min: {\n      a: 10\n    }\n  });\n  modify({\n    a: [1, 2]\n  }, {\n    $min: {\n      'a.1': 1\n    }\n  }, {\n    a: [1, 1]\n  });\n  modify({\n    a: [1, 2]\n  }, {\n    $min: {\n      'a.1': 3\n    }\n  }, {\n    a: [1, 2]\n  });\n  modify({\n    a: [1, 2]\n  }, {\n    $min: {\n      'a.2': 10\n    }\n  }, {\n    a: [1, 2, 10]\n  });\n  modify({\n    a: [1, 2]\n  }, {\n    $min: {\n      'a.3': 10\n    }\n  }, {\n    a: [1, 2, null, 10]\n  });\n  modify({\n    a: {\n      b: 2\n    }\n  }, {\n    $min: {\n      'a.b': 1\n    }\n  }, {\n    a: {\n      b: 1\n    }\n  });\n  modify({\n    a: {\n      b: 2\n    }\n  }, {\n    $min: {\n      'a.c': 10\n    }\n  }, {\n    a: {\n      b: 2,\n      c: 10\n    }\n  });\n  exception({}, {\n    $min: {\n      _id: 1\n    }\n  }); // $max\n\n  modify({\n    a: 1,\n    b: 2\n  }, {\n    $max: {\n      b: 1\n    }\n  }, {\n    a: 1,\n    b: 2\n  });\n  modify({\n    a: 1,\n    b: 2\n  }, {\n    $max: {\n      b: 3\n    }\n  }, {\n    a: 1,\n    b: 3\n  });\n  modify({\n    a: 1,\n    b: 2\n  }, {\n    $max: {\n      c: 10\n    }\n  }, {\n    a: 1,\n    b: 2,\n    c: 10\n  });\n  exception({\n    a: 1\n  }, {\n    $max: {\n      a: '10'\n    }\n  });\n  exception({\n    a: 1\n  }, {\n    $max: {\n      a: true\n    }\n  });\n  exception({\n    a: 1\n  }, {\n    $max: {\n      a: [10]\n    }\n  });\n  exception({\n    a: '1'\n  }, {\n    $max: {\n      a: 10\n    }\n  });\n  exception({\n    a: [1]\n  }, {\n    $max: {\n      a: 10\n    }\n  });\n  exception({\n    a: {}\n  }, {\n    $max: {\n      a: 10\n    }\n  });\n  exception({\n    a: false\n  }, {\n    $max: {\n      a: 10\n    }\n  });\n  exception({\n    a: null\n  }, {\n    $max: {\n      a: 10\n    }\n  });\n  modify({\n    a: [1, 2]\n  }, {\n    $max: {\n      'a.1': 3\n    }\n  }, {\n    a: [1, 3]\n  });\n  modify({\n    a: [1, 2]\n  }, {\n    $max: {\n      'a.1': 1\n    }\n  }, {\n    a: [1, 2]\n  });\n  modify({\n    a: [1, 2]\n  }, {\n    $max: {\n      'a.2': 10\n    }\n  }, {\n    a: [1, 2, 10]\n  });\n  modify({\n    a: [1, 2]\n  }, {\n    $max: {\n      'a.3': 10\n    }\n  }, {\n    a: [1, 2, null, 10]\n  });\n  modify({\n    a: {\n      b: 2\n    }\n  }, {\n    $max: {\n      'a.b': 3\n    }\n  }, {\n    a: {\n      b: 3\n    }\n  });\n  modify({\n    a: {\n      b: 2\n    }\n  }, {\n    $max: {\n      'a.c': 10\n    }\n  }, {\n    a: {\n      b: 2,\n      c: 10\n    }\n  });\n  exception({}, {\n    $max: {\n      _id: 1\n    }\n  }); // $set\n\n  modify({\n    a: 1,\n    b: 2\n  }, {\n    $set: {\n      a: 10\n    }\n  }, {\n    a: 10,\n    b: 2\n  });\n  modify({\n    a: 1,\n    b: 2\n  }, {\n    $set: {\n      c: 10\n    }\n  }, {\n    a: 1,\n    b: 2,\n    c: 10\n  });\n  modify({\n    a: 1,\n    b: 2\n  }, {\n    $set: {\n      a: {\n        c: 10\n      }\n    }\n  }, {\n    a: {\n      c: 10\n    },\n    b: 2\n  });\n  modify({\n    a: [1, 2],\n    b: 2\n  }, {\n    $set: {\n      a: [3, 4]\n    }\n  }, {\n    a: [3, 4],\n    b: 2\n  });\n  modify({\n    a: [1, 2, 3],\n    b: 2\n  }, {\n    $set: {\n      'a.1': [3, 4]\n    }\n  }, {\n    a: [1, [3, 4], 3],\n    b: 2\n  });\n  modify({\n    a: [1],\n    b: 2\n  }, {\n    $set: {\n      'a.1': 9\n    }\n  }, {\n    a: [1, 9],\n    b: 2\n  });\n  modify({\n    a: [1],\n    b: 2\n  }, {\n    $set: {\n      'a.2': 9\n    }\n  }, {\n    a: [1, null, 9],\n    b: 2\n  });\n  modify({\n    a: {\n      b: 1\n    }\n  }, {\n    $set: {\n      'a.c': 9\n    }\n  }, {\n    a: {\n      b: 1,\n      c: 9\n    }\n  });\n  modify({}, {\n    $set: {\n      'x._id': 4\n    }\n  }, {\n    x: {\n      _id: 4\n    }\n  });\n  exception({}, {\n    $set: {\n      _id: 4\n    }\n  });\n  exception({\n    _id: 4\n  }, {\n    $set: {\n      _id: 4\n    }\n  }); // even not-changing _id is bad\n  //restricted field names\n\n  exception({\n    a: {}\n  }, {\n    $set: {\n      a: {\n        $a: 1\n      }\n    }\n  });\n  exception({\n    a: {}\n  }, {\n    $set: {\n      a: {\n        c: [{\n          b: {\n            $a: 1\n          }\n        }]\n      }\n    }\n  });\n  exception({\n    a: {}\n  }, {\n    $set: {\n      a: {\n        '\\0a': 1\n      }\n    }\n  });\n  exception({\n    a: {}\n  }, {\n    $set: {\n      a: {\n        'a.b': 1\n      }\n    }\n  }); // $unset\n\n  modify({}, {\n    $unset: {\n      a: 1\n    }\n  }, {});\n  modify({\n    a: 1\n  }, {\n    $unset: {\n      a: 1\n    }\n  }, {});\n  modify({\n    a: 1,\n    b: 2\n  }, {\n    $unset: {\n      a: 1\n    }\n  }, {\n    b: 2\n  });\n  modify({\n    a: 1,\n    b: 2\n  }, {\n    $unset: {\n      a: 0\n    }\n  }, {\n    b: 2\n  });\n  modify({\n    a: 1,\n    b: 2\n  }, {\n    $unset: {\n      a: false\n    }\n  }, {\n    b: 2\n  });\n  modify({\n    a: 1,\n    b: 2\n  }, {\n    $unset: {\n      a: null\n    }\n  }, {\n    b: 2\n  });\n  modify({\n    a: 1,\n    b: 2\n  }, {\n    $unset: {\n      a: [1]\n    }\n  }, {\n    b: 2\n  });\n  modify({\n    a: 1,\n    b: 2\n  }, {\n    $unset: {\n      a: {}\n    }\n  }, {\n    b: 2\n  });\n  modify({\n    a: {\n      b: 2,\n      c: 3\n    }\n  }, {\n    $unset: {\n      'a.b': 1\n    }\n  }, {\n    a: {\n      c: 3\n    }\n  });\n  modify({\n    a: [1, 2, 3]\n  }, {\n    $unset: {\n      'a.1': 1\n    }\n  }, {\n    a: [1, null, 3]\n  }); // tested\n\n  modify({\n    a: [1, 2, 3]\n  }, {\n    $unset: {\n      'a.2': 1\n    }\n  }, {\n    a: [1, 2, null]\n  }); // tested\n\n  modify({\n    a: [1, 2, 3]\n  }, {\n    $unset: {\n      'a.x': 1\n    }\n  }, {\n    a: [1, 2, 3]\n  }); // tested\n\n  modify({\n    a: {\n      b: 1\n    }\n  }, {\n    $unset: {\n      'a.b.c.d': 1\n    }\n  }, {\n    a: {\n      b: 1\n    }\n  });\n  modify({\n    a: {\n      b: 1\n    }\n  }, {\n    $unset: {\n      'a.x.c.d': 1\n    }\n  }, {\n    a: {\n      b: 1\n    }\n  });\n  modify({\n    a: {\n      b: {\n        c: 1\n      }\n    }\n  }, {\n    $unset: {\n      'a.b.c': 1\n    }\n  }, {\n    a: {\n      b: {}\n    }\n  });\n  exception({}, {\n    $unset: {\n      _id: 1\n    }\n  }); // $push\n\n  modify({}, {\n    $push: {\n      a: 1\n    }\n  }, {\n    a: [1]\n  });\n  modify({\n    a: []\n  }, {\n    $push: {\n      a: 1\n    }\n  }, {\n    a: [1]\n  });\n  modify({\n    a: [1]\n  }, {\n    $push: {\n      a: 2\n    }\n  }, {\n    a: [1, 2]\n  });\n  exception({\n    a: true\n  }, {\n    $push: {\n      a: 1\n    }\n  });\n  modify({\n    a: [1]\n  }, {\n    $push: {\n      a: [2]\n    }\n  }, {\n    a: [1, [2]]\n  });\n  modify({\n    a: []\n  }, {\n    $push: {\n      'a.1': 99\n    }\n  }, {\n    a: [null, [99]]\n  }); // tested\n\n  modify({\n    a: {}\n  }, {\n    $push: {\n      'a.x': 99\n    }\n  }, {\n    a: {\n      x: [99]\n    }\n  });\n  modify({}, {\n    $push: {\n      a: {\n        $each: [1, 2, 3]\n      }\n    }\n  }, {\n    a: [1, 2, 3]\n  });\n  modify({\n    a: []\n  }, {\n    $push: {\n      a: {\n        $each: [1, 2, 3]\n      }\n    }\n  }, {\n    a: [1, 2, 3]\n  });\n  modify({\n    a: [true]\n  }, {\n    $push: {\n      a: {\n        $each: [1, 2, 3]\n      }\n    }\n  }, {\n    a: [true, 1, 2, 3]\n  });\n  modify({\n    a: [true]\n  }, {\n    $push: {\n      a: {\n        $each: [1, 2, 3],\n        $slice: -2\n      }\n    }\n  }, {\n    a: [2, 3]\n  });\n  modify({\n    a: [false, true]\n  }, {\n    $push: {\n      a: {\n        $each: [1],\n        $slice: -2\n      }\n    }\n  }, {\n    a: [true, 1]\n  });\n  modify({\n    a: [{\n      x: 3\n    }, {\n      x: 1\n    }]\n  }, {\n    $push: {\n      a: {\n        $each: [{\n          x: 4\n        }, {\n          x: 2\n        }],\n        $slice: -2,\n        $sort: {\n          x: 1\n        }\n      }\n    }\n  }, {\n    a: [{\n      x: 3\n    }, {\n      x: 4\n    }]\n  });\n  modify({}, {\n    $push: {\n      a: {\n        $each: [1, 2, 3],\n        $slice: 0\n      }\n    }\n  }, {\n    a: []\n  });\n  modify({\n    a: [1, 2]\n  }, {\n    $push: {\n      a: {\n        $each: [1, 2, 3],\n        $slice: 0\n      }\n    }\n  }, {\n    a: []\n  }); // $push with $position modifier\n  // No negative number for $position\n\n  exception({\n    a: []\n  }, {\n    $push: {\n      a: {\n        $each: [0],\n        $position: -1\n      }\n    }\n  });\n  modify({\n    a: [1, 2]\n  }, {\n    $push: {\n      a: {\n        $each: [0],\n        $position: 0\n      }\n    }\n  }, {\n    a: [0, 1, 2]\n  });\n  modify({\n    a: [1, 2]\n  }, {\n    $push: {\n      a: {\n        $each: [-1, 0],\n        $position: 0\n      }\n    }\n  }, {\n    a: [-1, 0, 1, 2]\n  });\n  modify({\n    a: [1, 3]\n  }, {\n    $push: {\n      a: {\n        $each: [2],\n        $position: 1\n      }\n    }\n  }, {\n    a: [1, 2, 3]\n  });\n  modify({\n    a: [1, 4]\n  }, {\n    $push: {\n      a: {\n        $each: [2, 3],\n        $position: 1\n      }\n    }\n  }, {\n    a: [1, 2, 3, 4]\n  });\n  modify({\n    a: [1, 2]\n  }, {\n    $push: {\n      a: {\n        $each: [3],\n        $position: 3\n      }\n    }\n  }, {\n    a: [1, 2, 3]\n  });\n  modify({\n    a: [1, 2]\n  }, {\n    $push: {\n      a: {\n        $each: [3],\n        $position: 99\n      }\n    }\n  }, {\n    a: [1, 2, 3]\n  });\n  modify({\n    a: [1, 2]\n  }, {\n    $push: {\n      a: {\n        $each: [3],\n        $position: 99,\n        $slice: -2\n      }\n    }\n  }, {\n    a: [2, 3]\n  });\n  modify({\n    a: [{\n      x: 1\n    }, {\n      x: 2\n    }]\n  }, {\n    $push: {\n      a: {\n        $each: [{\n          x: 3\n        }],\n        $position: 0,\n        $sort: {\n          x: 1\n        },\n        $slice: -3\n      }\n    }\n  }, {\n    a: [{\n      x: 1\n    }, {\n      x: 2\n    }, {\n      x: 3\n    }]\n  });\n  modify({\n    a: [{\n      x: 1\n    }, {\n      x: 2\n    }]\n  }, {\n    $push: {\n      a: {\n        $each: [{\n          x: 3\n        }],\n        $position: 0,\n        $sort: {\n          x: 1\n        },\n        $slice: 0\n      }\n    }\n  }, {\n    a: []\n  }); //restricted field names\n\n  exception({}, {\n    $push: {\n      $a: 1\n    }\n  });\n  exception({}, {\n    $push: {\n      '\\0a': 1\n    }\n  });\n  exception({}, {\n    $push: {\n      a: {\n        $a: 1\n      }\n    }\n  });\n  exception({}, {\n    $push: {\n      a: {\n        $each: [{\n          $a: 1\n        }]\n      }\n    }\n  });\n  exception({}, {\n    $push: {\n      a: {\n        $each: [{\n          \"a.b\": 1\n        }]\n      }\n    }\n  });\n  exception({}, {\n    $push: {\n      a: {\n        $each: [{\n          '\\0a': 1\n        }]\n      }\n    }\n  });\n  modify({}, {\n    $push: {\n      a: {\n        $each: [{\n          '': 1\n        }]\n      }\n    }\n  }, {\n    a: [{\n      '': 1\n    }]\n  });\n  modify({}, {\n    $push: {\n      a: {\n        $each: [{\n          ' ': 1\n        }]\n      }\n    }\n  }, {\n    a: [{\n      ' ': 1\n    }]\n  });\n  exception({}, {\n    $push: {\n      a: {\n        $each: [{\n          '.': 1\n        }]\n      }\n    }\n  }); // #issue 5167\n  // $push $slice with positive numbers\n\n  modify({}, {\n    $push: {\n      a: {\n        $each: [],\n        $slice: 5\n      }\n    }\n  }, {\n    a: []\n  });\n  modify({\n    a: [1, 2, 3]\n  }, {\n    $push: {\n      a: {\n        $each: [],\n        $slice: 1\n      }\n    }\n  }, {\n    a: [1]\n  });\n  modify({\n    a: [1, 2, 3]\n  }, {\n    $push: {\n      a: {\n        $each: [4, 5],\n        $slice: 1\n      }\n    }\n  }, {\n    a: [1]\n  });\n  modify({\n    a: [1, 2, 3]\n  }, {\n    $push: {\n      a: {\n        $each: [4, 5],\n        $slice: 2\n      }\n    }\n  }, {\n    a: [1, 2]\n  });\n  modify({\n    a: [1, 2, 3]\n  }, {\n    $push: {\n      a: {\n        $each: [4, 5],\n        $slice: 4\n      }\n    }\n  }, {\n    a: [1, 2, 3, 4]\n  });\n  modify({\n    a: [1, 2, 3]\n  }, {\n    $push: {\n      a: {\n        $each: [4, 5],\n        $slice: 5\n      }\n    }\n  }, {\n    a: [1, 2, 3, 4, 5]\n  });\n  modify({\n    a: [1, 2, 3]\n  }, {\n    $push: {\n      a: {\n        $each: [4, 5],\n        $slice: 10\n      }\n    }\n  }, {\n    a: [1, 2, 3, 4, 5]\n  }); // $pushAll\n\n  modify({}, {\n    $pushAll: {\n      a: [1]\n    }\n  }, {\n    a: [1]\n  });\n  modify({\n    a: []\n  }, {\n    $pushAll: {\n      a: [1]\n    }\n  }, {\n    a: [1]\n  });\n  modify({\n    a: [1]\n  }, {\n    $pushAll: {\n      a: [2]\n    }\n  }, {\n    a: [1, 2]\n  });\n  modify({}, {\n    $pushAll: {\n      a: [1, 2]\n    }\n  }, {\n    a: [1, 2]\n  });\n  modify({\n    a: []\n  }, {\n    $pushAll: {\n      a: [1, 2]\n    }\n  }, {\n    a: [1, 2]\n  });\n  modify({\n    a: [1]\n  }, {\n    $pushAll: {\n      a: [2, 3]\n    }\n  }, {\n    a: [1, 2, 3]\n  });\n  modify({}, {\n    $pushAll: {\n      a: []\n    }\n  }, {\n    a: []\n  });\n  modify({\n    a: []\n  }, {\n    $pushAll: {\n      a: []\n    }\n  }, {\n    a: []\n  });\n  modify({\n    a: [1]\n  }, {\n    $pushAll: {\n      a: []\n    }\n  }, {\n    a: [1]\n  });\n  exception({\n    a: true\n  }, {\n    $pushAll: {\n      a: [1]\n    }\n  });\n  exception({\n    a: []\n  }, {\n    $pushAll: {\n      a: 1\n    }\n  });\n  modify({\n    a: []\n  }, {\n    $pushAll: {\n      'a.1': [99]\n    }\n  }, {\n    a: [null, [99]]\n  });\n  modify({\n    a: []\n  }, {\n    $pushAll: {\n      'a.1': []\n    }\n  }, {\n    a: [null, []]\n  });\n  modify({\n    a: {}\n  }, {\n    $pushAll: {\n      'a.x': [99]\n    }\n  }, {\n    a: {\n      x: [99]\n    }\n  });\n  modify({\n    a: {}\n  }, {\n    $pushAll: {\n      'a.x': []\n    }\n  }, {\n    a: {\n      x: []\n    }\n  });\n  exception({\n    a: [1]\n  }, {\n    $pushAll: {\n      a: [{\n        $a: 1\n      }]\n    }\n  });\n  exception({\n    a: [1]\n  }, {\n    $pushAll: {\n      a: [{\n        '\\0a': 1\n      }]\n    }\n  });\n  exception({\n    a: [1]\n  }, {\n    $pushAll: {\n      a: [{\n        \"a.b\": 1\n      }]\n    }\n  }); // $addToSet\n\n  modify({}, {\n    $addToSet: {\n      a: 1\n    }\n  }, {\n    a: [1]\n  });\n  modify({\n    a: []\n  }, {\n    $addToSet: {\n      a: 1\n    }\n  }, {\n    a: [1]\n  });\n  modify({\n    a: [1]\n  }, {\n    $addToSet: {\n      a: 2\n    }\n  }, {\n    a: [1, 2]\n  });\n  modify({\n    a: [1, 2]\n  }, {\n    $addToSet: {\n      a: 1\n    }\n  }, {\n    a: [1, 2]\n  });\n  modify({\n    a: [1, 2]\n  }, {\n    $addToSet: {\n      a: 2\n    }\n  }, {\n    a: [1, 2]\n  });\n  modify({\n    a: [1, 2]\n  }, {\n    $addToSet: {\n      a: 3\n    }\n  }, {\n    a: [1, 2, 3]\n  });\n  exception({\n    a: true\n  }, {\n    $addToSet: {\n      a: 1\n    }\n  });\n  modify({\n    a: [1]\n  }, {\n    $addToSet: {\n      a: [2]\n    }\n  }, {\n    a: [1, [2]]\n  });\n  modify({}, {\n    $addToSet: {\n      a: {\n        x: 1\n      }\n    }\n  }, {\n    a: [{\n      x: 1\n    }]\n  });\n  modify({\n    a: [{\n      x: 1\n    }]\n  }, {\n    $addToSet: {\n      a: {\n        x: 1\n      }\n    }\n  }, {\n    a: [{\n      x: 1\n    }]\n  });\n  modify({\n    a: [{\n      x: 1\n    }]\n  }, {\n    $addToSet: {\n      a: {\n        x: 2\n      }\n    }\n  }, {\n    a: [{\n      x: 1\n    }, {\n      x: 2\n    }]\n  });\n  modify({\n    a: [{\n      x: 1,\n      y: 2\n    }]\n  }, {\n    $addToSet: {\n      a: {\n        x: 1,\n        y: 2\n      }\n    }\n  }, {\n    a: [{\n      x: 1,\n      y: 2\n    }]\n  });\n  modify({\n    a: [{\n      x: 1,\n      y: 2\n    }]\n  }, {\n    $addToSet: {\n      a: {\n        y: 2,\n        x: 1\n      }\n    }\n  }, {\n    a: [{\n      x: 1,\n      y: 2\n    }, {\n      y: 2,\n      x: 1\n    }]\n  });\n  modify({\n    a: [1, 2]\n  }, {\n    $addToSet: {\n      a: {\n        $each: [3, 1, 4]\n      }\n    }\n  }, {\n    a: [1, 2, 3, 4]\n  });\n  modify({}, {\n    $addToSet: {\n      a: {\n        $each: []\n      }\n    }\n  }, {\n    a: []\n  });\n  modify({}, {\n    $addToSet: {\n      a: {\n        $each: [1]\n      }\n    }\n  }, {\n    a: [1]\n  });\n  modify({\n    a: []\n  }, {\n    $addToSet: {\n      'a.1': 99\n    }\n  }, {\n    a: [null, [99]]\n  });\n  modify({\n    a: {}\n  }, {\n    $addToSet: {\n      'a.x': 99\n    }\n  }, {\n    a: {\n      x: [99]\n    }\n  }); // invalid field names\n\n  exception({}, {\n    $addToSet: {\n      a: {\n        $b: 1\n      }\n    }\n  });\n  exception({}, {\n    $addToSet: {\n      a: {\n        \"a.b\": 1\n      }\n    }\n  });\n  exception({}, {\n    $addToSet: {\n      a: {\n        \"a.\": 1\n      }\n    }\n  });\n  exception({}, {\n    $addToSet: {\n      a: {\n        \"\\0a\": 1\n      }\n    }\n  });\n  exception({\n    a: [1, 2]\n  }, {\n    $addToSet: {\n      a: {\n        $each: [3, 1, {\n          $a: 1\n        }]\n      }\n    }\n  });\n  exception({\n    a: [1, 2]\n  }, {\n    $addToSet: {\n      a: {\n        $each: [3, 1, {\n          '\\0a': 1\n        }]\n      }\n    }\n  });\n  exception({\n    a: [1, 2]\n  }, {\n    $addToSet: {\n      a: {\n        $each: [3, 1, [{\n          $a: 1\n        }]]\n      }\n    }\n  });\n  exception({\n    a: [1, 2]\n  }, {\n    $addToSet: {\n      a: {\n        $each: [3, 1, [{\n          b: {\n            c: [{\n              a: 1\n            }, {\n              \"d.s\": 2\n            }]\n          }\n        }]]\n      }\n    }\n  });\n  exception({\n    a: [1, 2]\n  }, {\n    $addToSet: {\n      a: {\n        b: [3, 1, [{\n          b: {\n            c: [{\n              a: 1\n            }, {\n              \"d.s\": 2\n            }]\n          }\n        }]]\n      }\n    }\n  }); //$each is first element and thus an operator\n\n  modify({\n    a: [1, 2]\n  }, {\n    $addToSet: {\n      a: {\n        $each: [3, 1, 4],\n        b: 12\n      }\n    }\n  }, {\n    a: [1, 2, 3, 4]\n  }); // this should fail because $each is now a field name (not first in object) and thus invalid field name with $\n\n  exception({\n    a: [1, 2]\n  }, {\n    $addToSet: {\n      a: {\n        b: 12,\n        $each: [3, 1, 4]\n      }\n    }\n  }); // $pop\n\n  modify({}, {\n    $pop: {\n      a: 1\n    }\n  }, {}); // tested\n\n  modify({}, {\n    $pop: {\n      a: -1\n    }\n  }, {}); // tested\n\n  modify({\n    a: []\n  }, {\n    $pop: {\n      a: 1\n    }\n  }, {\n    a: []\n  });\n  modify({\n    a: []\n  }, {\n    $pop: {\n      a: -1\n    }\n  }, {\n    a: []\n  });\n  modify({\n    a: [1, 2, 3]\n  }, {\n    $pop: {\n      a: 1\n    }\n  }, {\n    a: [1, 2]\n  });\n  modify({\n    a: [1, 2, 3]\n  }, {\n    $pop: {\n      a: 10\n    }\n  }, {\n    a: [1, 2]\n  });\n  modify({\n    a: [1, 2, 3]\n  }, {\n    $pop: {\n      a: .001\n    }\n  }, {\n    a: [1, 2]\n  });\n  modify({\n    a: [1, 2, 3]\n  }, {\n    $pop: {\n      a: 0\n    }\n  }, {\n    a: [1, 2]\n  });\n  modify({\n    a: [1, 2, 3]\n  }, {\n    $pop: {\n      a: \"stuff\"\n    }\n  }, {\n    a: [1, 2]\n  });\n  modify({\n    a: [1, 2, 3]\n  }, {\n    $pop: {\n      a: -1\n    }\n  }, {\n    a: [2, 3]\n  });\n  modify({\n    a: [1, 2, 3]\n  }, {\n    $pop: {\n      a: -10\n    }\n  }, {\n    a: [2, 3]\n  });\n  modify({\n    a: [1, 2, 3]\n  }, {\n    $pop: {\n      a: -.001\n    }\n  }, {\n    a: [2, 3]\n  });\n  exception({\n    a: true\n  }, {\n    $pop: {\n      a: 1\n    }\n  });\n  exception({\n    a: true\n  }, {\n    $pop: {\n      a: -1\n    }\n  });\n  modify({\n    a: []\n  }, {\n    $pop: {\n      'a.1': 1\n    }\n  }, {\n    a: []\n  }); // tested\n\n  modify({\n    a: [1, [2, 3], 4]\n  }, {\n    $pop: {\n      'a.1': 1\n    }\n  }, {\n    a: [1, [2], 4]\n  });\n  modify({\n    a: {}\n  }, {\n    $pop: {\n      'a.x': 1\n    }\n  }, {\n    a: {}\n  }); // tested\n\n  modify({\n    a: {\n      x: [2, 3]\n    }\n  }, {\n    $pop: {\n      'a.x': 1\n    }\n  }, {\n    a: {\n      x: [2]\n    }\n  }); // $pull\n\n  modify({}, {\n    $pull: {\n      a: 1\n    }\n  }, {});\n  modify({}, {\n    $pull: {\n      'a.x': 1\n    }\n  }, {});\n  modify({\n    a: {}\n  }, {\n    $pull: {\n      'a.x': 1\n    }\n  }, {\n    a: {}\n  });\n  exception({\n    a: true\n  }, {\n    $pull: {\n      a: 1\n    }\n  });\n  modify({\n    a: [2, 1, 2]\n  }, {\n    $pull: {\n      a: 1\n    }\n  }, {\n    a: [2, 2]\n  });\n  modify({\n    a: [2, 1, 2]\n  }, {\n    $pull: {\n      a: 2\n    }\n  }, {\n    a: [1]\n  });\n  modify({\n    a: [2, 1, 2]\n  }, {\n    $pull: {\n      a: 3\n    }\n  }, {\n    a: [2, 1, 2]\n  });\n  modify({\n    a: [1, null, 2, null]\n  }, {\n    $pull: {\n      a: null\n    }\n  }, {\n    a: [1, 2]\n  });\n  modify({\n    a: []\n  }, {\n    $pull: {\n      a: 3\n    }\n  }, {\n    a: []\n  });\n  modify({\n    a: [[2], [2, 1], [3]]\n  }, {\n    $pull: {\n      a: [2, 1]\n    }\n  }, {\n    a: [[2], [3]]\n  }); // tested\n\n  modify({\n    a: [{\n      b: 1,\n      c: 2\n    }, {\n      b: 2,\n      c: 2\n    }]\n  }, {\n    $pull: {\n      a: {\n        b: 1\n      }\n    }\n  }, {\n    a: [{\n      b: 2,\n      c: 2\n    }]\n  });\n  modify({\n    a: [{\n      b: 1,\n      c: 2\n    }, {\n      b: 2,\n      c: 2\n    }]\n  }, {\n    $pull: {\n      a: {\n        c: 2\n      }\n    }\n  }, {\n    a: []\n  }); // XXX implement this functionality!\n  // probably same refactoring as $elemMatch?\n  // modify({a: [1, 2, 3, 4]}, {$pull: {$gt: 2}}, {a: [1,2]}); fails!\n  // $pullAll\n\n  modify({}, {\n    $pullAll: {\n      a: [1]\n    }\n  }, {});\n  modify({\n    a: [1, 2, 3]\n  }, {\n    $pullAll: {\n      a: []\n    }\n  }, {\n    a: [1, 2, 3]\n  });\n  modify({\n    a: [1, 2, 3]\n  }, {\n    $pullAll: {\n      a: [2]\n    }\n  }, {\n    a: [1, 3]\n  });\n  modify({\n    a: [1, 2, 3]\n  }, {\n    $pullAll: {\n      a: [2, 1]\n    }\n  }, {\n    a: [3]\n  });\n  modify({\n    a: [1, 2, 3]\n  }, {\n    $pullAll: {\n      a: [1, 2]\n    }\n  }, {\n    a: [3]\n  });\n  modify({}, {\n    $pullAll: {\n      'a.b.c': [2]\n    }\n  }, {});\n  exception({\n    a: true\n  }, {\n    $pullAll: {\n      a: [1]\n    }\n  });\n  exception({\n    a: [1, 2, 3]\n  }, {\n    $pullAll: {\n      a: 1\n    }\n  });\n  modify({\n    x: [{\n      a: 1\n    }, {\n      a: 1,\n      b: 2\n    }]\n  }, {\n    $pullAll: {\n      x: [{\n        a: 1\n      }]\n    }\n  }, {\n    x: [{\n      a: 1,\n      b: 2\n    }]\n  }); // $rename\n\n  modify({}, {\n    $rename: {\n      a: 'b'\n    }\n  }, {});\n  modify({\n    a: [12]\n  }, {\n    $rename: {\n      a: 'b'\n    }\n  }, {\n    b: [12]\n  });\n  modify({\n    a: {\n      b: 12\n    }\n  }, {\n    $rename: {\n      a: 'c'\n    }\n  }, {\n    c: {\n      b: 12\n    }\n  });\n  modify({\n    a: {\n      b: 12\n    }\n  }, {\n    $rename: {\n      'a.b': 'a.c'\n    }\n  }, {\n    a: {\n      c: 12\n    }\n  });\n  modify({\n    a: {\n      b: 12\n    }\n  }, {\n    $rename: {\n      'a.b': 'x'\n    }\n  }, {\n    a: {},\n    x: 12\n  }); // tested\n\n  modify({\n    a: {\n      b: 12\n    }\n  }, {\n    $rename: {\n      'a.b': 'q.r'\n    }\n  }, {\n    a: {},\n    q: {\n      r: 12\n    }\n  });\n  modify({\n    a: {\n      b: 12\n    }\n  }, {\n    $rename: {\n      'a.b': 'q.2.r'\n    }\n  }, {\n    a: {},\n    q: {\n      2: {\n        r: 12\n      }\n    }\n  });\n  modify({\n    a: {\n      b: 12\n    },\n    q: {}\n  }, {\n    $rename: {\n      'a.b': 'q.2.r'\n    }\n  }, {\n    a: {},\n    q: {\n      2: {\n        r: 12\n      }\n    }\n  });\n  exception({\n    a: {\n      b: 12\n    },\n    q: []\n  }, {\n    $rename: {\n      'a.b': 'q.2'\n    }\n  }); // tested\n\n  exception({\n    a: {\n      b: 12\n    },\n    q: []\n  }, {\n    $rename: {\n      'a.b': 'q.2.r'\n    }\n  }); // tested\n  // These strange MongoDB behaviors throw.\n  // modify({a: {b: 12}, q: []}, {$rename: {'q.1': 'x'}},\n  //        {a: {b: 12}, x: []}); // tested\n  // modify({a: {b: 12}, q: []}, {$rename: {'q.1.j': 'x'}},\n  //        {a: {b: 12}, x: []}); // tested\n\n  exception({}, {\n    $rename: {\n      'a': 'a'\n    }\n  });\n  exception({}, {\n    $rename: {\n      'a.b': 'a.b'\n    }\n  });\n  modify({\n    a: 12,\n    b: 13\n  }, {\n    $rename: {\n      a: 'b'\n    }\n  }, {\n    b: 12\n  });\n  exception({\n    a: [12]\n  }, {\n    $rename: {\n      a: '$b'\n    }\n  });\n  exception({\n    a: [12]\n  }, {\n    $rename: {\n      a: '\\0a'\n    }\n  }); // $setOnInsert\n\n  modify({\n    a: 0\n  }, {\n    $setOnInsert: {\n      a: 12\n    }\n  }, {\n    a: 0\n  });\n  upsert({\n    a: 12\n  }, {\n    $setOnInsert: {\n      b: 12\n    }\n  }, {\n    a: 12,\n    b: 12\n  });\n  upsert({\n    a: 12\n  }, {\n    $setOnInsert: {\n      _id: 'test'\n    }\n  }, {\n    _id: 'test',\n    a: 12\n  });\n  upsert({\n    \"a.b\": 10\n  }, {\n    $setOnInsert: {\n      a: {\n        b: 10,\n        c: 12\n      }\n    }\n  }, {\n    a: {\n      b: 10,\n      c: 12\n    }\n  });\n  upsert({\n    \"a.b\": 10\n  }, {\n    $setOnInsert: {\n      c: 12\n    }\n  }, {\n    a: {\n      b: 10\n    },\n    c: 12\n  });\n  upsert({\n    \"_id\": 'test'\n  }, {\n    $setOnInsert: {\n      c: 12\n    }\n  }, {\n    _id: 'test',\n    c: 12\n  });\n  upsert('test', {\n    $setOnInsert: {\n      c: 12\n    }\n  }, {\n    _id: 'test',\n    c: 12\n  });\n  upsertException({\n    a: 0\n  }, {\n    $setOnInsert: {\n      $a: 12\n    }\n  });\n  upsertException({\n    a: 0\n  }, {\n    $setOnInsert: {\n      '\\0a': 12\n    }\n  });\n  upsert({\n    a: 0\n  }, {\n    $setOnInsert: {\n      b: {\n        a: 1\n      }\n    }\n  }, {\n    a: 0,\n    b: {\n      a: 1\n    }\n  });\n  upsertException({\n    a: 0\n  }, {\n    $setOnInsert: {\n      b: {\n        $a: 1\n      }\n    }\n  });\n  upsertException({\n    a: 0\n  }, {\n    $setOnInsert: {\n      b: {\n        'a.b': 1\n      }\n    }\n  });\n  upsertException({\n    a: 0\n  }, {\n    $setOnInsert: {\n      b: {\n        '\\0a': 1\n      }\n    }\n  });\n  exception({}, {\n    $set: {\n      _id: 'bad'\n    }\n  }); // $bit\n  // unimplemented\n  // XXX test case sensitivity of modops\n  // XXX for each (most) modop, test that it performs a deep copy\n}); // XXX test update() (selecting docs, multi, upsert..)\n\nTinytest.add(\"minimongo - observe ordered\", function (test) {\n  var operations = [];\n  var cbs = log_callbacks(operations);\n  var handle;\n  var c = new LocalCollection();\n  handle = c.find({}, {\n    sort: {\n      a: 1\n    }\n  }).observe(cbs);\n  test.isTrue(handle.collection === c);\n  c.insert({\n    _id: 'foo',\n    a: 1\n  });\n  test.equal(operations.shift(), ['added', {\n    a: 1\n  }, 0, null]);\n  c.update({\n    a: 1\n  }, {\n    $set: {\n      a: 2\n    }\n  });\n  test.equal(operations.shift(), ['changed', {\n    a: 2\n  }, 0, {\n    a: 1\n  }]);\n  c.insert({\n    a: 10\n  });\n  test.equal(operations.shift(), ['added', {\n    a: 10\n  }, 1, null]);\n  c.update({}, {\n    $inc: {\n      a: 1\n    }\n  }, {\n    multi: true\n  });\n  test.equal(operations.shift(), ['changed', {\n    a: 3\n  }, 0, {\n    a: 2\n  }]);\n  test.equal(operations.shift(), ['changed', {\n    a: 11\n  }, 1, {\n    a: 10\n  }]);\n  c.update({\n    a: 11\n  }, {\n    a: 1\n  });\n  test.equal(operations.shift(), ['changed', {\n    a: 1\n  }, 1, {\n    a: 11\n  }]);\n  test.equal(operations.shift(), ['moved', {\n    a: 1\n  }, 1, 0, 'foo']);\n  c.remove({\n    a: 2\n  });\n  test.equal(operations.shift(), undefined);\n  c.remove({\n    a: 3\n  });\n  test.equal(operations.shift(), ['removed', 'foo', 1, {\n    a: 3\n  }]); // test stop\n\n  handle.stop();\n  var idA2 = Random.id();\n  c.insert({\n    _id: idA2,\n    a: 2\n  });\n  test.equal(operations.shift(), undefined); // test initial inserts (and backwards sort)\n\n  handle = c.find({}, {\n    sort: {\n      a: -1\n    }\n  }).observe(cbs);\n  test.equal(operations.shift(), ['added', {\n    a: 2\n  }, 0, null]);\n  test.equal(operations.shift(), ['added', {\n    a: 1\n  }, 1, null]);\n  handle.stop(); // test _suppress_initial\n\n  handle = c.find({}, {\n    sort: {\n      a: -1\n    }\n  }).observe(_.extend({\n    _suppress_initial: true\n  }, cbs));\n  test.equal(operations.shift(), undefined);\n  c.insert({\n    a: 100\n  });\n  test.equal(operations.shift(), ['added', {\n    a: 100\n  }, 0, idA2]);\n  handle.stop(); // test skip and limit.\n\n  c.remove({});\n  handle = c.find({}, {\n    sort: {\n      a: 1\n    },\n    skip: 1,\n    limit: 2\n  }).observe(cbs);\n  test.equal(operations.shift(), undefined);\n  c.insert({\n    a: 1\n  });\n  test.equal(operations.shift(), undefined);\n  c.insert({\n    _id: 'foo',\n    a: 2\n  });\n  test.equal(operations.shift(), ['added', {\n    a: 2\n  }, 0, null]);\n  c.insert({\n    a: 3\n  });\n  test.equal(operations.shift(), ['added', {\n    a: 3\n  }, 1, null]);\n  c.insert({\n    a: 4\n  });\n  test.equal(operations.shift(), undefined);\n  c.update({\n    a: 1\n  }, {\n    a: 0\n  });\n  test.equal(operations.shift(), undefined);\n  c.update({\n    a: 0\n  }, {\n    a: 5\n  });\n  test.equal(operations.shift(), ['removed', 'foo', 0, {\n    a: 2\n  }]);\n  test.equal(operations.shift(), ['added', {\n    a: 4\n  }, 1, null]);\n  c.update({\n    a: 3\n  }, {\n    a: 3.5\n  });\n  test.equal(operations.shift(), ['changed', {\n    a: 3.5\n  }, 0, {\n    a: 3\n  }]);\n  handle.stop(); // test observe limit with pre-existing docs\n\n  c.remove({});\n  c.insert({\n    a: 1\n  });\n  c.insert({\n    _id: 'two',\n    a: 2\n  });\n  c.insert({\n    a: 3\n  });\n  handle = c.find({}, {\n    sort: {\n      a: 1\n    },\n    limit: 2\n  }).observe(cbs);\n  test.equal(operations.shift(), ['added', {\n    a: 1\n  }, 0, null]);\n  test.equal(operations.shift(), ['added', {\n    a: 2\n  }, 1, null]);\n  test.equal(operations.shift(), undefined);\n  c.remove({\n    a: 2\n  });\n  test.equal(operations.shift(), ['removed', 'two', 1, {\n    a: 2\n  }]);\n  test.equal(operations.shift(), ['added', {\n    a: 3\n  }, 1, null]);\n  test.equal(operations.shift(), undefined);\n  handle.stop(); // test _no_indices\n\n  c.remove({});\n  handle = c.find({}, {\n    sort: {\n      a: 1\n    }\n  }).observe(_.extend(cbs, {\n    _no_indices: true\n  }));\n  c.insert({\n    _id: 'foo',\n    a: 1\n  });\n  test.equal(operations.shift(), ['added', {\n    a: 1\n  }, -1, null]);\n  c.update({\n    a: 1\n  }, {\n    $set: {\n      a: 2\n    }\n  });\n  test.equal(operations.shift(), ['changed', {\n    a: 2\n  }, -1, {\n    a: 1\n  }]);\n  c.insert({\n    a: 10\n  });\n  test.equal(operations.shift(), ['added', {\n    a: 10\n  }, -1, null]);\n  c.update({}, {\n    $inc: {\n      a: 1\n    }\n  }, {\n    multi: true\n  });\n  test.equal(operations.shift(), ['changed', {\n    a: 3\n  }, -1, {\n    a: 2\n  }]);\n  test.equal(operations.shift(), ['changed', {\n    a: 11\n  }, -1, {\n    a: 10\n  }]);\n  c.update({\n    a: 11\n  }, {\n    a: 1\n  });\n  test.equal(operations.shift(), ['changed', {\n    a: 1\n  }, -1, {\n    a: 11\n  }]);\n  test.equal(operations.shift(), ['moved', {\n    a: 1\n  }, -1, -1, 'foo']);\n  c.remove({\n    a: 2\n  });\n  test.equal(operations.shift(), undefined);\n  c.remove({\n    a: 3\n  });\n  test.equal(operations.shift(), ['removed', 'foo', -1, {\n    a: 3\n  }]);\n  handle.stop();\n});\n\n_.each([true, false], function (ordered) {\n  Tinytest.add(\"minimongo - observe ordered: \" + ordered, function (test) {\n    var c = new LocalCollection();\n    var ev = \"\";\n\n    var makecb = function (tag) {\n      var ret = {};\n\n      _.each([\"added\", \"changed\", \"removed\"], function (fn) {\n        var fnName = ordered ? fn + \"At\" : fn;\n\n        ret[fnName] = function (doc) {\n          ev = ev + fn.substr(0, 1) + tag + doc._id + \"_\";\n        };\n      });\n\n      return ret;\n    };\n\n    var expect = function (x) {\n      test.equal(ev, x);\n      ev = \"\";\n    };\n\n    c.insert({\n      _id: 1,\n      name: \"strawberry\",\n      tags: [\"fruit\", \"red\", \"squishy\"]\n    });\n    c.insert({\n      _id: 2,\n      name: \"apple\",\n      tags: [\"fruit\", \"red\", \"hard\"]\n    });\n    c.insert({\n      _id: 3,\n      name: \"rose\",\n      tags: [\"flower\", \"red\", \"squishy\"]\n    }); // This should work equally well for ordered and unordered observations\n    // (because the callbacks don't look at indices and there's no 'moved'\n    // callback).\n\n    var handle = c.find({\n      tags: \"flower\"\n    }).observe(makecb('a'));\n    expect(\"aa3_\");\n    c.update({\n      name: \"rose\"\n    }, {\n      $set: {\n        tags: [\"bloom\", \"red\", \"squishy\"]\n      }\n    });\n    expect(\"ra3_\");\n    c.update({\n      name: \"rose\"\n    }, {\n      $set: {\n        tags: [\"flower\", \"red\", \"squishy\"]\n      }\n    });\n    expect(\"aa3_\");\n    c.update({\n      name: \"rose\"\n    }, {\n      $set: {\n        food: false\n      }\n    });\n    expect(\"ca3_\");\n    c.remove({});\n    expect(\"ra3_\");\n    c.insert({\n      _id: 4,\n      name: \"daisy\",\n      tags: [\"flower\"]\n    });\n    expect(\"aa4_\");\n    handle.stop(); // After calling stop, no more callbacks are called.\n\n    c.insert({\n      _id: 5,\n      name: \"iris\",\n      tags: [\"flower\"]\n    });\n    expect(\"\"); // Test that observing a lookup by ID works.\n\n    handle = c.find(4).observe(makecb('b'));\n    expect('ab4_');\n    c.update(4, {\n      $set: {\n        eek: 5\n      }\n    });\n    expect('cb4_');\n    handle.stop(); // Test observe with reactive: false.\n\n    handle = c.find({\n      tags: \"flower\"\n    }, {\n      reactive: false\n    }).observe(makecb('c'));\n    expect('ac4_ac5_'); // This insert shouldn't trigger a callback because it's not reactive.\n\n    c.insert({\n      _id: 6,\n      name: \"river\",\n      tags: [\"flower\"]\n    });\n    expect('');\n    handle.stop();\n  });\n});\n\nTinytest.add(\"minimongo - saveOriginals\", function (test) {\n  // set up some data\n  var c = new LocalCollection(),\n      count;\n  c.insert({\n    _id: 'foo',\n    x: 'untouched'\n  });\n  c.insert({\n    _id: 'bar',\n    x: 'updateme'\n  });\n  c.insert({\n    _id: 'baz',\n    x: 'updateme'\n  });\n  c.insert({\n    _id: 'quux',\n    y: 'removeme'\n  });\n  c.insert({\n    _id: 'whoa',\n    y: 'removeme'\n  }); // Save originals and make some changes.\n\n  c.saveOriginals();\n  c.insert({\n    _id: \"hooray\",\n    z: 'insertme'\n  });\n  c.remove({\n    y: 'removeme'\n  });\n  count = c.update({\n    x: 'updateme'\n  }, {\n    $set: {\n      z: 5\n    }\n  }, {\n    multi: true\n  });\n  c.update('bar', {\n    $set: {\n      k: 7\n    }\n  }); // update same doc twice\n  // Verify returned count is correct\n\n  test.equal(count, 2); // Verify the originals.\n\n  var originals = c.retrieveOriginals();\n  var affected = ['bar', 'baz', 'quux', 'whoa', 'hooray'];\n  test.equal(originals.size(), _.size(affected));\n\n  _.each(affected, function (id) {\n    test.isTrue(originals.has(id));\n  });\n\n  test.equal(originals.get('bar'), {\n    _id: 'bar',\n    x: 'updateme'\n  });\n  test.equal(originals.get('baz'), {\n    _id: 'baz',\n    x: 'updateme'\n  });\n  test.equal(originals.get('quux'), {\n    _id: 'quux',\n    y: 'removeme'\n  });\n  test.equal(originals.get('whoa'), {\n    _id: 'whoa',\n    y: 'removeme'\n  });\n  test.equal(originals.get('hooray'), undefined); // Verify that changes actually occured.\n\n  test.equal(c.find().count(), 4);\n  test.equal(c.findOne('foo'), {\n    _id: 'foo',\n    x: 'untouched'\n  });\n  test.equal(c.findOne('bar'), {\n    _id: 'bar',\n    x: 'updateme',\n    z: 5,\n    k: 7\n  });\n  test.equal(c.findOne('baz'), {\n    _id: 'baz',\n    x: 'updateme',\n    z: 5\n  });\n  test.equal(c.findOne('hooray'), {\n    _id: 'hooray',\n    z: 'insertme'\n  }); // The next call doesn't get the same originals again.\n\n  c.saveOriginals();\n  originals = c.retrieveOriginals();\n  test.isTrue(originals);\n  test.isTrue(originals.empty()); // Insert and remove a document during the period.\n\n  c.saveOriginals();\n  c.insert({\n    _id: 'temp',\n    q: 8\n  });\n  c.remove('temp');\n  originals = c.retrieveOriginals();\n  test.equal(originals.size(), 1);\n  test.isTrue(originals.has('temp'));\n  test.equal(originals.get('temp'), undefined);\n});\nTinytest.add(\"minimongo - saveOriginals errors\", function (test) {\n  var c = new LocalCollection(); // Can't call retrieve before save.\n\n  test.throws(function () {\n    c.retrieveOriginals();\n  });\n  c.saveOriginals(); // Can't call save twice.\n\n  test.throws(function () {\n    c.saveOriginals();\n  });\n});\nTinytest.add(\"minimongo - objectid transformation\", function (test) {\n  var testId = function (item) {\n    test.equal(item, MongoID.idParse(MongoID.idStringify(item)));\n  };\n\n  var randomOid = new MongoID.ObjectID();\n  testId(randomOid);\n  testId(\"FOO\");\n  testId(\"ffffffffffff\");\n  testId(\"0987654321abcdef09876543\");\n  testId(new MongoID.ObjectID());\n  testId(\"--a string\");\n  test.equal(\"ffffffffffff\", MongoID.idParse(MongoID.idStringify(\"ffffffffffff\")));\n});\nTinytest.add(\"minimongo - objectid\", function (test) {\n  var randomOid = new MongoID.ObjectID();\n  var anotherRandomOid = new MongoID.ObjectID();\n  test.notEqual(randomOid, anotherRandomOid);\n  test.throws(function () {\n    new MongoID.ObjectID(\"qqqqqqqqqqqqqqqqqqqqqqqq\");\n  });\n  test.throws(function () {\n    new MongoID.ObjectID(\"ABCDEF\");\n  });\n  test.equal(randomOid, new MongoID.ObjectID(randomOid.valueOf()));\n});\nTinytest.add(\"minimongo - pause\", function (test) {\n  var operations = [];\n  var cbs = log_callbacks(operations);\n  var c = new LocalCollection();\n  var h = c.find({}).observe(cbs); // remove and add cancel out.\n\n  c.insert({\n    _id: 1,\n    a: 1\n  });\n  test.equal(operations.shift(), ['added', {\n    a: 1\n  }, 0, null]);\n  c.pauseObservers();\n  c.remove({\n    _id: 1\n  });\n  test.length(operations, 0);\n  c.insert({\n    _id: 1,\n    a: 1\n  });\n  test.length(operations, 0);\n  c.resumeObservers();\n  test.length(operations, 0); // two modifications become one\n\n  c.pauseObservers();\n  c.update({\n    _id: 1\n  }, {\n    a: 2\n  });\n  c.update({\n    _id: 1\n  }, {\n    a: 3\n  });\n  c.resumeObservers();\n  test.equal(operations.shift(), ['changed', {\n    a: 3\n  }, 0, {\n    a: 1\n  }]);\n  test.length(operations, 0); // test special case for remove({})\n\n  c.pauseObservers();\n  test.equal(c.remove({}), 1);\n  test.length(operations, 0);\n  c.resumeObservers();\n  test.equal(operations.shift(), ['removed', 1, 0, {\n    a: 3\n  }]);\n  test.length(operations, 0);\n  h.stop();\n});\nTinytest.add(\"minimongo - ids matched by selector\", function (test) {\n  var check = function (selector, ids) {\n    var idsFromSelector = LocalCollection._idsMatchedBySelector(selector); // XXX normalize order, in a way that also works for ObjectIDs?\n\n\n    test.equal(idsFromSelector, ids);\n  };\n\n  check(\"foo\", [\"foo\"]);\n  check({\n    _id: \"foo\"\n  }, [\"foo\"]);\n  var oid1 = new MongoID.ObjectID();\n  check(oid1, [oid1]);\n  check({\n    _id: oid1\n  }, [oid1]);\n  check({\n    _id: \"foo\",\n    x: 42\n  }, [\"foo\"]);\n  check({}, null);\n  check({\n    _id: {\n      $in: [\"foo\", oid1]\n    }\n  }, [\"foo\", oid1]);\n  check({\n    _id: {\n      $ne: \"foo\"\n    }\n  }, null); // not actually valid, but works for now...\n\n  check({\n    $and: [\"foo\"]\n  }, [\"foo\"]);\n  check({\n    $and: [{\n      x: 42\n    }, {\n      _id: oid1\n    }]\n  }, [oid1]);\n  check({\n    $and: [{\n      x: 42\n    }, {\n      _id: {\n        $in: [oid1]\n      }\n    }]\n  }, [oid1]);\n});\nTinytest.add(\"minimongo - reactive stop\", function (test) {\n  var coll = new LocalCollection();\n  coll.insert({\n    _id: 'A'\n  });\n  coll.insert({\n    _id: 'B'\n  });\n  coll.insert({\n    _id: 'C'\n  });\n\n  var addBefore = function (str, newChar, before) {\n    var idx = str.indexOf(before);\n    if (idx === -1) return str + newChar;\n    return str.slice(0, idx) + newChar + str.slice(idx);\n  };\n\n  var x, y;\n  var sortOrder = ReactiveVar(1);\n  var c = Tracker.autorun(function () {\n    var q = coll.find({}, {\n      sort: {\n        _id: sortOrder.get()\n      }\n    });\n    x = \"\";\n    q.observe({\n      addedAt: function (doc, atIndex, before) {\n        x = addBefore(x, doc._id, before);\n      }\n    });\n    y = \"\";\n    q.observeChanges({\n      addedBefore: function (id, fields, before) {\n        y = addBefore(y, id, before);\n      }\n    });\n  });\n  test.equal(x, \"ABC\");\n  test.equal(y, \"ABC\");\n  sortOrder.set(-1);\n  test.equal(x, \"ABC\");\n  test.equal(y, \"ABC\");\n  Tracker.flush();\n  test.equal(x, \"CBA\");\n  test.equal(y, \"CBA\");\n  coll.insert({\n    _id: 'D'\n  });\n  coll.insert({\n    _id: 'E'\n  });\n  test.equal(x, \"EDCBA\");\n  test.equal(y, \"EDCBA\");\n  c.stop(); // stopping kills the observes immediately\n\n  coll.insert({\n    _id: 'F'\n  });\n  test.equal(x, \"EDCBA\");\n  test.equal(y, \"EDCBA\");\n});\nTinytest.add(\"minimongo - immediate invalidate\", function (test) {\n  var coll = new LocalCollection();\n  coll.insert({\n    _id: 'A'\n  }); // This has two separate findOnes.  findOne() uses skip/limit, which means\n  // that its response to an update() call involves a recompute. We used to have\n  // a bug where we would first calculate all the calls that need to be\n  // recomputed, then recompute them one by one, without checking to see if the\n  // callbacks from recomputing one query stopped the second query, which\n  // crashed.\n\n  var c = Tracker.autorun(function () {\n    coll.findOne('A');\n    coll.findOne('A');\n  });\n  coll.update('A', {\n    $set: {\n      x: 42\n    }\n  });\n  c.stop();\n});\nTinytest.add(\"minimongo - count on cursor with limit\", function (test) {\n  var coll = new LocalCollection(),\n      count;\n  coll.insert({\n    _id: 'A'\n  });\n  coll.insert({\n    _id: 'B'\n  });\n  coll.insert({\n    _id: 'C'\n  });\n  coll.insert({\n    _id: 'D'\n  });\n  var c = Tracker.autorun(function (c) {\n    var cursor = coll.find({\n      _id: {\n        $exists: true\n      }\n    }, {\n      sort: {\n        _id: 1\n      },\n      limit: 3\n    });\n    count = cursor.count();\n  });\n  test.equal(count, 3);\n  coll.remove('A'); // still 3 in the collection\n\n  Tracker.flush();\n  test.equal(count, 3);\n  coll.remove('B'); // expect count now 2\n\n  Tracker.flush();\n  test.equal(count, 2);\n  coll.insert({\n    _id: 'A'\n  }); // now 3 again\n\n  Tracker.flush();\n  test.equal(count, 3);\n  coll.insert({\n    _id: 'B'\n  }); // now 4 entries, but count should be 3 still\n\n  Tracker.flush();\n  test.equal(count, 3);\n  c.stop();\n});\nTinytest.add(\"minimongo - reactive count with cached cursor\", function (test) {\n  var coll = new LocalCollection();\n  var cursor = coll.find({});\n  var firstAutorunCount, secondAutorunCount;\n  Tracker.autorun(function () {\n    firstAutorunCount = cursor.count();\n  });\n  Tracker.autorun(function () {\n    secondAutorunCount = coll.find({}).count();\n  });\n  test.equal(firstAutorunCount, 0);\n  test.equal(secondAutorunCount, 0);\n  coll.insert({\n    i: 1\n  });\n  coll.insert({\n    i: 2\n  });\n  coll.insert({\n    i: 3\n  });\n  Tracker.flush();\n  test.equal(firstAutorunCount, 3);\n  test.equal(secondAutorunCount, 3);\n});\nTinytest.add(\"minimongo - $near operator tests\", function (test) {\n  var coll = new LocalCollection();\n  coll.insert({\n    rest: {\n      loc: [2, 3]\n    }\n  });\n  coll.insert({\n    rest: {\n      loc: [-3, 3]\n    }\n  });\n  coll.insert({\n    rest: {\n      loc: [5, 5]\n    }\n  });\n  test.equal(coll.find({\n    'rest.loc': {\n      $near: [0, 0],\n      $maxDistance: 30\n    }\n  }).count(), 3);\n  test.equal(coll.find({\n    'rest.loc': {\n      $near: [0, 0],\n      $maxDistance: 4\n    }\n  }).count(), 1);\n  var points = coll.find({\n    'rest.loc': {\n      $near: [0, 0],\n      $maxDistance: 6\n    }\n  }).fetch();\n\n  _.each(points, function (point, i, points) {\n    test.isTrue(!i || distance([0, 0], point.rest.loc) >= distance([0, 0], points[i - 1].rest.loc));\n  });\n\n  function distance(a, b) {\n    var x = a[0] - b[0];\n    var y = a[1] - b[1];\n    return Math.sqrt(x * x + y * y);\n  } // GeoJSON tests\n\n\n  coll = new LocalCollection();\n  var data = [{\n    \"category\": \"BURGLARY\",\n    \"descript\": \"BURGLARY OF STORE, FORCIBLE ENTRY\",\n    \"address\": \"100 Block of 10TH ST\",\n    \"location\": {\n      \"type\": \"Point\",\n      \"coordinates\": [-122.415449723856, 37.7749518087273]\n    }\n  }, {\n    \"category\": \"WEAPON LAWS\",\n    \"descript\": \"POSS OF PROHIBITED WEAPON\",\n    \"address\": \"900 Block of MINNA ST\",\n    \"location\": {\n      \"type\": \"Point\",\n      \"coordinates\": [-122.415386041221, 37.7747879744156]\n    }\n  }, {\n    \"category\": \"LARCENY/THEFT\",\n    \"descript\": \"GRAND THEFT OF PROPERTY\",\n    \"address\": \"900 Block of MINNA ST\",\n    \"location\": {\n      \"type\": \"Point\",\n      \"coordinates\": [-122.41538270191, 37.774683628213]\n    }\n  }, {\n    \"category\": \"LARCENY/THEFT\",\n    \"descript\": \"PETTY THEFT FROM LOCKED AUTO\",\n    \"address\": \"900 Block of MINNA ST\",\n    \"location\": {\n      \"type\": \"Point\",\n      \"coordinates\": [-122.415396041221, 37.7747879744156]\n    }\n  }, {\n    \"category\": \"OTHER OFFENSES\",\n    \"descript\": \"POSSESSION OF BURGLARY TOOLS\",\n    \"address\": \"900 Block of MINNA ST\",\n    \"location\": {\n      \"type\": \"Point\",\n      \"coordinates\": [-122.415386041221, 37.7747879734156]\n    }\n  }];\n\n  _.each(data, function (x, i) {\n    coll.insert(_.extend(x, {\n      x: i\n    }));\n  });\n\n  var close15 = coll.find({\n    location: {\n      $near: {\n        $geometry: {\n          type: \"Point\",\n          coordinates: [-122.4154282, 37.7746115]\n        },\n        $maxDistance: 15\n      }\n    }\n  }).fetch();\n  test.length(close15, 1);\n  test.equal(close15[0].descript, \"GRAND THEFT OF PROPERTY\");\n  var close20 = coll.find({\n    location: {\n      $near: {\n        $geometry: {\n          type: \"Point\",\n          coordinates: [-122.4154282, 37.7746115]\n        },\n        $maxDistance: 20\n      }\n    }\n  }).fetch();\n  test.length(close20, 4);\n  test.equal(close20[0].descript, \"GRAND THEFT OF PROPERTY\");\n  test.equal(close20[1].descript, \"PETTY THEFT FROM LOCKED AUTO\");\n  test.equal(close20[2].descript, \"POSSESSION OF BURGLARY TOOLS\");\n  test.equal(close20[3].descript, \"POSS OF PROHIBITED WEAPON\"); // Any combinations of $near with $or/$and/$nor/$not should throw an error\n\n  test.throws(function () {\n    coll.find({\n      location: {\n        $not: {\n          $near: {\n            $geometry: {\n              type: \"Point\",\n              coordinates: [-122.4154282, 37.7746115]\n            },\n            $maxDistance: 20\n          }\n        }\n      }\n    });\n  });\n  test.throws(function () {\n    coll.find({\n      $and: [{\n        location: {\n          $near: {\n            $geometry: {\n              type: \"Point\",\n              coordinates: [-122.4154282, 37.7746115]\n            },\n            $maxDistance: 20\n          }\n        }\n      }, {\n        x: 0\n      }]\n    });\n  });\n  test.throws(function () {\n    coll.find({\n      $or: [{\n        location: {\n          $near: {\n            $geometry: {\n              type: \"Point\",\n              coordinates: [-122.4154282, 37.7746115]\n            },\n            $maxDistance: 20\n          }\n        }\n      }, {\n        x: 0\n      }]\n    });\n  });\n  test.throws(function () {\n    coll.find({\n      $nor: [{\n        location: {\n          $near: {\n            $geometry: {\n              type: \"Point\",\n              coordinates: [-122.4154282, 37.7746115]\n            },\n            $maxDistance: 1\n          }\n        }\n      }, {\n        x: 0\n      }]\n    });\n  });\n  test.throws(function () {\n    coll.find({\n      $and: [{\n        $and: [{\n          location: {\n            $near: {\n              $geometry: {\n                type: \"Point\",\n                coordinates: [-122.4154282, 37.7746115]\n              },\n              $maxDistance: 1\n            }\n          }\n        }]\n      }]\n    });\n  }); // array tests\n\n  coll = new LocalCollection();\n  coll.insert({\n    _id: \"x\",\n    k: 9,\n    a: [{\n      b: [[100, 100], [1, 1]]\n    }, {\n      b: [150, 150]\n    }]\n  });\n  coll.insert({\n    _id: \"y\",\n    k: 9,\n    a: {\n      b: [5, 5]\n    }\n  });\n\n  var testNear = function (near, md, expected) {\n    test.equal(_.pluck(coll.find({\n      'a.b': {\n        $near: near,\n        $maxDistance: md\n      }\n    }).fetch(), '_id'), expected);\n  };\n\n  testNear([149, 149], 4, ['x']);\n  testNear([149, 149], 1000, ['x', 'y']); // It's important that we figure out that 'x' is closer than 'y' to [2,2] even\n  // though the first within-1000 point in 'x' (ie, [100,100]) is farther than\n  // 'y'.\n\n  testNear([2, 2], 1000, ['x', 'y']); // issue #3599\n  // Ensure that distance is not used as a tie-breaker for sort.\n\n  test.equal(_.pluck(coll.find({\n    'a.b': {\n      $near: [1, 1]\n    }\n  }, {\n    sort: {\n      k: 1\n    }\n  }).fetch(), '_id'), ['x', 'y']);\n  test.equal(_.pluck(coll.find({\n    'a.b': {\n      $near: [5, 5]\n    }\n  }, {\n    sort: {\n      k: 1\n    }\n  }).fetch(), '_id'), ['x', 'y']);\n  var operations = [];\n  var cbs = log_callbacks(operations);\n  var handle = coll.find({\n    'a.b': {\n      $near: [7, 7]\n    }\n  }).observe(cbs);\n  test.length(operations, 2);\n  test.equal(operations.shift(), ['added', {\n    k: 9,\n    a: {\n      b: [5, 5]\n    }\n  }, 0, null]);\n  test.equal(operations.shift(), ['added', {\n    k: 9,\n    a: [{\n      b: [[100, 100], [1, 1]]\n    }, {\n      b: [150, 150]\n    }]\n  }, 1, null]); // This needs to be inserted in the MIDDLE of the two existing ones.\n\n  coll.insert({\n    a: {\n      b: [3, 3]\n    }\n  });\n  test.length(operations, 1);\n  test.equal(operations.shift(), ['added', {\n    a: {\n      b: [3, 3]\n    }\n  }, 1, 'x']);\n  handle.stop();\n}); // issue #2077\n\nTinytest.add(\"minimongo - $near and $geometry for legacy coordinates\", function (test) {\n  var coll = new LocalCollection();\n  coll.insert({\n    loc: {\n      x: 1,\n      y: 1\n    }\n  });\n  coll.insert({\n    loc: [-1, -1]\n  });\n  coll.insert({\n    loc: [40, -10]\n  });\n  coll.insert({\n    loc: {\n      x: -10,\n      y: 40\n    }\n  });\n  test.equal(coll.find({\n    'loc': {\n      $near: [0, 0],\n      $maxDistance: 4\n    }\n  }).count(), 2);\n  test.equal(coll.find({\n    'loc': {\n      $near: {\n        $geometry: {\n          type: \"Point\",\n          coordinates: [0, 0]\n        }\n      }\n    }\n  }).count(), 4);\n  test.equal(coll.find({\n    'loc': {\n      $near: {\n        $geometry: {\n          type: \"Point\",\n          coordinates: [0, 0]\n        },\n        $maxDistance: 200000\n      }\n    }\n  }).count(), 2);\n}); // Regression test for #4377. Previously, \"replace\" updates didn't clone the\n// argument.\n\nTinytest.add(\"minimongo - update should clone\", function (test) {\n  var x = [];\n  var coll = new LocalCollection();\n  var id = coll.insert({});\n  coll.update(id, {\n    x: x\n  });\n  x.push(1);\n  test.equal(coll.findOne(id), {\n    _id: id,\n    x: []\n  });\n}); // See #2275.\n\nTinytest.add(\"minimongo - fetch in observe\", function (test) {\n  var coll = new LocalCollection();\n  var callbackInvoked = false;\n  var observe = coll.find().observeChanges({\n    added: function (id, fields) {\n      callbackInvoked = true;\n      test.equal(fields, {\n        foo: 1\n      });\n      var doc = coll.findOne({\n        foo: 1\n      });\n      test.isTrue(doc);\n      test.equal(doc.foo, 1);\n    }\n  });\n  test.isFalse(callbackInvoked);\n  var computation = Tracker.autorun(function (computation) {\n    if (computation.firstRun) {\n      coll.insert({\n        foo: 1\n      });\n    }\n  });\n  test.isTrue(callbackInvoked);\n  observe.stop();\n  computation.stop();\n}); // See #2254\n\nTinytest.add(\"minimongo - fine-grained reactivity of observe with fields projection\", function (test) {\n  var X = new LocalCollection();\n  var id = \"asdf\";\n  X.insert({\n    _id: id,\n    foo: {\n      bar: 123\n    }\n  });\n  var callbackInvoked = false;\n  var obs = X.find(id, {\n    fields: {\n      'foo.bar': 1\n    }\n  }).observeChanges({\n    changed: function (id, fields) {\n      callbackInvoked = true;\n    }\n  });\n  test.isFalse(callbackInvoked);\n  X.update(id, {\n    $set: {\n      'foo.baz': 456\n    }\n  });\n  test.isFalse(callbackInvoked);\n  obs.stop();\n});\nTinytest.add(\"minimongo - fine-grained reactivity of query with fields projection\", function (test) {\n  var X = new LocalCollection();\n  var id = \"asdf\";\n  X.insert({\n    _id: id,\n    foo: {\n      bar: 123\n    }\n  });\n  var callbackInvoked = false;\n  var computation = Tracker.autorun(function () {\n    callbackInvoked = true;\n    return X.findOne(id, {\n      fields: {\n        'foo.bar': 1\n      }\n    });\n  });\n  test.isTrue(callbackInvoked);\n  callbackInvoked = false;\n  X.update(id, {\n    $set: {\n      'foo.baz': 456\n    }\n  });\n  test.isFalse(callbackInvoked);\n  X.update(id, {\n    $set: {\n      'foo.bar': 124\n    }\n  });\n  Tracker.flush();\n  test.isTrue(callbackInvoked);\n  computation.stop();\n}); // Tests that the logic in `LocalCollection.prototype.update`\n// correctly deals with count() on a cursor with skip or limit (since\n// then the result set is an IdMap, not an array)\n\nTinytest.add(\"minimongo - reactive skip/limit count while updating\", function (test) {\n  var X = new LocalCollection();\n  var count = -1;\n  var c = Tracker.autorun(function () {\n    count = X.find({}, {\n      skip: 1,\n      limit: 1\n    }).count();\n  });\n  test.equal(count, 0);\n  X.insert({});\n  Tracker.flush({\n    _throwFirstError: true\n  });\n  test.equal(count, 0);\n  X.insert({});\n  Tracker.flush({\n    _throwFirstError: true\n  });\n  test.equal(count, 1);\n  X.update({}, {\n    $set: {\n      foo: 1\n    }\n  });\n  Tracker.flush({\n    _throwFirstError: true\n  });\n  test.equal(count, 1); // Make sure a second update also works\n\n  X.update({}, {\n    $set: {\n      foo: 2\n    }\n  });\n  Tracker.flush({\n    _throwFirstError: true\n  });\n  test.equal(count, 1);\n  c.stop();\n}); // Makes sure inserts cannot be performed using field names that have\n// Mongo restricted characters in them ('.', '$', '\\0'):\n// https://docs.mongodb.com/manual/reference/limits/#Restrictions-on-Field-Names\n\nTinytest.add(\"minimongo - cannot insert using invalid field names\", function (test) {\n  var collection = new LocalCollection(); // Quick test to make sure non-dot field inserts are working\n\n  collection.insert({\n    a: 'b'\n  }); // Quick test to make sure field values with dots are allowed\n\n  collection.insert({\n    a: 'b.c'\n  }); // Verify top level dot-field inserts are prohibited\n\n  ['a.b', '.b', 'a.', 'a.b.c'].forEach(function (field) {\n    test.throws(function () {\n      var _collection$insert;\n\n      collection.insert((_collection$insert = {}, _collection$insert[field] = 'c', _collection$insert));\n    }, \"Key \" + field + \" must not contain '.'\");\n  }); // Verify nested dot-field inserts are prohibited\n\n  test.throws(function () {\n    collection.insert({\n      a: {\n        b: {\n          'c.d': 'e'\n        }\n      }\n    });\n  }, \"Key c.d must not contain '.'\"); // Verify field names starting with $ are prohibited\n\n  test.throws(function () {\n    collection.insert({\n      '$a': 'b'\n    });\n  }, \"Key $a must not start with '$'\"); // Verify nested field names starting with $ are prohibited\n\n  test.throws(function () {\n    collection.insert({\n      a: {\n        b: {\n          '$c': 'd'\n        }\n      }\n    });\n  }, \"Key $c must not start with '$'\"); // Verify top level fields with null characters are prohibited\n\n  ['\\0a', 'a\\0', 'a\\0b', \"\\0a\", \"a\\0\", \"a\\0b\"].forEach(function (field) {\n    test.throws(function () {\n      var _collection$insert2;\n\n      collection.insert((_collection$insert2 = {}, _collection$insert2[field] = 'c', _collection$insert2));\n    }, \"Key \" + field + \" must not contain null bytes\");\n  }); // Verify nested field names with null characters are prohibited\n\n  test.throws(function () {\n    collection.insert({\n      a: {\n        b: {\n          '\\0c': 'd'\n        }\n      }\n    });\n  }, 'Key \\0c must not contain null bytes');\n}); // Makes sure $set's cannot be performed using null bytes\n// https://docs.mongodb.com/manual/reference/limits/#Restrictions-on-Field-Names\n\nTinytest.add(\"minimongo - cannot $set with null bytes\", function (test) {\n  var collection = new LocalCollection(); // Quick test to make sure non-null byte $set's are working\n\n  var id = collection.insert({\n    a: 'b',\n    'c': 'd'\n  });\n  collection.update({\n    _id: id\n  }, {\n    $set: {\n      e: 'f'\n    }\n  }); // Verify $set's with null bytes throw an exception\n\n  test.throws(function () {\n    collection.update({\n      _id: id\n    }, {\n      $set: {\n        '\\0a': 'b'\n      }\n    });\n  }, 'Key \\0a must not contain null bytes');\n}); // Makes sure $rename's cannot be performed using null bytes\n// https://docs.mongodb.com/manual/reference/limits/#Restrictions-on-Field-Names\n\nTinytest.add(\"minimongo - cannot $rename with null bytes\", function (test) {\n  var collection = new LocalCollection(); // Quick test to make sure non-null byte $rename's are working\n\n  var id = collection.insert({\n    a: 'b',\n    c: 'd'\n  });\n  collection.update({\n    _id: id\n  }, {\n    $rename: {\n      a: 'a1',\n      c: 'c1'\n    }\n  }); // Verify $rename's with null bytes throw an exception\n\n  collection.remove({});\n  id = collection.insert({\n    a: 'b',\n    c: 'd'\n  });\n  test.throws(function () {\n    collection.update({\n      _id: id\n    }, {\n      $rename: {\n        a: '\\0a',\n        c: 'c\\0'\n      }\n    });\n  }, \"The 'to' field for $rename cannot contain an embedded null byte\");\n});","map":{"version":3,"sources":["packages/minimongo/minimongo_tests.js"],"names":["LocalCollection","_useOID","assert_ordering","test","f","values","i","length","x","fail","type","message","value","JSON","stringify","should_be_zero_but_got","less","more","first","second","should_be_negative_but_got","should_be_positive_but_got","log_callbacks","operations","addedAt","obj","idx","before","_id","push","EJSON","clone","changedAt","old_obj","at","movedTo","old_at","new_at","removedAt","id","Tinytest","add","c","fluffyKitten_id","count","insert","name","equal","find","fetch","findOne","remove","update","$set","undefined","tags","skip","limit","sort","foo","bar","bam","MinimongoError","e","field","res","q","context","forEach","cursor","isTrue","map","invalidTransform","doc","throws","transform","transformWithoutId","_","omit","a","b","d","y","g","Date","_f","_equal","z","setDate","getDate","notEqual","lookupA","MinimongoTest","makeLookupFunction","lookupAX","arrayIndices","lookupA0X","w","matches","shouldMatch","selector","doesMatch","Minimongo","Matcher","documentMatches","result","document","match","bind","nomatch","date1","date2","getTime","k","$lt","$gt","$lte","$gte","$all","$exists","$mod","each","badMod","$eq","$ne","$in","$nin","$size","$bitsAllClear","Uint8Array","$bitsAllSet","$bitsAnySet","$bitsAnyClear","matchCount","query","allPositions","parse","NaN","Infinity","badValue","$type","newBinary","MongoID","ObjectID","$regex","$options","reusedRegexp","$not","big","$or","$nor","$and","$where","dogs","room","animals","$elemMatch","age","$comment","testProjection","projection","tests","projection_f","_compileProjection","equalNonStrict","desc","isEqual","testCase","testCompileProjectionThrows","expectedError","baz","nested","bazbaz","meh","tr","hope","humanity","people","candies","times","something","Random","anything","cool","nothing","fetchResults","fields","all","has","arr","grades","mean","$slice","setA","fieldA","fieldB","fieldC","setB","anotherA","anotherB","testForProjection","expected","fetched","projectionFn","filteredDoc","cbs","handle","observe","collection","shift","$inc","multi","stop","idA2","observeChanges","added","extend","_suppress_initial","blacklisted","_no_indices","zoo","foobar","shortBinary","longBinary1","longBinary2","_cmp","verify","sorts","docs","isArray","sorter","Sorter","getComparator","$natural","s","j","pluck","up","down","selected","testCursorMatchesField","fieldValues","range","max","keyListToObject","keyList","key","testKeys","sortSpec","expectedKeyList","expectedKeys","actualKeyList","_generateKeysFromDoc","actualKeys","testParallelError","testOrder","doc1","doc2","matcher","comparator","comparison","keyCompatible","compatible","actual","_keyCompatibleWithSelector","sortFunction","forwardCmp","backwardCmp","checkSearch","cmp","array","_binarySearch","checkSearchForward","checkSearchBackward","modifyWithQuery","mod","coll","input","modify","exceptionWithQuery","exception","upsert","insertedId","upsertException","$a","$unset","$near","$maxDistance","$currentDate","msg","instanceOf","$min","$max","$push","$each","$sort","$position","$pushAll","$addToSet","$b","$pop","$pull","$pullAll","$rename","r","$setOnInsert","ordered","ev","makecb","tag","ret","fn","fnName","substr","expect","food","eek","reactive","saveOriginals","originals","retrieveOriginals","affected","size","get","empty","testId","item","idParse","idStringify","randomOid","anotherRandomOid","valueOf","h","pauseObservers","resumeObservers","check","ids","idsFromSelector","_idsMatchedBySelector","oid1","addBefore","str","newChar","indexOf","slice","sortOrder","ReactiveVar","Tracker","autorun","atIndex","addedBefore","set","flush","firstAutorunCount","secondAutorunCount","rest","loc","points","point","distance","Math","sqrt","data","close15","location","$geometry","coordinates","descript","close20","testNear","near","md","callbackInvoked","isFalse","computation","firstRun","X","obs","changed","_throwFirstError"],"mappings":"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","file":"packages/minimongo/minimongo_tests.js.map","sourcesContent":["\n// Hack to make LocalCollection generate ObjectIDs by default.\nLocalCollection._useOID = true;\n\n// assert that f is a strcmp-style comparison function that puts\n// 'values' in the provided order\n\nvar assert_ordering = function (test, f, values) {\n  for (var i = 0; i < values.length; i++) {\n    var x = f(values[i], values[i]);\n    if (x !== 0) {\n      // XXX super janky\n      test.fail({type: \"minimongo-ordering\",\n                 message: \"value doesn't order as equal to itself\",\n                 value: JSON.stringify(values[i]),\n                 should_be_zero_but_got: JSON.stringify(x)});\n    }\n    if (i + 1 < values.length) {\n      var less = values[i];\n      var more = values[i + 1];\n      var x = f(less, more);\n      if (!(x < 0)) {\n        // XXX super janky\n        test.fail({type: \"minimongo-ordering\",\n                   message: \"ordering test failed\",\n                   first: JSON.stringify(less),\n                   second: JSON.stringify(more),\n                   should_be_negative_but_got: JSON.stringify(x)});\n      }\n      x = f(more, less);\n      if (!(x > 0)) {\n        // XXX super janky\n        test.fail({type: \"minimongo-ordering\",\n                   message: \"ordering test failed\",\n                   first: JSON.stringify(less),\n                   second: JSON.stringify(more),\n                   should_be_positive_but_got: JSON.stringify(x)});\n      }\n    }\n  }\n};\n\nvar log_callbacks = function (operations) {\n  return {\n    addedAt: function (obj, idx, before) {\n      delete obj._id;\n      operations.push(EJSON.clone(['added', obj, idx, before]));\n    },\n    changedAt: function (obj, old_obj, at) {\n      delete obj._id;\n      delete old_obj._id;\n      operations.push(EJSON.clone(['changed', obj, at, old_obj]));\n    },\n    movedTo: function (obj, old_at, new_at, before) {\n      delete obj._id;\n      operations.push(EJSON.clone(['moved', obj, old_at, new_at, before]));\n    },\n    removedAt: function (old_obj, at) {\n      var id = old_obj._id;\n      delete old_obj._id;\n      operations.push(EJSON.clone(['removed', id, at, old_obj]));\n    }\n  };\n};\n\n// XXX test shared structure in all MM entrypoints\nTinytest.add(\"minimongo - basics\", function (test) {\n  var c = new LocalCollection(),\n      fluffyKitten_id,\n      count;\n\n  fluffyKitten_id = c.insert({type: \"kitten\", name: \"fluffy\"});\n  c.insert({type: \"kitten\", name: \"snookums\"});\n  c.insert({type: \"cryptographer\", name: \"alice\"});\n  c.insert({type: \"cryptographer\", name: \"bob\"});\n  c.insert({type: \"cryptographer\", name: \"cara\"});\n  test.equal(c.find().count(), 5);\n  test.equal(c.find({type: \"kitten\"}).count(), 2);\n  test.equal(c.find({type: \"cryptographer\"}).count(), 3);\n  test.length(c.find({type: \"kitten\"}).fetch(), 2);\n  test.length(c.find({type: \"cryptographer\"}).fetch(), 3);\n  test.equal(fluffyKitten_id, c.findOne({type: \"kitten\", name: \"fluffy\"})._id);\n\n  c.remove({name: \"cara\"});\n  test.equal(c.find().count(), 4);\n  test.equal(c.find({type: \"kitten\"}).count(), 2);\n  test.equal(c.find({type: \"cryptographer\"}).count(), 2);\n  test.length(c.find({type: \"kitten\"}).fetch(), 2);\n  test.length(c.find({type: \"cryptographer\"}).fetch(), 2);\n\n  count = c.update({name: \"snookums\"}, {$set: {type: \"cryptographer\"}});\n  test.equal(count, 1);\n  test.equal(c.find().count(), 4);\n  test.equal(c.find({type: \"kitten\"}).count(), 1);\n  test.equal(c.find({type: \"cryptographer\"}).count(), 3);\n  test.length(c.find({type: \"kitten\"}).fetch(), 1);\n  test.length(c.find({type: \"cryptographer\"}).fetch(), 3);\n\n  c.remove(null);\n  c.remove(false);\n  c.remove(undefined);\n  test.equal(c.find().count(), 4);\n\n  c.remove({_id: null});\n  c.remove({_id: false});\n  c.remove({_id: undefined});\n  count = c.remove();\n  test.equal(count, 0);\n  test.equal(c.find().count(), 4);\n\n  count = c.remove({});\n  test.equal(count, 4);\n  test.equal(c.find().count(), 0);\n\n  c.insert({_id: 1, name: \"strawberry\", tags: [\"fruit\", \"red\", \"squishy\"]});\n  c.insert({_id: 2, name: \"apple\", tags: [\"fruit\", \"red\", \"hard\"]});\n  c.insert({_id: 3, name: \"rose\", tags: [\"flower\", \"red\", \"squishy\"]});\n\n  test.equal(c.find({tags: \"flower\"}).count(), 1);\n  test.equal(c.find({tags: \"fruit\"}).count(), 2);\n  test.equal(c.find({tags: \"red\"}).count(), 3);\n  test.length(c.find({tags: \"flower\"}).fetch(), 1);\n  test.length(c.find({tags: \"fruit\"}).fetch(), 2);\n  test.length(c.find({tags: \"red\"}).fetch(), 3);\n\n  test.equal(c.findOne(1).name, \"strawberry\");\n  test.equal(c.findOne(2).name, \"apple\");\n  test.equal(c.findOne(3).name, \"rose\");\n  test.equal(c.findOne(4), undefined);\n  test.equal(c.findOne(\"abc\"), undefined);\n  test.equal(c.findOne(undefined), undefined);\n\n  test.equal(c.find(1).count(), 1);\n  test.equal(c.find(4).count(), 0);\n  test.equal(c.find(\"abc\").count(), 0);\n  test.equal(c.find(undefined).count(), 0);\n  test.equal(c.find().count(), 3);\n  test.equal(c.find(1, {skip: 1}).count(), 0);\n  test.equal(c.find({_id: 1}, {skip: 1}).count(), 0);\n  test.equal(c.find({}, {skip: 1}).count(), 2);\n  test.equal(c.find({}, {skip: 2}).count(), 1);\n  test.equal(c.find({}, {limit: 2}).count(), 2);\n  test.equal(c.find({}, {limit: 1}).count(), 1);\n  test.equal(c.find({}, {skip: 1, limit: 1}).count(), 1);\n  test.equal(c.find({tags: \"fruit\"}, {skip: 1}).count(), 1);\n  test.equal(c.find({tags: \"fruit\"}, {limit: 1}).count(), 1);\n  test.equal(c.find({tags: \"fruit\"}, {skip: 1, limit: 1}).count(), 1);\n  test.equal(c.find(1, {sort: ['_id','desc'], skip: 1}).count(), 0);\n  test.equal(c.find({_id: 1}, {sort: ['_id','desc'], skip: 1}).count(), 0);\n  test.equal(c.find({}, {sort: ['_id','desc'], skip: 1}).count(), 2);\n  test.equal(c.find({}, {sort: ['_id','desc'], skip: 2}).count(), 1);\n  test.equal(c.find({}, {sort: ['_id','desc'], limit: 2}).count(), 2);\n  test.equal(c.find({}, {sort: ['_id','desc'], limit: 1}).count(), 1);\n  test.equal(c.find({}, {sort: ['_id','desc'], skip: 1, limit: 1}).count(), 1);\n  test.equal(c.find({tags: \"fruit\"}, {sort: ['_id','desc'], skip: 1}).count(), 1);\n  test.equal(c.find({tags: \"fruit\"}, {sort: ['_id','desc'], limit: 1}).count(), 1);\n  test.equal(c.find({tags: \"fruit\"}, {sort: ['_id','desc'], skip: 1, limit: 1}).count(), 1);\n\n  // Regression test for #455.\n  c.insert({foo: {bar: 'baz'}});\n  test.equal(c.find({foo: {bam: 'baz'}}).count(), 0);\n  test.equal(c.find({foo: {bar: 'baz'}}).count(), 1);\n\n});\n\nTinytest.add(\"minimongo - error - no options\", function (test) {\n  try {\n    throw MinimongoError(\"Not fun to have errors\");\n  } catch (e) {\n    test.equal(e.message, \"Not fun to have errors\");\n  }\n});\n\nTinytest.add(\"minimongo - error - with field\", function (test) {\n  try {\n    throw MinimongoError(\"Cats are no fun\", { field: \"mice\" });\n  } catch (e) {\n    test.equal(e.message, \"Cats are no fun for field 'mice'\");\n  }\n});\n\nTinytest.add(\"minimongo - cursors\", function (test) {\n  var c = new LocalCollection();\n  var res;\n\n  for (var i = 0; i < 20; i++)\n    c.insert({i: i});\n\n  var q = c.find();\n  test.equal(q.count(), 20);\n\n  // fetch\n  res = q.fetch();\n  test.length(res, 20);\n  for (var i = 0; i < 20; i++) {\n    test.equal(res[i].i, i);\n  }\n  // call it again, it still works\n  test.length(q.fetch(), 20);\n\n  // forEach\n  var count = 0;\n  var context = {};\n  q.forEach(function (obj, i, cursor) {\n    test.equal(obj.i, count++);\n    test.equal(obj.i, i);\n    test.isTrue(context === this);\n    test.isTrue(cursor === q);\n  }, context);\n  test.equal(count, 20);\n  // call it again, it still works\n  test.length(q.fetch(), 20);\n\n  // map\n  res = q.map(function (obj, i, cursor) {\n    test.equal(obj.i, i);\n    test.isTrue(context === this);\n    test.isTrue(cursor === q);\n    return obj.i * 2;\n  }, context);\n  test.length(res, 20);\n  for (var i = 0; i < 20; i++)\n    test.equal(res[i], i * 2);\n  // call it again, it still works\n  test.length(q.fetch(), 20);\n\n  // findOne (and no rewind first)\n  test.equal(c.findOne({i: 0}).i, 0);\n  test.equal(c.findOne({i: 1}).i, 1);\n  var id = c.findOne({i: 2})._id;\n  test.equal(c.findOne(id).i, 2);\n});\n\nTinytest.add(\"minimongo - transform\", function (test) {\n  var c = new LocalCollection;\n  c.insert({});\n  // transform functions must return objects\n  var invalidTransform = function (doc) { return doc._id; };\n  test.throws(function () {\n    c.findOne({}, {transform: invalidTransform});\n  });\n\n  // transformed documents get _id field transplanted if not present\n  var transformWithoutId = function (doc) { return _.omit(doc, '_id'); };\n  test.equal(c.findOne({}, {transform: transformWithoutId})._id,\n             c.findOne()._id);\n});\n\nTinytest.add(\"minimongo - misc\", function (test) {\n  // deepcopy\n  var a = {a: [1, 2, 3], b: \"x\", c: true, d: {x: 12, y: [12]},\n           f: null, g: new Date()};\n  var b = EJSON.clone(a);\n  test.equal(a, b);\n  test.isTrue(LocalCollection._f._equal(a, b));\n  a.a.push(4);\n  test.length(b.a, 3);\n  a.c = false;\n  test.isTrue(b.c);\n  b.d.z = 15;\n  a.d.z = 14;\n  test.equal(b.d.z, 15);\n  a.d.y.push(88);\n  test.length(b.d.y, 1);\n  test.equal(a.g, b.g);\n  b.g.setDate(b.g.getDate() + 1);\n  test.notEqual(a.g, b.g);\n\n  a = {x: function () {}};\n  b = EJSON.clone(a);\n  a.x.a = 14;\n  test.equal(b.x.a, 14); // just to document current behavior\n});\n\nTinytest.add(\"minimongo - lookup\", function (test) {\n  var lookupA = MinimongoTest.makeLookupFunction('a');\n  test.equal(lookupA({}), [{value: undefined}]);\n  test.equal(lookupA({a: 1}), [{value: 1}]);\n  test.equal(lookupA({a: [1]}), [{value: [1]}]);\n\n  var lookupAX = MinimongoTest.makeLookupFunction('a.x');\n  test.equal(lookupAX({a: {x: 1}}), [{value: 1}]);\n  test.equal(lookupAX({a: {x: [1]}}), [{value: [1]}]);\n  test.equal(lookupAX({a: 5}), [{value: undefined}]);\n  test.equal(lookupAX({a: [{x: 1}, {x: [2]}, {y: 3}]}),\n             [{value: 1, arrayIndices: [0]},\n              {value: [2], arrayIndices: [1]},\n              {value: undefined, arrayIndices: [2]}]);\n\n  var lookupA0X = MinimongoTest.makeLookupFunction('a.0.x');\n  test.equal(lookupA0X({a: [{x: 1}]}), [\n    // From interpreting '0' as \"0th array element\".\n    {value: 1, arrayIndices: [0, 'x']},\n    // From interpreting '0' as \"after branching in the array, look in the\n    // object {x:1} for a field named 0\".\n    {value: undefined, arrayIndices: [0]}]);\n  test.equal(lookupA0X({a: [{x: [1]}]}), [\n    {value: [1], arrayIndices: [0, 'x']},\n    {value: undefined, arrayIndices: [0]}]);\n  test.equal(lookupA0X({a: 5}), [{value: undefined}]);\n  test.equal(lookupA0X({a: [{x: 1}, {x: [2]}, {y: 3}]}), [\n    // From interpreting '0' as \"0th array element\".\n    {value: 1, arrayIndices: [0, 'x']},\n    // From interpreting '0' as \"after branching in the array, look in the\n    // object {x:1} for a field named 0\".\n    {value: undefined, arrayIndices: [0]},\n    {value: undefined, arrayIndices: [1]},\n    {value: undefined, arrayIndices: [2]}\n  ]);\n\n  test.equal(\n    MinimongoTest.makeLookupFunction('w.x.0.z')({\n      w: [{x: [{z: 5}]}]}), [\n        // From interpreting '0' as \"0th array element\".\n        {value: 5, arrayIndices: [0, 0, 'x']},\n        // From interpreting '0' as \"after branching in the array, look in the\n        // object {z:5} for a field named \"0\".\n        {value: undefined, arrayIndices: [0, 0]}\n      ]);\n});\n\nTinytest.add(\"minimongo - selector_compiler\", function (test) {\n  var matches = function (shouldMatch, selector, doc) {\n    var doesMatch = new Minimongo.Matcher(selector).documentMatches(doc).result;\n    if (doesMatch != shouldMatch) {\n      // XXX super janky\n      test.fail({message: \"minimongo match failure: document \" +\n                 (shouldMatch ? \"should match, but doesn't\" :\n                  \"shouldn't match, but does\"),\n                 selector: JSON.stringify(selector),\n                 document: JSON.stringify(doc)\n                });\n    }\n  };\n\n  var match = _.bind(matches, null, true);\n  var nomatch = _.bind(matches, null, false);\n\n  // XXX blog post about what I learned while writing these tests (weird\n  // mongo edge cases)\n\n  // empty selectors\n  match({}, {});\n  match({}, {a: 12});\n\n  // scalars\n  match(1, {_id: 1, a: 'foo'});\n  nomatch(1, {_id: 2, a: 'foo'});\n  match('a', {_id: 'a', a: 'foo'});\n  nomatch('a', {_id: 'b', a: 'foo'});\n\n  // safety\n  nomatch(undefined, {});\n  nomatch(undefined, {_id: 'foo'});\n  nomatch(false, {_id: 'foo'});\n  nomatch(null, {_id: 'foo'});\n  nomatch({_id: undefined}, {_id: 'foo'});\n  nomatch({_id: false}, {_id: 'foo'});\n  nomatch({_id: null}, {_id: 'foo'});\n\n  // matching one or more keys\n  nomatch({a: 12}, {});\n  match({a: 12}, {a: 12});\n  match({a: 12}, {a: 12, b: 13});\n  match({a: 12, b: 13}, {a: 12, b: 13});\n  match({a: 12, b: 13}, {a: 12, b: 13, c: 14});\n  nomatch({a: 12, b: 13, c: 14}, {a: 12, b: 13});\n  nomatch({a: 12, b: 13}, {b: 13, c: 14});\n\n  match({a: 12}, {a: [12]});\n  match({a: 12}, {a: [11, 12, 13]});\n  nomatch({a: 12}, {a: [11, 13]});\n  match({a: 12, b: 13}, {a: [11, 12, 13], b: [13, 14, 15]});\n  nomatch({a: 12, b: 13}, {a: [11, 12, 13], b: [14, 15]});\n\n  // dates\n  var date1 = new Date;\n  var date2 = new Date(date1.getTime() + 1000);\n  match({a: date1}, {a: date1});\n  nomatch({a: date1}, {a: date2});\n\n\n  // arrays\n  match({a: [1,2]}, {a: [1, 2]});\n  match({a: [1,2]}, {a: [[1, 2]]});\n  match({a: [1,2]}, {a: [[3, 4], [1, 2]]});\n  nomatch({a: [1,2]}, {a: [3, 4]});\n  nomatch({a: [1,2]}, {a: [[[1, 2]]]});\n\n  // literal documents\n  match({a: {b: 12}}, {a: {b: 12}});\n  nomatch({a: {b: 12, c: 13}}, {a: {b: 12}});\n  nomatch({a: {b: 12}}, {a: {b: 12, c: 13}});\n  match({a: {b: 12, c: 13}}, {a: {b: 12, c: 13}});\n  nomatch({a: {b: 12, c: 13}}, {a: {c: 13, b: 12}}); // tested on mongodb\n  nomatch({a: {}}, {a: {b: 12}});\n  nomatch({a: {b:12}}, {a: {}});\n  match(\n    {a: {b: 12, c: [13, true, false, 2.2, \"a\", null, {d: 14}]}},\n    {a: {b: 12, c: [13, true, false, 2.2, \"a\", null, {d: 14}]}});\n  match({a: {b: 12}}, {a: {b: 12}, k: 99});\n\n  match({a: {b: 12}}, {a: [{b: 12}]});\n  nomatch({a: {b: 12}}, {a: [[{b: 12}]]});\n  match({a: {b: 12}}, {a: [{b: 11}, {b: 12}, {b: 13}]});\n  nomatch({a: {b: 12}}, {a: [{b: 11}, {b: 12, c: 20}, {b: 13}]});\n  nomatch({a: {b: 12, c: 20}}, {a: [{b: 11}, {b: 12}, {c: 20}]});\n  match({a: {b: 12, c: 20}}, {a: [{b: 11}, {b: 12, c: 20}, {b: 13}]});\n\n  // null\n  match({a: null}, {a: null});\n  match({a: null}, {b: 12});\n  nomatch({a: null}, {a: 12});\n  match({a: null}, {a: [1, 2, null, 3]}); // tested on mongodb\n  nomatch({a: null}, {a: [1, 2, {}, 3]}); // tested on mongodb\n\n  // order comparisons: $lt, $gt, $lte, $gte\n  match({a: {$lt: 10}}, {a: 9});\n  nomatch({a: {$lt: 10}}, {a: 10});\n  nomatch({a: {$lt: 10}}, {a: 11});\n\n  match({a: {$gt: 10}}, {a: 11});\n  nomatch({a: {$gt: 10}}, {a: 10});\n  nomatch({a: {$gt: 10}}, {a: 9});\n\n  match({a: {$lte: 10}}, {a: 9});\n  match({a: {$lte: 10}}, {a: 10});\n  nomatch({a: {$lte: 10}}, {a: 11});\n\n  match({a: {$gte: 10}}, {a: 11});\n  match({a: {$gte: 10}}, {a: 10});\n  nomatch({a: {$gte: 10}}, {a: 9});\n\n  match({a: {$lt: 10}}, {a: [11, 9, 12]});\n  nomatch({a: {$lt: 10}}, {a: [11, 12]});\n\n  // (there's a full suite of ordering test elsewhere)\n  nomatch({a: {$lt: \"null\"}}, {a: null});\n  match({a: {$lt: {x: [2, 3, 4]}}}, {a: {x: [1, 3, 4]}});\n  match({a: {$gt: {x: [2, 3, 4]}}}, {a: {x: [3, 3, 4]}});\n  nomatch({a: {$gt: {x: [2, 3, 4]}}}, {a: {x: [1, 3, 4]}});\n  nomatch({a: {$gt: {x: [2, 3, 4]}}}, {a: {x: [2, 3, 4]}});\n  nomatch({a: {$lt: {x: [2, 3, 4]}}}, {a: {x: [2, 3, 4]}});\n  match({a: {$gte: {x: [2, 3, 4]}}}, {a: {x: [2, 3, 4]}});\n  match({a: {$lte: {x: [2, 3, 4]}}}, {a: {x: [2, 3, 4]}});\n\n  nomatch({a: {$gt: [2, 3]}}, {a: [1, 2]}); // tested against mongodb\n\n  // composition of two qualifiers\n  nomatch({a: {$lt: 11, $gt: 9}}, {a: 8});\n  nomatch({a: {$lt: 11, $gt: 9}}, {a: 9});\n  match({a: {$lt: 11, $gt: 9}}, {a: 10});\n  nomatch({a: {$lt: 11, $gt: 9}}, {a: 11});\n  nomatch({a: {$lt: 11, $gt: 9}}, {a: 12});\n\n  match({a: {$lt: 11, $gt: 9}}, {a: [8, 9, 10, 11, 12]});\n  match({a: {$lt: 11, $gt: 9}}, {a: [8, 9, 11, 12]}); // tested against mongodb\n\n  // $all\n  match({a: {$all: [1, 2]}}, {a: [1, 2]});\n  nomatch({a: {$all: [1, 2, 3]}}, {a: [1, 2]});\n  match({a: {$all: [1, 2]}}, {a: [3, 2, 1]});\n  match({a: {$all: [1, \"x\"]}}, {a: [3, \"x\", 1]});\n  nomatch({a: {$all: ['2']}}, {a: 2});\n  nomatch({a: {$all: [2]}}, {a: '2'});\n  match({a: {$all: [[1, 2], [1, 3]]}}, {a: [[1, 3], [1, 2], [1, 4]]});\n  nomatch({a: {$all: [[1, 2], [1, 3]]}}, {a: [[1, 4], [1, 2], [1, 4]]});\n  match({a: {$all: [2, 2]}}, {a: [2]}); // tested against mongodb\n  nomatch({a: {$all: [2, 3]}}, {a: [2, 2]});\n\n  nomatch({a: {$all: [1, 2]}}, {a: [[1, 2]]}); // tested against mongodb\n  nomatch({a: {$all: [1, 2]}}, {}); // tested against mongodb, field doesn't exist\n  nomatch({a: {$all: [1, 2]}}, {a: {foo: 'bar'}}); // tested against mongodb, field is not an object\n  nomatch({a: {$all: []}}, {a: []});\n  nomatch({a: {$all: []}}, {a: [5]});\n  match({a: {$all: [/i/, /e/i]}}, {a: [\"foo\", \"bEr\", \"biz\"]});\n  nomatch({a: {$all: [/i/, /e/i]}}, {a: [\"foo\", \"bar\", \"biz\"]});\n  match({a: {$all: [{b: 3}]}}, {a: [{b: 3}]});\n  // Members of $all other than regexps are *equality matches*, not document\n  // matches.\n  nomatch({a: {$all: [{b: 3}]}}, {a: [{b: 3, k: 4}]});\n  test.throws(function () {\n    match({a: {$all: [{$gt: 4}]}}, {});\n  });\n\n  // $exists\n  match({a: {$exists: true}}, {a: 12});\n  nomatch({a: {$exists: true}}, {b: 12});\n  nomatch({a: {$exists: false}}, {a: 12});\n  match({a: {$exists: false}}, {b: 12});\n\n  match({a: {$exists: true}}, {a: []});\n  nomatch({a: {$exists: true}}, {b: []});\n  nomatch({a: {$exists: false}}, {a: []});\n  match({a: {$exists: false}}, {b: []});\n\n  match({a: {$exists: true}}, {a: [1]});\n  nomatch({a: {$exists: true}}, {b: [1]});\n  nomatch({a: {$exists: false}}, {a: [1]});\n  match({a: {$exists: false}}, {b: [1]});\n\n  match({a: {$exists: 1}}, {a: 5});\n  match({a: {$exists: 0}}, {b: 5});\n\n  nomatch({'a.x':{$exists: false}}, {a: [{}, {x: 5}]});\n  match({'a.x':{$exists: true}}, {a: [{}, {x: 5}]});\n  match({'a.x':{$exists: true}}, {a: [{}, {x: 5}]});\n  match({'a.x':{$exists: true}}, {a: {x: []}});\n  match({'a.x':{$exists: true}}, {a: {x: null}});\n\n  // $mod\n  match({a: {$mod: [10, 1]}}, {a: 11});\n  nomatch({a: {$mod: [10, 1]}}, {a: 12});\n  match({a: {$mod: [10, 1]}}, {a: [10, 11, 12]});\n  nomatch({a: {$mod: [10, 1]}}, {a: [10, 12]});\n  _.each([\n    5,\n    [10],\n    [10, 1, 2],\n    \"foo\",\n    {bar: 1},\n    []\n  ], function (badMod) {\n    test.throws(function () {\n      match({a: {$mod: badMod}}, {a: 11});\n    });\n  });\n\n  // $eq\n  nomatch({a: {$eq: 1}}, {a: 2});\n  match({a: {$eq: 2}}, {a: 2});\n  nomatch({a: {$eq: [1]}}, {a: [2]});\n\n  match({a: {$eq: [1, 2]}}, {a: [1, 2]});\n  match({a: {$eq: 1}}, {a: [1, 2]});\n  match({a: {$eq: 2}}, {a: [1, 2]});\n  nomatch({a: {$eq: 3}}, {a: [1, 2]});\n  match({'a.b': {$eq: 1}}, {a: [{b: 1}, {b: 2}]});\n  match({'a.b': {$eq: 2}}, {a: [{b: 1}, {b: 2}]});\n  nomatch({'a.b': {$eq: 3}}, {a: [{b: 1}, {b: 2}]});\n\n  match({a: {$eq: {x: 1}}}, {a: {x: 1}});\n  nomatch({a: {$eq: {x: 1}}}, {a: {x: 2}});\n  nomatch({a: {$eq: {x: 1}}}, {a: {x: 1, y: 2}});\n\n  // $ne\n  match({a: {$ne: 1}}, {a: 2});\n  nomatch({a: {$ne: 2}}, {a: 2});\n  match({a: {$ne: [1]}}, {a: [2]});\n\n  nomatch({a: {$ne: [1, 2]}}, {a: [1, 2]}); // all tested against mongodb\n  nomatch({a: {$ne: 1}}, {a: [1, 2]});\n  nomatch({a: {$ne: 2}}, {a: [1, 2]});\n  match({a: {$ne: 3}}, {a: [1, 2]});\n  nomatch({'a.b': {$ne: 1}}, {a: [{b: 1}, {b: 2}]});\n  nomatch({'a.b': {$ne: 2}}, {a: [{b: 1}, {b: 2}]});\n  match({'a.b': {$ne: 3}}, {a: [{b: 1}, {b: 2}]});\n\n  nomatch({a: {$ne: {x: 1}}}, {a: {x: 1}});\n  match({a: {$ne: {x: 1}}}, {a: {x: 2}});\n  match({a: {$ne: {x: 1}}}, {a: {x: 1, y: 2}});\n\n  // This query means: All 'a.b' must be non-5, and some 'a.b' must be >6.\n  match({'a.b': {$ne: 5, $gt: 6}}, {a: [{b: 2}, {b: 10}]});\n  nomatch({'a.b': {$ne: 5, $gt: 6}}, {a: [{b: 2}, {b: 4}]});\n  nomatch({'a.b': {$ne: 5, $gt: 6}}, {a: [{b: 2}, {b: 5}]});\n  nomatch({'a.b': {$ne: 5, $gt: 6}}, {a: [{b: 10}, {b: 5}]});\n  // Should work the same if the branch is at the bottom.\n  match({a: {$ne: 5, $gt: 6}}, {a: [2, 10]});\n  nomatch({a: {$ne: 5, $gt: 6}}, {a: [2, 4]});\n  nomatch({a: {$ne: 5, $gt: 6}}, {a: [2, 5]});\n  nomatch({a: {$ne: 5, $gt: 6}}, {a: [10, 5]});\n\n  // $in\n  match({a: {$in: [1, 2, 3]}}, {a: 2});\n  nomatch({a: {$in: [1, 2, 3]}}, {a: 4});\n  match({a: {$in: [[1], [2], [3]]}}, {a: [2]});\n  nomatch({a: {$in: [[1], [2], [3]]}}, {a: [4]});\n  match({a: {$in: [{b: 1}, {b: 2}, {b: 3}]}}, {a: {b: 2}});\n  nomatch({a: {$in: [{b: 1}, {b: 2}, {b: 3}]}}, {a: {b: 4}});\n\n  match({a: {$in: [1, 2, 3]}}, {a: [2]}); // tested against mongodb\n  match({a: {$in: [{x: 1}, {x: 2}, {x: 3}]}}, {a: [{x: 2}]});\n  match({a: {$in: [1, 2, 3]}}, {a: [4, 2]});\n  nomatch({a: {$in: [1, 2, 3]}}, {a: [4]});\n\n  match({a: {$in: ['x', /foo/i]}}, {a: 'x'});\n  match({a: {$in: ['x', /foo/i]}}, {a: 'fOo'});\n  match({a: {$in: ['x', /foo/i]}}, {a: ['f', 'fOo']});\n  nomatch({a: {$in: ['x', /foo/i]}}, {a: ['f', 'fOx']});\n\n  match({a: {$in: [1, null]}}, {});\n  match({'a.b': {$in: [1, null]}}, {});\n  match({'a.b': {$in: [1, null]}}, {a: {}});\n  match({'a.b': {$in: [1, null]}}, {a: {b: null}});\n  nomatch({'a.b': {$in: [1, null]}}, {a: {b: 5}});\n  nomatch({'a.b': {$in: [1]}}, {a: {b: null}});\n  nomatch({'a.b': {$in: [1]}}, {a: {}});\n  nomatch({'a.b': {$in: [1, null]}}, {a: [{b: 5}]});\n  match({'a.b': {$in: [1, null]}}, {a: [{b: 5}, {}]});\n  nomatch({'a.b': {$in: [1, null]}}, {a: [{b: 5}, []]});\n  nomatch({'a.b': {$in: [1, null]}}, {a: [{b: 5}, 5]});\n\n  // $nin\n  nomatch({a: {$nin: [1, 2, 3]}}, {a: 2});\n  match({a: {$nin: [1, 2, 3]}}, {a: 4});\n  nomatch({a: {$nin: [[1], [2], [3]]}}, {a: [2]});\n  match({a: {$nin: [[1], [2], [3]]}}, {a: [4]});\n  nomatch({a: {$nin: [{b: 1}, {b: 2}, {b: 3}]}}, {a: {b: 2}});\n  match({a: {$nin: [{b: 1}, {b: 2}, {b: 3}]}}, {a: {b: 4}});\n\n  nomatch({a: {$nin: [1, 2, 3]}}, {a: [2]}); // tested against mongodb\n  nomatch({a: {$nin: [{x: 1}, {x: 2}, {x: 3}]}}, {a: [{x: 2}]});\n  nomatch({a: {$nin: [1, 2, 3]}}, {a: [4, 2]});\n  nomatch({'a.b': {$nin: [1, 2, 3]}}, {a: [{b:4}, {b:2}]});\n  match({a: {$nin: [1, 2, 3]}}, {a: [4]});\n  match({'a.b': {$nin: [1, 2, 3]}}, {a: [{b:4}]});\n\n  nomatch({a: {$nin: ['x', /foo/i]}}, {a: 'x'});\n  nomatch({a: {$nin: ['x', /foo/i]}}, {a: 'fOo'});\n  nomatch({a: {$nin: ['x', /foo/i]}}, {a: ['f', 'fOo']});\n  match({a: {$nin: ['x', /foo/i]}}, {a: ['f', 'fOx']});\n\n  nomatch({a: {$nin: [1, null]}}, {});\n  nomatch({'a.b': {$nin: [1, null]}}, {});\n  nomatch({'a.b': {$nin: [1, null]}}, {a: {}});\n  nomatch({'a.b': {$nin: [1, null]}}, {a: {b: null}});\n  match({'a.b': {$nin: [1, null]}}, {a: {b: 5}});\n  match({'a.b': {$nin: [1]}}, {a: {b: null}});\n  match({'a.b': {$nin: [1]}}, {a: {}});\n  match({'a.b': {$nin: [1, null]}}, {a: [{b: 5}]});\n  nomatch({'a.b': {$nin: [1, null]}}, {a: [{b: 5}, {}]});\n  match({'a.b': {$nin: [1, null]}}, {a: [{b: 5}, []]});\n  match({'a.b': {$nin: [1, null]}}, {a: [{b: 5}, 5]});\n\n  // $size\n  match({a: {$size: 0}}, {a: []});\n  match({a: {$size: 1}}, {a: [2]});\n  match({a: {$size: 2}}, {a: [2, 2]});\n  nomatch({a: {$size: 0}}, {a: [2]});\n  nomatch({a: {$size: 1}}, {a: []});\n  nomatch({a: {$size: 1}}, {a: [2, 2]});\n  nomatch({a: {$size: 0}}, {a: \"2\"});\n  nomatch({a: {$size: 1}}, {a: \"2\"});\n  nomatch({a: {$size: 2}}, {a: \"2\"});\n\n  nomatch({a: {$size: 2}}, {a: [[2,2]]}); // tested against mongodb\n\n\n  // $bitsAllClear - number\n  match({a: {$bitsAllClear: [0,1,2,3]}}, {a: 0});\n  match({a: {$bitsAllClear: [0,1,2,3]}}, {a: 0b10000});\n  nomatch({a: {$bitsAllClear: [0,1,2,3]}}, {a: 0b1});\n  nomatch({a: {$bitsAllClear: [0,1,2,3]}}, {a: 0b10});\n  nomatch({a: {$bitsAllClear: [0,1,2,3]}}, {a: 0b100});\n  nomatch({a: {$bitsAllClear: [0,1,2,3]}}, {a: 0b1000});\n\n  // $bitsAllClear - buffer\n  match({a: {$bitsAllClear: new Uint8Array([3])}}, {a: new Uint8Array([4])});\n  match({a: {$bitsAllClear: new Uint8Array([0, 1])}}, {a: new Uint8Array([255])});  // 256 should not be set for 255.\n  match({a: {$bitsAllClear: new Uint8Array([3])}}, {a: 4 });\n\n  match({a: {$bitsAllClear: new Uint8Array([3])}}, {a: 0 });\n\n  // $bitsAllSet - number\n  match({a: {$bitsAllSet: [0,1,2,3]}}, {a: 0b1111});\n  nomatch({a: {$bitsAllSet: [0,1,2,3]}}, {a: 0b111});\n  nomatch({a: {$bitsAllSet: [0,1,2,3]}}, {a: 256});\n  nomatch({a: {$bitsAllSet: [0,1,2,3]}}, {a: 50000});\n  match({a: {$bitsAllSet: [0,1,2]}}, {a: 15});\n  match({a: {$bitsAllSet: [0, 12]}}, {a: 0b1000000000001});\n  nomatch({a: {$bitsAllSet: [0, 12]}}, {a: 0b1000000000000});\n  nomatch({a: {$bitsAllSet: [0, 12]}}, {a: 0b1});\n\n  // $bitsAllSet - buffer\n  match({a: {$bitsAllSet: new Uint8Array([3])}}, {a: new Uint8Array([3])});\n  match({a: {$bitsAllSet: new Uint8Array([7])}}, {a: new Uint8Array([15])});\n  match({a: {$bitsAllSet: new Uint8Array([3])}}, {a: 3 });\n\n  // $bitsAnySet - number\n  match({a: {$bitsAnySet: [0,1,2,3]}}, {a: 0b1});\n  match({a: {$bitsAnySet: [0,1,2,3]}}, {a: 0b10});\n  match({a: {$bitsAnySet: [0,1,2,3]}}, {a: 0b100});\n  match({a: {$bitsAnySet: [0,1,2,3]}}, {a: 0b1000});\n  match({a: {$bitsAnySet: [4]}}, {a: 0b10000});\n  nomatch({a: {$bitsAnySet: [0,1,2,3]}}, {a: 0b10000});\n  nomatch({a: {$bitsAnySet: [0,1,2,3]}}, {a: 0});\n\n  // $bitsAnySet - buffer\n  match({a: {$bitsAnySet: new Uint8Array([3])}}, {a: new Uint8Array([7])});\n  match({a: {$bitsAnySet: new Uint8Array([15])}}, {a: new Uint8Array([7])});\n  match({a: {$bitsAnySet: new Uint8Array([3])}}, {a: 1 });\n\n  // $bitsAnyClear - number\n  match({a: {$bitsAnyClear: [0,1,2,3]}}, {a: 0});\n  match({a: {$bitsAnyClear: [0,1,2,3]}}, {a: 0b1});\n  match({a: {$bitsAnyClear: [0,1,2,3]}}, {a: 0b10});\n  match({a: {$bitsAnyClear: [0,1,2,3]}}, {a: 0b100});\n  match({a: {$bitsAnyClear: [0,1,2,3]}}, {a: 0b1000});\n  match({a: {$bitsAnyClear: [0,1,2,3]}}, {a: 0b10000});\n  nomatch({a: {$bitsAnyClear: [0,1,2,3]}}, {a: 0b1111});\n  match({a: {$bitsAnyClear: [0,1,2,3]}}, {a: 0b111});\n  nomatch({a: {$bitsAnyClear: [0,1,2]}}, {a: 0b111});\n  match({a: {$bitsAnyClear: [0,1,2,3]}}, {a: 0b11});\n  nomatch({a: {$bitsAnyClear: [0,1]}}, {a: 0b11});\n  match({a: {$bitsAnyClear: [0,1,2,3]}}, {a: 0b1});\n  nomatch({a: {$bitsAnyClear: [0]}}, {a: 0b1});\n  nomatch({a: {$bitsAnyClear: [4]}}, {a: 0b10000});\n\n  // $bitsAnyClear - buffer\n  match({a: {$bitsAnyClear: new Uint8Array([8])}}, {a: new Uint8Array([7])});\n  match({a: {$bitsAnyClear: new Uint8Array([1])}}, {a: new Uint8Array([0])});\n  match({a: {$bitsAnyClear: new Uint8Array([1])}}, {a: 4 });\n\n  // taken from: https://github.com/mongodb/mongo/blob/master/jstests/core/bittest.js\n  var c = new LocalCollection;\n  function matchCount(query, count) {\n    const matches = c.find(query).count()\n    if (matches !== count) {\n      test.fail({message: \"minimongo match count failure: matched \" + matches + \" times, but should match \" + count + \" times\",\n        query: JSON.stringify(query),\n        count: JSON.stringify(count)\n      });\n    }\n  }\n\n  // Tests on numbers.\n\n  c.insert({a: 0})\n  c.insert({a: 1})\n  c.insert({a: 54})\n  c.insert({a: 88})\n  c.insert({a: 255})\n\n  // Tests with bitmask.\n  matchCount({a: {$bitsAllSet: 0}}, 5)\n  matchCount({a: {$bitsAllSet: 1}}, 2)\n  matchCount({a: {$bitsAllSet: 16}}, 3)\n  matchCount({a: {$bitsAllSet: 54}}, 2)\n  matchCount({a: {$bitsAllSet: 55}}, 1)\n  matchCount({a: {$bitsAllSet: 88}}, 2)\n  matchCount({a: {$bitsAllSet: 255}}, 1)\n  matchCount({a: {$bitsAllClear: 0}}, 5)\n  matchCount({a: {$bitsAllClear: 1}}, 3)\n  matchCount({a: {$bitsAllClear: 16}}, 2)\n  matchCount({a: {$bitsAllClear: 129}}, 3)\n  matchCount({a: {$bitsAllClear: 255}}, 1)\n  matchCount({a: {$bitsAnySet: 0}}, 0)\n  matchCount({a: {$bitsAnySet: 9}}, 3)\n  matchCount({a: {$bitsAnySet: 255}}, 4)\n  matchCount({a: {$bitsAnyClear: 0}}, 0)\n  matchCount({a: {$bitsAnyClear: 18}}, 3)\n  matchCount({a: {$bitsAnyClear: 24}}, 3)\n  matchCount({a: {$bitsAnyClear: 255}}, 4)\n\n  // Tests with array of bit positions.\n  matchCount({a: {$bitsAllSet: []}}, 5)\n  matchCount({a: {$bitsAllSet: [0]}}, 2)\n  matchCount({a: {$bitsAllSet: [4]}}, 3)\n  matchCount({a: {$bitsAllSet: [1, 2, 4, 5]}}, 2)\n  matchCount({a: {$bitsAllSet: [0, 1, 2, 4, 5]}}, 1)\n  matchCount({a: {$bitsAllSet: [3, 4, 6]}}, 2)\n  matchCount({a: {$bitsAllSet: [0, 1, 2, 3, 4, 5, 6, 7]}}, 1)\n  matchCount({a: {$bitsAllClear: []}}, 5)\n  matchCount({a: {$bitsAllClear: [0]}}, 3)\n  matchCount({a: {$bitsAllClear: [4]}}, 2)\n  matchCount({a: {$bitsAllClear: [1, 7]}}, 3)\n  matchCount({a: {$bitsAllClear: [0, 1, 2, 3, 4, 5, 6, 7]}}, 1)\n  matchCount({a: {$bitsAnySet: []}}, 0)\n  matchCount({a: {$bitsAnySet: [1, 3]}}, 3)\n  matchCount({a: {$bitsAnySet: [0, 1, 2, 3, 4, 5, 6, 7]}}, 4)\n  matchCount({a: {$bitsAnyClear: []}}, 0)\n  matchCount({a: {$bitsAnyClear: [1, 4]}}, 3)\n  matchCount({a: {$bitsAnyClear: [3, 4]}}, 3)\n  matchCount({a: {$bitsAnyClear: [0, 1, 2, 3, 4, 5, 6, 7]}}, 4)\n\n  // Tests with multiple predicates.\n  matchCount({a: {$bitsAllSet: 54, $bitsAllClear: 201}}, 1)\n\n  // Tests on negative numbers\n\n  c.remove({})\n  c.insert({a: -0})\n  c.insert({a: -1})\n  c.insert({a: -54})\n\n  // Tests with bitmask.\n  matchCount({a: {$bitsAllSet: 0}}, 3)\n  matchCount({a: {$bitsAllSet: 2}}, 2)\n  matchCount({a: {$bitsAllSet: 127}}, 1)\n  matchCount({a: {$bitsAllSet: 74}}, 2)\n  matchCount({a: {$bitsAllClear: 0}}, 3)\n  matchCount({a: {$bitsAllClear: 53}}, 2)\n  matchCount({a: {$bitsAllClear: 127}}, 1)\n  matchCount({a: {$bitsAnySet: 0}}, 0)\n  matchCount({a: {$bitsAnySet: 2}}, 2)\n  matchCount({a: {$bitsAnySet: 127}}, 2)\n  matchCount({a: {$bitsAnyClear: 0}}, 0)\n  matchCount({a: {$bitsAnyClear: 53}}, 2)\n  matchCount({a: {$bitsAnyClear: 127}}, 2)\n\n  // Tests with array of bit positions.\n  var allPositions = []\n  for (var i = 0; i < 64; i++) {\n     allPositions.push(i)\n  }\n\n  matchCount({a: {$bitsAllSet: []}}, 3)\n  matchCount({a: {$bitsAllSet: [1]}}, 2)\n  matchCount({a: {$bitsAllSet: allPositions}}, 1)\n  matchCount({a: {$bitsAllSet: [1, 7, 6, 3, 100]}}, 2)\n  matchCount({a: {$bitsAllClear: []}}, 3)\n  matchCount({a: {$bitsAllClear: [5, 4, 2, 0]}}, 2)\n  matchCount({a: {$bitsAllClear: allPositions}}, 1)\n  matchCount({a: {$bitsAnySet: []}}, 0)\n  matchCount({a: {$bitsAnySet: [1]}}, 2)\n  matchCount({a: {$bitsAnySet: allPositions}}, 2)\n  matchCount({a: {$bitsAnyClear: []}}, 0)\n  matchCount({a: {$bitsAnyClear: [0, 2, 4, 5, 100]}}, 2)\n  matchCount({a: {$bitsAnyClear: allPositions}}, 2)\n\n  // Tests with multiple predicates.\n  matchCount({a: {$bitsAllSet: 74, $bitsAllClear: 53}}, 1)\n\n  // Tests on BinData.\n\n  c.remove({})\n  c.insert({a: EJSON.parse('{\"$binary\": \"AAAAAAAAAAAAAAAAAAAAAAAAAAAA\"}')})\n  c.insert({a: EJSON.parse('{\"$binary\": \"AANgAAAAAAAAAAAAAAAAAAAAAAAA\"}')})\n  c.insert({a: EJSON.parse('{\"$binary\": \"JANgqwetkqwklEWRbWERKKJREtbq\"}')})\n  c.insert({a: EJSON.parse('{\"$binary\": \"////////////////////////////\"}')})\n\n  // Tests with binary string bitmask.\n  matchCount({a: {$bitsAllSet: EJSON.parse('{\"$binary\": \"AAAAAAAAAAAAAAAAAAAAAAAAAAAA\"}')}}, 4)\n  matchCount({a: {$bitsAllSet: EJSON.parse('{\"$binary\": \"AANgAAAAAAAAAAAAAAAAAAAAAAAA\"}')}}, 3)\n  matchCount({a: {$bitsAllSet: EJSON.parse('{\"$binary\": \"JANgqwetkqwklEWRbWERKKJREtbq\"}')}}, 2)\n  matchCount({a: {$bitsAllSet: EJSON.parse('{\"$binary\": \"////////////////////////////\"}')}}, 1)\n  matchCount({a: {$bitsAllClear: EJSON.parse('{\"$binary\": \"AAAAAAAAAAAAAAAAAAAAAAAAAAAA\"}')}}, 4)\n  matchCount({a: {$bitsAllClear: EJSON.parse('{\"$binary\": \"AAyfAAAAAAAAAAAAAAAAAAAAAAAA\"}')}}, 3)\n  matchCount({a: {$bitsAllClear: EJSON.parse('{\"$binary\": \"JAyfqwetkqwklEWRbWERKKJREtbq\"}')}}, 2)\n  matchCount({a: {$bitsAllClear: EJSON.parse('{\"$binary\": \"////////////////////////////\"}')}}, 1)\n  matchCount({a: {$bitsAnySet: EJSON.parse('{\"$binary\": \"AAAAAAAAAAAAAAAAAAAAAAAAAAAA\"}')}}, 0)\n  matchCount({a: {$bitsAnySet: EJSON.parse('{\"$binary\": \"AAyfAAAAAAAAAAAAAAAAAAAAAAAA\"}')}}, 1)\n  matchCount({a: {$bitsAnySet: EJSON.parse('{\"$binary\": \"JAyfqwetkqwklEWRbWERKKJREtbq\"}')}}, 2)\n  matchCount({a: {$bitsAnySet: EJSON.parse('{\"$binary\": \"////////////////////////////\"}')}}, 3)\n  matchCount({a: {$bitsAnyClear: EJSON.parse('{\"$binary\": \"AAAAAAAAAAAAAAAAAAAAAAAAAAAA\"}')}}, 0)\n  matchCount({a: {$bitsAnyClear: EJSON.parse('{\"$binary\": \"AANgAAAAAAAAAAAAAAAAAAAAAAAA\"}')}}, 1)\n  matchCount({a: {$bitsAnyClear: EJSON.parse('{\"$binary\": \"JANgqwetkqwklEWRbWERKKJREtbq\"}')}}, 2)\n  matchCount({a: {$bitsAnyClear: EJSON.parse('{\"$binary\": \"////////////////////////////\"}')}}, 3)\n\n  // Tests with multiple predicates.\n  matchCount({\n      a: {\n          $bitsAllSet: EJSON.parse('{\"$binary\": \"AANgAAAAAAAAAAAAAAAAAAAAAAAA\"}'),\n          $bitsAllClear: EJSON.parse('{\"$binary\": \"//yf////////////////////////\"}')\n      }\n  }, 1)\n\n  c.remove({})\n\n  nomatch({a: {$bitsAllSet: 1}}, {a: false})\n  nomatch({a: {$bitsAllSet: 1}}, {a: NaN})\n  nomatch({a: {$bitsAllSet: 1}}, {a: Infinity})\n  nomatch({a: {$bitsAllSet: 1}}, {a: null})\n  nomatch({a: {$bitsAllSet: 1}}, {a: 'asdf'})\n  nomatch({a: {$bitsAllSet: 1}}, {a: ['a', 'b']})\n  nomatch({a: {$bitsAllSet: 1}}, {a: {foo: 'bar'}})\n  nomatch({a: {$bitsAllSet: 1}}, {a: 1.2})\n  nomatch({a: {$bitsAllSet: 1}}, {a: \"1\"})\n\n  _.each([\n    false,\n    NaN,\n    Infinity,\n    null,\n    'asdf',\n    ['a', 'b'],\n    {foo: 'bar'},\n    1.2,\n    \"1\",\n    [0, -1]\n  ], function (badValue) {\n    test.throws(function () {\n      match({a: {$bitsAllSet: badValue}}, {a: 42});\n    });\n  });\n\n  // $type\n  match({a: {$type: 1}}, {a: 1.1});\n  match({a: {$type: 1}}, {a: 1});\n  nomatch({a: {$type: 1}}, {a: \"1\"});\n  match({a: {$type: 2}}, {a: \"1\"});\n  nomatch({a: {$type: 2}}, {a: 1});\n  match({a: {$type: 3}}, {a: {}});\n  match({a: {$type: 3}}, {a: {b: 2}});\n  nomatch({a: {$type: 3}}, {a: []});\n  nomatch({a: {$type: 3}}, {a: [1]});\n  nomatch({a: {$type: 3}}, {a: null});\n  match({a: {$type: 5}}, {a: EJSON.newBinary(0)});\n  match({a: {$type: 5}}, {a: EJSON.newBinary(4)});\n  nomatch({a: {$type: 5}}, {a: []});\n  nomatch({a: {$type: 5}}, {a: [42]});\n  match({a: {$type: 7}}, {a: new MongoID.ObjectID()});\n  nomatch({a: {$type: 7}}, {a: \"1234567890abcd1234567890\"});\n  match({a: {$type: 8}}, {a: true});\n  match({a: {$type: 8}}, {a: false});\n  nomatch({a: {$type: 8}}, {a: \"true\"});\n  nomatch({a: {$type: 8}}, {a: 0});\n  nomatch({a: {$type: 8}}, {a: null});\n  nomatch({a: {$type: 8}}, {a: ''});\n  nomatch({a: {$type: 8}}, {});\n  match({a: {$type: 9}}, {a: (new Date)});\n  nomatch({a: {$type: 9}}, {a: +(new Date)});\n  match({a: {$type: 10}}, {a: null});\n  nomatch({a: {$type: 10}}, {a: false});\n  nomatch({a: {$type: 10}}, {a: ''});\n  nomatch({a: {$type: 10}}, {a: 0});\n  nomatch({a: {$type: 10}}, {});\n  match({a: {$type: 11}}, {a: /x/});\n  nomatch({a: {$type: 11}}, {a: 'x'});\n  nomatch({a: {$type: 11}}, {});\n\n  // The normal rule for {$type:4} (4 means array) is that it NOT good enough to\n  // just have an array that's the leaf that matches the path.  (An array inside\n  // that array is good, though.)\n  nomatch({a: {$type: 4}}, {a: []});\n  nomatch({a: {$type: 4}}, {a: [1]}); // tested against mongodb\n  match({a: {$type: 1}}, {a: [1]});\n  nomatch({a: {$type: 2}}, {a: [1]});\n  match({a: {$type: 1}}, {a: [\"1\", 1]});\n  match({a: {$type: 2}}, {a: [\"1\", 1]});\n  nomatch({a: {$type: 3}}, {a: [\"1\", 1]});\n  nomatch({a: {$type: 4}}, {a: [\"1\", 1]});\n  nomatch({a: {$type: 1}}, {a: [\"1\", []]});\n  match({a: {$type: 2}}, {a: [\"1\", []]});\n  match({a: {$type: 4}}, {a: [\"1\", []]}); // tested against mongodb\n  // An exception to the normal rule is that an array found via numeric index is\n  // examined itself, and its elements are not.\n  match({'a.0': {$type: 4}}, {a: [[0]]});\n  nomatch({'a.0': {$type: 1}}, {a: [[0]]});\n\n  // regular expressions\n  match({a: /a/}, {a: 'cat'});\n  nomatch({a: /a/}, {a: 'cut'});\n  nomatch({a: /a/}, {a: 'CAT'});\n  match({a: /a/i}, {a: 'CAT'});\n  match({a: /a/}, {a: ['foo', 'bar']});  // search within array...\n  nomatch({a: /,/}, {a: ['foo', 'bar']});  // but not by stringifying\n  match({a: {$regex: 'a'}}, {a: ['foo', 'bar']});\n  nomatch({a: {$regex: ','}}, {a: ['foo', 'bar']});\n  match({a: {$regex: /a/}}, {a: 'cat'});\n  nomatch({a: {$regex: /a/}}, {a: 'cut'});\n  nomatch({a: {$regex: /a/}}, {a: 'CAT'});\n  match({a: {$regex: /a/i}}, {a: 'CAT'});\n  match({a: {$regex: /a/, $options: 'i'}}, {a: 'CAT'}); // tested\n  match({a: {$regex: /a/i, $options: 'i'}}, {a: 'CAT'}); // tested\n  nomatch({a: {$regex: /a/i, $options: ''}}, {a: 'CAT'}); // tested\n  match({a: {$regex: 'a'}}, {a: 'cat'});\n  nomatch({a: {$regex: 'a'}}, {a: 'cut'});\n  nomatch({a: {$regex: 'a'}}, {a: 'CAT'});\n  match({a: {$regex: 'a', $options: 'i'}}, {a: 'CAT'});\n  match({a: {$regex: '', $options: 'i'}}, {a: 'foo'});\n  nomatch({a: {$regex: '', $options: 'i'}}, {});\n  nomatch({a: {$regex: '', $options: 'i'}}, {a: 5});\n  nomatch({a: /undefined/}, {});\n  nomatch({a: {$regex: 'undefined'}}, {});\n  nomatch({a: /xxx/}, {});\n  nomatch({a: {$regex: 'xxx'}}, {});\n\n  // GitHub issue #2817:\n  // Regexps with a global flag ('g') keep a state when tested against the same\n  // string. Selector shouldn't return different result for similar documents\n  // because of this state.\n  var reusedRegexp = /sh/ig;\n  match({a: reusedRegexp}, {a: 'Shorts'});\n  match({a: reusedRegexp}, {a: 'Shorts'});\n  match({a: reusedRegexp}, {a: 'Shorts'});\n\n  match({a: {$regex: reusedRegexp}}, {a: 'Shorts'});\n  match({a: {$regex: reusedRegexp}}, {a: 'Shorts'});\n  match({a: {$regex: reusedRegexp}}, {a: 'Shorts'});\n\n  test.throws(function () {\n    match({a: {$options: 'i'}}, {a: 12});\n  });\n\n  match({a: /a/}, {a: ['dog', 'cat']});\n  nomatch({a: /a/}, {a: ['dog', 'puppy']});\n\n  // we don't support regexps in minimongo very well (eg, there's no EJSON\n  // encoding so it won't go over the wire), but run these tests anyway\n  match({a: /a/}, {a: /a/});\n  match({a: /a/}, {a: ['x', /a/]});\n  nomatch({a: /a/}, {a: /a/i});\n  nomatch({a: /a/m}, {a: /a/});\n  nomatch({a: /a/}, {a: /b/});\n  nomatch({a: /5/}, {a: 5});\n  nomatch({a: /t/}, {a: true});\n  match({a: /m/i}, {a: ['x', 'xM']});\n\n  test.throws(function () {\n    match({a: {$regex: /a/, $options: 'x'}}, {a: 'cat'});\n  });\n  test.throws(function () {\n    match({a: {$regex: /a/, $options: 's'}}, {a: 'cat'});\n  });\n\n  // $not\n  match({x: {$not: {$gt: 7}}}, {x: 6});\n  nomatch({x: {$not: {$gt: 7}}}, {x: 8});\n  match({x: {$not: {$lt: 10, $gt: 7}}}, {x: 11});\n  nomatch({x: {$not: {$lt: 10, $gt: 7}}}, {x: 9});\n  match({x: {$not: {$lt: 10, $gt: 7}}}, {x: 6});\n\n  match({x: {$not: {$gt: 7}}}, {x: [2, 3, 4]});\n  match({'x.y': {$not: {$gt: 7}}}, {x: [{y:2}, {y:3}, {y:4}]});\n  nomatch({x: {$not: {$gt: 7}}}, {x: [2, 3, 4, 10]});\n  nomatch({'x.y': {$not: {$gt: 7}}}, {x: [{y:2}, {y:3}, {y:4}, {y:10}]});\n\n  match({x: {$not: /a/}}, {x: \"dog\"});\n  nomatch({x: {$not: /a/}}, {x: \"cat\"});\n  match({x: {$not: /a/}}, {x: [\"dog\", \"puppy\"]});\n  nomatch({x: {$not: /a/}}, {x: [\"kitten\", \"cat\"]});\n\n  // dotted keypaths: bare values\n  match({\"a.b\": 1}, {a: {b: 1}});\n  nomatch({\"a.b\": 1}, {a: {b: 2}});\n  match({\"a.b\": [1,2,3]}, {a: {b: [1,2,3]}});\n  nomatch({\"a.b\": [1,2,3]}, {a: {b: [4]}});\n  match({\"a.b\": /a/}, {a: {b: \"cat\"}});\n  nomatch({\"a.b\": /a/}, {a: {b: \"dog\"}});\n  match({\"a.b.c\": null}, {});\n  match({\"a.b.c\": null}, {a: 1});\n  match({\"a.b\": null}, {a: 1});\n  match({\"a.b.c\": null}, {a: {b: 4}});\n\n  // dotted keypaths, nulls, numeric indices, arrays\n  nomatch({\"a.b\": null}, {a: [1]});\n  match({\"a.b\": []}, {a: {b: []}});\n  var big = {a: [{b: 1}, 2, {}, {b: [3, 4]}]};\n  match({\"a.b\": 1}, big);\n  match({\"a.b\": [3, 4]}, big);\n  match({\"a.b\": 3}, big);\n  match({\"a.b\": 4}, big);\n  match({\"a.b\": null}, big);  // matches on slot 2\n  match({'a.1': 8}, {a: [7, 8, 9]});\n  nomatch({'a.1': 7}, {a: [7, 8, 9]});\n  nomatch({'a.1': null}, {a: [7, 8, 9]});\n  match({'a.1': [8, 9]}, {a: [7, [8, 9]]});\n  nomatch({'a.1': 6}, {a: [[6, 7], [8, 9]]});\n  nomatch({'a.1': 7}, {a: [[6, 7], [8, 9]]});\n  nomatch({'a.1': 8}, {a: [[6, 7], [8, 9]]});\n  nomatch({'a.1': 9}, {a: [[6, 7], [8, 9]]});\n  match({\"a.1\": 2}, {a: [0, {1: 2}, 3]});\n  match({\"a.1\": {1: 2}}, {a: [0, {1: 2}, 3]});\n  match({\"x.1.y\": 8}, {x: [7, {y: 8}, 9]});\n  // comes from trying '1' as key in the plain object\n  match({\"x.1.y\": null}, {x: [7, {y: 8}, 9]});\n  match({\"a.1.b\": 9}, {a: [7, {b: 9}, {1: {b: 'foo'}}]});\n  match({\"a.1.b\": 'foo'}, {a: [7, {b: 9}, {1: {b: 'foo'}}]});\n  match({\"a.1.b\": null}, {a: [7, {b: 9}, {1: {b: 'foo'}}]});\n  match({\"a.1.b\": 2}, {a: [1, [{b: 2}], 3]});\n  nomatch({\"a.1.b\": null}, {a: [1, [{b: 2}], 3]});\n  // this is new behavior in mongo 2.5\n  nomatch({\"a.0.b\": null}, {a: [5]});\n  match({\"a.1\": 4}, {a: [{1: 4}, 5]});\n  match({\"a.1\": 5}, {a: [{1: 4}, 5]});\n  nomatch({\"a.1\": null}, {a: [{1: 4}, 5]});\n  match({\"a.1.foo\": 4}, {a: [{1: {foo: 4}}, {foo: 5}]});\n  match({\"a.1.foo\": 5}, {a: [{1: {foo: 4}}, {foo: 5}]});\n  match({\"a.1.foo\": null}, {a: [{1: {foo: 4}}, {foo: 5}]});\n\n  // trying to access a dotted field that is undefined at some point\n  // down the chain\n  nomatch({\"a.b\": 1}, {x: 2});\n  nomatch({\"a.b.c\": 1}, {a: {x: 2}});\n  nomatch({\"a.b.c\": 1}, {a: {b: {x: 2}}});\n  nomatch({\"a.b.c\": 1}, {a: {b: 1}});\n  nomatch({\"a.b.c\": 1}, {a: {b: 0}});\n\n  // dotted keypaths: literal objects\n  match({\"a.b\": {c: 1}}, {a: {b: {c: 1}}});\n  nomatch({\"a.b\": {c: 1}}, {a: {b: {c: 2}}});\n  nomatch({\"a.b\": {c: 1}}, {a: {b: 2}});\n  match({\"a.b\": {c: 1, d: 2}}, {a: {b: {c: 1, d: 2}}});\n  nomatch({\"a.b\": {c: 1, d: 2}}, {a: {b: {c: 1, d: 1}}});\n  nomatch({\"a.b\": {c: 1, d: 2}}, {a: {b: {d: 2}}});\n\n  // dotted keypaths: $ operators\n  match({\"a.b\": {$in: [1, 2, 3]}}, {a: {b: [2]}}); // tested against mongodb\n  match({\"a.b\": {$in: [{x: 1}, {x: 2}, {x: 3}]}}, {a: {b: [{x: 2}]}});\n  match({\"a.b\": {$in: [1, 2, 3]}}, {a: {b: [4, 2]}});\n  nomatch({\"a.b\": {$in: [1, 2, 3]}}, {a: {b: [4]}});\n\n  // $or\n  test.throws(function () {\n    match({$or: []}, {});\n  });\n  test.throws(function () {\n    match({$or: [5]}, {});\n  });\n  test.throws(function () {\n    match({$or: []}, {a: 1});\n  });\n  match({$or: [{a: 1}]}, {a: 1});\n  nomatch({$or: [{b: 2}]}, {a: 1});\n  match({$or: [{a: 1}, {b: 2}]}, {a: 1});\n  nomatch({$or: [{c: 3}, {d: 4}]}, {a: 1});\n  match({$or: [{a: 1}, {b: 2}]}, {a: [1, 2, 3]});\n  nomatch({$or: [{a: 1}, {b: 2}]}, {c: [1, 2, 3]});\n  nomatch({$or: [{a: 1}, {b: 2}]}, {a: [2, 3, 4]});\n  match({$or: [{a: 1}, {a: 2}]}, {a: 1});\n  match({$or: [{a: 1}, {a: 2}], b: 2}, {a: 1, b: 2});\n  nomatch({$or: [{a: 2}, {a: 3}], b: 2}, {a: 1, b: 2});\n  nomatch({$or: [{a: 1}, {a: 2}], b: 3}, {a: 1, b: 2});\n\n  // Combining $or with equality\n  match({x: 1, $or: [{a: 1}, {b: 1}]}, {x: 1, b: 1});\n  match({$or: [{a: 1}, {b: 1}], x: 1}, {x: 1, b: 1});\n  nomatch({x: 1, $or: [{a: 1}, {b: 1}]}, {b: 1});\n  nomatch({x: 1, $or: [{a: 1}, {b: 1}]}, {x: 1});\n\n  // $or and $lt, $lte, $gt, $gte\n  match({$or: [{a: {$lte: 1}}, {a: 2}]}, {a: 1});\n  nomatch({$or: [{a: {$lt: 1}}, {a: 2}]}, {a: 1});\n  match({$or: [{a: {$gte: 1}}, {a: 2}]}, {a: 1});\n  nomatch({$or: [{a: {$gt: 1}}, {a: 2}]}, {a: 1});\n  match({$or: [{b: {$gt: 1}}, {b: {$lt: 3}}]}, {b: 2});\n  nomatch({$or: [{b: {$lt: 1}}, {b: {$gt: 3}}]}, {b: 2});\n\n  // $or and $in\n  match({$or: [{a: {$in: [1, 2, 3]}}]}, {a: 1});\n  nomatch({$or: [{a: {$in: [4, 5, 6]}}]}, {a: 1});\n  match({$or: [{a: {$in: [1, 2, 3]}}, {b: 2}]}, {a: 1});\n  match({$or: [{a: {$in: [1, 2, 3]}}, {b: 2}]}, {b: 2});\n  nomatch({$or: [{a: {$in: [1, 2, 3]}}, {b: 2}]}, {c: 3});\n  match({$or: [{a: {$in: [1, 2, 3]}}, {b: {$in: [1, 2, 3]}}]}, {b: 2});\n  nomatch({$or: [{a: {$in: [1, 2, 3]}}, {b: {$in: [4, 5, 6]}}]}, {b: 2});\n\n  // $or and $nin\n  nomatch({$or: [{a: {$nin: [1, 2, 3]}}]}, {a: 1});\n  match({$or: [{a: {$nin: [4, 5, 6]}}]}, {a: 1});\n  nomatch({$or: [{a: {$nin: [1, 2, 3]}}, {b: 2}]}, {a: 1});\n  match({$or: [{a: {$nin: [1, 2, 3]}}, {b: 2}]}, {b: 2});\n  match({$or: [{a: {$nin: [1, 2, 3]}}, {b: 2}]}, {c: 3});\n  match({$or: [{a: {$nin: [1, 2, 3]}}, {b: {$nin: [1, 2, 3]}}]}, {b: 2});\n  nomatch({$or: [{a: {$nin: [1, 2, 3]}}, {b: {$nin: [1, 2, 3]}}]}, {a: 1, b: 2});\n  match({$or: [{a: {$nin: [1, 2, 3]}}, {b: {$nin: [4, 5, 6]}}]}, {b: 2});\n\n  // $or and dot-notation\n  match({$or: [{\"a.b\": 1}, {\"a.b\": 2}]}, {a: {b: 1}});\n  match({$or: [{\"a.b\": 1}, {\"a.c\": 1}]}, {a: {b: 1}});\n  nomatch({$or: [{\"a.b\": 2}, {\"a.c\": 1}]}, {a: {b: 1}});\n\n  // $or and nested objects\n  match({$or: [{a: {b: 1, c: 2}}, {a: {b: 2, c: 1}}]}, {a: {b: 1, c: 2}});\n  nomatch({$or: [{a: {b: 1, c: 3}}, {a: {b: 2, c: 1}}]}, {a: {b: 1, c: 2}});\n\n  // $or and regexes\n  match({$or: [{a: /a/}]}, {a: \"cat\"});\n  nomatch({$or: [{a: /o/}]}, {a: \"cat\"});\n  match({$or: [{a: /a/}, {a: /o/}]}, {a: \"cat\"});\n  nomatch({$or: [{a: /i/}, {a: /o/}]}, {a: \"cat\"});\n  match({$or: [{a: /i/}, {b: /o/}]}, {a: \"cat\", b: \"dog\"});\n\n  // $or and $ne\n  match({$or: [{a: {$ne: 1}}]}, {});\n  nomatch({$or: [{a: {$ne: 1}}]}, {a: 1});\n  match({$or: [{a: {$ne: 1}}]}, {a: 2});\n  match({$or: [{a: {$ne: 1}}]}, {b: 1});\n  match({$or: [{a: {$ne: 1}}, {a: {$ne: 2}}]}, {a: 1});\n  match({$or: [{a: {$ne: 1}}, {b: {$ne: 1}}]}, {a: 1});\n  nomatch({$or: [{a: {$ne: 1}}, {b: {$ne: 2}}]}, {a: 1, b: 2});\n\n  // $or and $not\n  match({$or: [{a: {$not: {$mod: [10, 1]}}}]}, {});\n  nomatch({$or: [{a: {$not: {$mod: [10, 1]}}}]}, {a: 1});\n  match({$or: [{a: {$not: {$mod: [10, 1]}}}]}, {a: 2});\n  match({$or: [{a: {$not: {$mod: [10, 1]}}}, {a: {$not: {$mod: [10, 2]}}}]}, {a: 1});\n  nomatch({$or: [{a: {$not: {$mod: [10, 1]}}}, {a: {$mod: [10, 2]}}]}, {a: 1});\n  match({$or: [{a: {$not: {$mod: [10, 1]}}}, {a: {$mod: [10, 2]}}]}, {a: 2});\n  match({$or: [{a: {$not: {$mod: [10, 1]}}}, {a: {$mod: [10, 2]}}]}, {a: 3});\n  // this is possibly an open-ended task, so we stop here ...\n\n  // $nor\n  test.throws(function () {\n    match({$nor: []}, {});\n  });\n  test.throws(function () {\n    match({$nor: [5]}, {});\n  });\n  test.throws(function () {\n    match({$nor: []}, {a: 1});\n  });\n  nomatch({$nor: [{a: 1}]}, {a: 1});\n  match({$nor: [{b: 2}]}, {a: 1});\n  nomatch({$nor: [{a: 1}, {b: 2}]}, {a: 1});\n  match({$nor: [{c: 3}, {d: 4}]}, {a: 1});\n  nomatch({$nor: [{a: 1}, {b: 2}]}, {a: [1, 2, 3]});\n  match({$nor: [{a: 1}, {b: 2}]}, {c: [1, 2, 3]});\n  match({$nor: [{a: 1}, {b: 2}]}, {a: [2, 3, 4]});\n  nomatch({$nor: [{a: 1}, {a: 2}]}, {a: 1});\n\n  // $nor and $lt, $lte, $gt, $gte\n  nomatch({$nor: [{a: {$lte: 1}}, {a: 2}]}, {a: 1});\n  match({$nor: [{a: {$lt: 1}}, {a: 2}]}, {a: 1});\n  nomatch({$nor: [{a: {$gte: 1}}, {a: 2}]}, {a: 1});\n  match({$nor: [{a: {$gt: 1}}, {a: 2}]}, {a: 1});\n  nomatch({$nor: [{b: {$gt: 1}}, {b: {$lt: 3}}]}, {b: 2});\n  match({$nor: [{b: {$lt: 1}}, {b: {$gt: 3}}]}, {b: 2});\n\n  // $nor and $in\n  nomatch({$nor: [{a: {$in: [1, 2, 3]}}]}, {a: 1});\n  match({$nor: [{a: {$in: [4, 5, 6]}}]}, {a: 1});\n  nomatch({$nor: [{a: {$in: [1, 2, 3]}}, {b: 2}]}, {a: 1});\n  nomatch({$nor: [{a: {$in: [1, 2, 3]}}, {b: 2}]}, {b: 2});\n  match({$nor: [{a: {$in: [1, 2, 3]}}, {b: 2}]}, {c: 3});\n  nomatch({$nor: [{a: {$in: [1, 2, 3]}}, {b: {$in: [1, 2, 3]}}]}, {b: 2});\n  match({$nor: [{a: {$in: [1, 2, 3]}}, {b: {$in: [4, 5, 6]}}]}, {b: 2});\n\n  // $nor and $nin\n  match({$nor: [{a: {$nin: [1, 2, 3]}}]}, {a: 1});\n  nomatch({$nor: [{a: {$nin: [4, 5, 6]}}]}, {a: 1});\n  match({$nor: [{a: {$nin: [1, 2, 3]}}, {b: 2}]}, {a: 1});\n  nomatch({$nor: [{a: {$nin: [1, 2, 3]}}, {b: 2}]}, {b: 2});\n  nomatch({$nor: [{a: {$nin: [1, 2, 3]}}, {b: 2}]}, {c: 3});\n  nomatch({$nor: [{a: {$nin: [1, 2, 3]}}, {b: {$nin: [1, 2, 3]}}]}, {b: 2});\n  match({$nor: [{a: {$nin: [1, 2, 3]}}, {b: {$nin: [1, 2, 3]}}]}, {a: 1, b: 2});\n  nomatch({$nor: [{a: {$nin: [1, 2, 3]}}, {b: {$nin: [4, 5, 6]}}]}, {b: 2});\n\n  // $nor and dot-notation\n  nomatch({$nor: [{\"a.b\": 1}, {\"a.b\": 2}]}, {a: {b: 1}});\n  nomatch({$nor: [{\"a.b\": 1}, {\"a.c\": 1}]}, {a: {b: 1}});\n  match({$nor: [{\"a.b\": 2}, {\"a.c\": 1}]}, {a: {b: 1}});\n\n  // $nor and nested objects\n  nomatch({$nor: [{a: {b: 1, c: 2}}, {a: {b: 2, c: 1}}]}, {a: {b: 1, c: 2}});\n  match({$nor: [{a: {b: 1, c: 3}}, {a: {b: 2, c: 1}}]}, {a: {b: 1, c: 2}});\n\n  // $nor and regexes\n  nomatch({$nor: [{a: /a/}]}, {a: \"cat\"});\n  match({$nor: [{a: /o/}]}, {a: \"cat\"});\n  nomatch({$nor: [{a: /a/}, {a: /o/}]}, {a: \"cat\"});\n  match({$nor: [{a: /i/}, {a: /o/}]}, {a: \"cat\"});\n  nomatch({$nor: [{a: /i/}, {b: /o/}]}, {a: \"cat\", b: \"dog\"});\n\n  // $nor and $ne\n  nomatch({$nor: [{a: {$ne: 1}}]}, {});\n  match({$nor: [{a: {$ne: 1}}]}, {a: 1});\n  nomatch({$nor: [{a: {$ne: 1}}]}, {a: 2});\n  nomatch({$nor: [{a: {$ne: 1}}]}, {b: 1});\n  nomatch({$nor: [{a: {$ne: 1}}, {a: {$ne: 2}}]}, {a: 1});\n  nomatch({$nor: [{a: {$ne: 1}}, {b: {$ne: 1}}]}, {a: 1});\n  match({$nor: [{a: {$ne: 1}}, {b: {$ne: 2}}]}, {a: 1, b: 2});\n\n  // $nor and $not\n  nomatch({$nor: [{a: {$not: {$mod: [10, 1]}}}]}, {});\n  match({$nor: [{a: {$not: {$mod: [10, 1]}}}]}, {a: 1});\n  nomatch({$nor: [{a: {$not: {$mod: [10, 1]}}}]}, {a: 2});\n  nomatch({$nor: [{a: {$not: {$mod: [10, 1]}}}, {a: {$not: {$mod: [10, 2]}}}]}, {a: 1});\n  match({$nor: [{a: {$not: {$mod: [10, 1]}}}, {a: {$mod: [10, 2]}}]}, {a: 1});\n  nomatch({$nor: [{a: {$not: {$mod: [10, 1]}}}, {a: {$mod: [10, 2]}}]}, {a: 2});\n  nomatch({$nor: [{a: {$not: {$mod: [10, 1]}}}, {a: {$mod: [10, 2]}}]}, {a: 3});\n\n  // $and\n\n  test.throws(function () {\n    match({$and: []}, {});\n  });\n  test.throws(function () {\n    match({$and: [5]}, {});\n  });\n  test.throws(function () {\n    match({$and: []}, {a: 1});\n  });\n  match({$and: [{a: 1}]}, {a: 1});\n  nomatch({$and: [{a: 1}, {a: 2}]}, {a: 1});\n  nomatch({$and: [{a: 1}, {b: 1}]}, {a: 1});\n  match({$and: [{a: 1}, {b: 2}]}, {a: 1, b: 2});\n  nomatch({$and: [{a: 1}, {b: 1}]}, {a: 1, b: 2});\n  match({$and: [{a: 1}, {b: 2}], c: 3}, {a: 1, b: 2, c: 3});\n  nomatch({$and: [{a: 1}, {b: 2}], c: 4}, {a: 1, b: 2, c: 3});\n\n  // $and and regexes\n  match({$and: [{a: /a/}]}, {a: \"cat\"});\n  match({$and: [{a: /a/i}]}, {a: \"CAT\"});\n  nomatch({$and: [{a: /o/}]}, {a: \"cat\"});\n  nomatch({$and: [{a: /a/}, {a: /o/}]}, {a: \"cat\"});\n  match({$and: [{a: /a/}, {b: /o/}]}, {a: \"cat\", b: \"dog\"});\n  nomatch({$and: [{a: /a/}, {b: /a/}]}, {a: \"cat\", b: \"dog\"});\n\n  // $and, dot-notation, and nested objects\n  match({$and: [{\"a.b\": 1}]}, {a: {b: 1}});\n  match({$and: [{a: {b: 1}}]}, {a: {b: 1}});\n  nomatch({$and: [{\"a.b\": 2}]}, {a: {b: 1}});\n  nomatch({$and: [{\"a.c\": 1}]}, {a: {b: 1}});\n  nomatch({$and: [{\"a.b\": 1}, {\"a.b\": 2}]}, {a: {b: 1}});\n  nomatch({$and: [{\"a.b\": 1}, {a: {b: 2}}]}, {a: {b: 1}});\n  match({$and: [{\"a.b\": 1}, {\"c.d\": 2}]}, {a: {b: 1}, c: {d: 2}});\n  nomatch({$and: [{\"a.b\": 1}, {\"c.d\": 1}]}, {a: {b: 1}, c: {d: 2}});\n  match({$and: [{\"a.b\": 1}, {c: {d: 2}}]}, {a: {b: 1}, c: {d: 2}});\n  nomatch({$and: [{\"a.b\": 1}, {c: {d: 1}}]}, {a: {b: 1}, c: {d: 2}});\n  nomatch({$and: [{\"a.b\": 2}, {c: {d: 2}}]}, {a: {b: 1}, c: {d: 2}});\n  match({$and: [{a: {b: 1}}, {c: {d: 2}}]}, {a: {b: 1}, c: {d: 2}});\n  nomatch({$and: [{a: {b: 2}}, {c: {d: 2}}]}, {a: {b: 1}, c: {d: 2}});\n\n  // $and and $in\n  nomatch({$and: [{a: {$in: []}}]}, {});\n  match({$and: [{a: {$in: [1, 2, 3]}}]}, {a: 1});\n  nomatch({$and: [{a: {$in: [4, 5, 6]}}]}, {a: 1});\n  nomatch({$and: [{a: {$in: [1, 2, 3]}}, {a: {$in: [4, 5, 6]}}]}, {a: 1});\n  nomatch({$and: [{a: {$in: [1, 2, 3]}}, {b: {$in: [1, 2, 3]}}]}, {a: 1, b: 4});\n  match({$and: [{a: {$in: [1, 2, 3]}}, {b: {$in: [4, 5, 6]}}]}, {a: 1, b: 4});\n\n\n  // $and and $nin\n  match({$and: [{a: {$nin: []}}]}, {});\n  nomatch({$and: [{a: {$nin: [1, 2, 3]}}]}, {a: 1});\n  match({$and: [{a: {$nin: [4, 5, 6]}}]}, {a: 1});\n  nomatch({$and: [{a: {$nin: [1, 2, 3]}}, {a: {$nin: [4, 5, 6]}}]}, {a: 1});\n  nomatch({$and: [{a: {$nin: [1, 2, 3]}}, {b: {$nin: [1, 2, 3]}}]}, {a: 1, b: 4});\n  nomatch({$and: [{a: {$nin: [1, 2, 3]}}, {b: {$nin: [4, 5, 6]}}]}, {a: 1, b: 4});\n\n  // $and and $lt, $lte, $gt, $gte\n  match({$and: [{a: {$lt: 2}}]}, {a: 1});\n  nomatch({$and: [{a: {$lt: 1}}]}, {a: 1});\n  match({$and: [{a: {$lte: 1}}]}, {a: 1});\n  match({$and: [{a: {$gt: 0}}]}, {a: 1});\n  nomatch({$and: [{a: {$gt: 1}}]}, {a: 1});\n  match({$and: [{a: {$gte: 1}}]}, {a: 1});\n  match({$and: [{a: {$gt: 0}}, {a: {$lt: 2}}]}, {a: 1});\n  nomatch({$and: [{a: {$gt: 1}}, {a: {$lt: 2}}]}, {a: 1});\n  nomatch({$and: [{a: {$gt: 0}}, {a: {$lt: 1}}]}, {a: 1});\n  match({$and: [{a: {$gte: 1}}, {a: {$lte: 1}}]}, {a: 1});\n  nomatch({$and: [{a: {$gte: 2}}, {a: {$lte: 0}}]}, {a: 1});\n\n  // $and and $ne\n  match({$and: [{a: {$ne: 1}}]}, {});\n  nomatch({$and: [{a: {$ne: 1}}]}, {a: 1});\n  match({$and: [{a: {$ne: 1}}]}, {a: 2});\n  nomatch({$and: [{a: {$ne: 1}}, {a: {$ne: 2}}]}, {a: 2});\n  match({$and: [{a: {$ne: 1}}, {a: {$ne: 3}}]}, {a: 2});\n\n  // $and and $not\n  match({$and: [{a: {$not: {$gt: 2}}}]}, {a: 1});\n  nomatch({$and: [{a: {$not: {$lt: 2}}}]}, {a: 1});\n  match({$and: [{a: {$not: {$lt: 0}}}, {a: {$not: {$gt: 2}}}]}, {a: 1});\n  nomatch({$and: [{a: {$not: {$lt: 2}}}, {a: {$not: {$gt: 0}}}]}, {a: 1});\n\n  // $where\n  match({$where: \"this.a === 1\"}, {a: 1});\n  match({$where: \"obj.a === 1\"}, {a: 1});\n  nomatch({$where: \"this.a !== 1\"}, {a: 1});\n  nomatch({$where: \"obj.a !== 1\"}, {a: 1});\n  nomatch({$where: \"this.a === 1\", a: 2}, {a: 1});\n  match({$where: \"this.a === 1\", b: 2}, {a: 1, b: 2});\n  match({$where: \"this.a === 1 && this.b === 2\"}, {a: 1, b: 2});\n  match({$where: \"this.a instanceof Array\"}, {a: []});\n  nomatch({$where: \"this.a instanceof Array\"}, {a: 1});\n\n  // reaching into array\n  match({\"dogs.0.name\": \"Fido\"}, {dogs: [{name: \"Fido\"}, {name: \"Rex\"}]});\n  match({\"dogs.1.name\": \"Rex\"}, {dogs: [{name: \"Fido\"}, {name: \"Rex\"}]});\n  nomatch({\"dogs.1.name\": \"Fido\"}, {dogs: [{name: \"Fido\"}, {name: \"Rex\"}]});\n  match({\"room.1b\": \"bla\"}, {room: {\"1b\": \"bla\"}});\n\n  match({\"dogs.name\": \"Fido\"}, {dogs: [{name: \"Fido\"}, {name: \"Rex\"}]});\n  match({\"dogs.name\": \"Rex\"}, {dogs: [{name: \"Fido\"}, {name: \"Rex\"}]});\n  match({\"animals.dogs.name\": \"Fido\"},\n        {animals: [{dogs: [{name: \"Rover\"}]},\n                   {},\n                   {dogs: [{name: \"Fido\"}, {name: \"Rex\"}]}]});\n  match({\"animals.dogs.name\": \"Fido\"},\n        {animals: [{dogs: {name: \"Rex\"}},\n                   {dogs: {name: \"Fido\"}}]});\n  match({\"animals.dogs.name\": \"Fido\"},\n        {animals: [{dogs: [{name: \"Rover\"}]},\n                   {},\n                   {dogs: [{name: [\"Fido\"]}, {name: \"Rex\"}]}]});\n  nomatch({\"dogs.name\": \"Fido\"}, {dogs: []});\n\n  // $elemMatch\n  match({dogs: {$elemMatch: {name: /e/}}},\n        {dogs: [{name: \"Fido\"}, {name: \"Rex\"}]});\n  nomatch({dogs: {$elemMatch: {name: /a/}}},\n          {dogs: [{name: \"Fido\"}, {name: \"Rex\"}]});\n  match({dogs: {$elemMatch: {age: {$gt: 4}}}},\n        {dogs: [{name: \"Fido\", age: 5}, {name: \"Rex\", age: 3}]});\n  match({dogs: {$elemMatch: {name: \"Fido\", age: {$gt: 4}}}},\n        {dogs: [{name: \"Fido\", age: 5}, {name: \"Rex\", age: 3}]});\n  nomatch({dogs: {$elemMatch: {name: \"Fido\", age: {$gt: 5}}}},\n          {dogs: [{name: \"Fido\", age: 5}, {name: \"Rex\", age: 3}]});\n  match({dogs: {$elemMatch: {name: /i/, age: {$gt: 4}}}},\n        {dogs: [{name: \"Fido\", age: 5}, {name: \"Rex\", age: 3}]});\n  nomatch({dogs: {$elemMatch: {name: /e/, age: 5}}},\n          {dogs: [{name: \"Fido\", age: 5}, {name: \"Rex\", age: 3}]});\n  match({x: {$elemMatch: {y: 9}}}, {x: [{y: 9}]});\n  nomatch({x: {$elemMatch: {y: 9}}}, {x: [[{y: 9}]]});\n  match({x: {$elemMatch: {$gt: 5, $lt: 9}}}, {x: [8]});\n  nomatch({x: {$elemMatch: {$gt: 5, $lt: 9}}}, {x: [[8]]});\n  match({'a.x': {$elemMatch: {y: 9}}},\n        {a: [{x: []}, {x: [{y: 9}]}]});\n  nomatch({a: {$elemMatch: {x: 5}}}, {a: {x: 5}});\n  match({a: {$elemMatch: {0: {$gt: 5, $lt: 9}}}}, {a: [[6]]});\n  match({a: {$elemMatch: {'0.b': {$gt: 5, $lt: 9}}}}, {a: [[{b:6}]]});\n  match({a: {$elemMatch: {x: 1, $or: [{a: 1}, {b: 1}]}}},\n        {a: [{x: 1, b: 1}]});\n  match({a: {$elemMatch: {$or: [{a: 1}, {b: 1}], x: 1}}},\n        {a: [{x: 1, b: 1}]});\n  match({a: {$elemMatch: {$or: [{a: 1}, {b: 1}]}}},\n        {a: [{x: 1, b: 1}]});\n  match({a: {$elemMatch: {$or: [{a: 1}, {b: 1}]}}},\n        {a: [{x: 1, b: 1}]});\n  match({a: {$elemMatch: {$and: [{b: 1}, {x: 1}]}}},\n        {a: [{x: 1, b: 1}]});\n  nomatch({a: {$elemMatch: {x: 1, $or: [{a: 1}, {b: 1}]}}},\n          {a: [{b: 1}]});\n  nomatch({a: {$elemMatch: {x: 1, $or: [{a: 1}, {b: 1}]}}},\n          {a: [{x: 1}]});\n  nomatch({a: {$elemMatch: {x: 1, $or: [{a: 1}, {b: 1}]}}},\n          {a: [{x: 1}, {b: 1}]});\n\n  test.throws(function () {\n    match({a: {$elemMatch: {$gte: 1, $or: [{a: 1}, {b: 1}]}}},\n          {a: [{x: 1, b: 1}]});\n  });\n\n  test.throws(function () {\n    match({x: {$elemMatch: {$and: [{$gt: 5, $lt: 9}]}}}, {x: [8]});\n  });\n\n  // $comment\n  match({a: 5, $comment: \"asdf\"}, {a: 5});\n  nomatch({a: 6, $comment: \"asdf\"}, {a: 5});\n\n  // XXX still needs tests:\n  // - non-scalar arguments to $gt, $lt, etc\n});\n\nTinytest.add(\"minimongo - projection_compiler\", function (test) {\n  var testProjection = function (projection, tests) {\n    var projection_f = LocalCollection._compileProjection(projection);\n    var equalNonStrict = function (a, b, desc) {\n      test.isTrue(_.isEqual(a, b), desc);\n    };\n\n    _.each(tests, function (testCase) {\n      equalNonStrict(projection_f(testCase[0]), testCase[1], testCase[2]);\n    });\n  };\n\n  var testCompileProjectionThrows = function (projection, expectedError) {\n    test.throws(function () {\n      LocalCollection._compileProjection(projection);\n    }, expectedError);\n  };\n\n  testProjection({ 'foo': 1, 'bar': 1 }, [\n    [{ foo: 42, bar: \"something\", baz: \"else\" },\n     { foo: 42, bar: \"something\" },\n     \"simplest - whitelist\"],\n\n    [{ foo: { nested: 17 }, baz: {} },\n     { foo: { nested: 17 } },\n     \"nested whitelisted field\"],\n\n    [{ _id: \"uid\", bazbaz: 42 },\n     { _id: \"uid\" },\n     \"simplest whitelist - preserve _id\"]\n  ]);\n\n  testProjection({ 'foo': 0, 'bar': 0 }, [\n    [{ foo: 42, bar: \"something\", baz: \"else\" },\n     { baz: \"else\" },\n     \"simplest - blacklist\"],\n\n    [{ foo: { nested: 17 }, baz: { foo: \"something\" } },\n     { baz: { foo: \"something\" } },\n     \"nested blacklisted field\"],\n\n    [{ _id: \"uid\", bazbaz: 42 },\n     { _id: \"uid\", bazbaz: 42 },\n     \"simplest blacklist - preserve _id\"]\n  ]);\n\n  testProjection({ _id: 0, foo: 1 }, [\n    [{ foo: 42, bar: 33, _id: \"uid\" },\n     { foo: 42 },\n     \"whitelist - _id blacklisted\"]\n  ]);\n\n  testProjection({ _id: 0, foo: 0 }, [\n    [{ foo: 42, bar: 33, _id: \"uid\" },\n     { bar: 33 },\n     \"blacklist - _id blacklisted\"]\n  ]);\n\n  testProjection({ 'foo.bar.baz': 1 }, [\n    [{ foo: { meh: \"fur\", bar: { baz: 42 }, tr: 1 }, bar: 33, baz: 'trolololo' },\n     { foo: { bar: { baz: 42 } } },\n     \"whitelist nested\"],\n\n    // Behavior of this test is looked up in actual mongo\n    [{ foo: { meh: \"fur\", bar: \"nope\", tr: 1 }, bar: 33, baz: 'trolololo' },\n     { foo: {} },\n     \"whitelist nested - path not found in doc, different type\"],\n\n    // Behavior of this test is looked up in actual mongo\n    [{ foo: { meh: \"fur\", bar: [], tr: 1 }, bar: 33, baz: 'trolololo' },\n     { foo: { bar: [] } },\n     \"whitelist nested - path not found in doc\"]\n  ]);\n\n  testProjection({ 'hope.humanity': 0, 'hope.people': 0 }, [\n    [{ hope: { humanity: \"lost\", people: 'broken', candies: 'long live!' } },\n     { hope: { candies: 'long live!' } },\n     \"blacklist nested\"],\n\n    [{ hope: \"new\" },\n     { hope: \"new\" },\n     \"blacklist nested - path not found in doc\"]\n  ]);\n\n  testProjection({ _id: 1 }, [\n    [{ _id: 42, x: 1, y: { z: \"2\" } },\n     { _id: 42 },\n     \"_id whitelisted\"],\n    [{ _id: 33 },\n     { _id: 33 },\n     \"_id whitelisted, _id only\"],\n    [{ x: 1 },\n     {},\n     \"_id whitelisted, no _id\"]\n  ]);\n\n  testProjection({ _id: 0 }, [\n    [{ _id: 42, x: 1, y: { z: \"2\" } },\n     { x: 1, y: { z: \"2\" } },\n     \"_id blacklisted\"],\n    [{ _id: 33 },\n     {},\n     \"_id blacklisted, _id only\"],\n    [{ x: 1 },\n     { x: 1 },\n     \"_id blacklisted, no _id\"]\n  ]);\n\n  testProjection({}, [\n    [{ a: 1, b: 2, c: \"3\" },\n     { a: 1, b: 2, c: \"3\" },\n     \"empty projection\"]\n  ]);\n\n  testCompileProjectionThrows(\n    { 'inc': 1, 'excl': 0 },\n    \"You cannot currently mix including and excluding fields\");\n  testCompileProjectionThrows(\n    { _id: 1, a: 0 },\n    \"You cannot currently mix including and excluding fields\");\n\n  testCompileProjectionThrows(\n    { 'a': 1, 'a.b': 1 },\n    \"using both of them may trigger unexpected behavior\");\n  testCompileProjectionThrows(\n    { 'a.b.c': 1, 'a.b': 1, 'a': 1 },\n    \"using both of them may trigger unexpected behavior\");\n\n  testCompileProjectionThrows(\"some string\", \"fields option must be an object\");\n});\n\nTinytest.add(\"minimongo - fetch with fields\", function (test) {\n  var c = new LocalCollection();\n  _.times(30, function (i) {\n    c.insert({\n      something: Random.id(),\n      anything: {\n        foo: \"bar\",\n        cool: \"hot\"\n      },\n      nothing: i,\n      i: i\n    });\n  });\n\n  // Test just a regular fetch with some projection\n  var fetchResults = c.find({}, { fields: {\n    'something': 1,\n    'anything.foo': 1\n  } }).fetch();\n\n  test.isTrue(_.all(fetchResults, function (x) {\n    return x &&\n           x.something &&\n           x.anything &&\n           x.anything.foo &&\n           x.anything.foo === \"bar\" &&\n           !_.has(x, 'nothing') &&\n           !_.has(x.anything, 'cool');\n  }));\n\n  // Test with a selector, even field used in the selector is excluded in the\n  // projection\n  fetchResults = c.find({\n    nothing: { $gte: 5 }\n  }, {\n    fields: { nothing: 0 }\n  }).fetch();\n\n  test.isTrue(_.all(fetchResults, function (x) {\n    return x &&\n           x.something &&\n           x.anything &&\n           x.anything.foo === \"bar\" &&\n           x.anything.cool === \"hot\" &&\n           !_.has(x, 'nothing') &&\n           x.i &&\n           x.i >= 5;\n  }));\n\n  test.isTrue(fetchResults.length === 25);\n\n  // Test that we can sort, based on field excluded from the projection, use\n  // skip and limit as well!\n  // following find will get indexes [10..20) sorted by nothing\n  fetchResults = c.find({}, {\n    sort: {\n      nothing: 1\n    },\n    limit: 10,\n    skip: 10,\n    fields: {\n      i: 1,\n      something: 1\n    }\n  }).fetch();\n\n  test.isTrue(_.all(fetchResults, function (x) {\n    return x &&\n           x.something &&\n           x.i >= 10 && x.i < 20;\n  }));\n\n  _.each(fetchResults, function (x, i, arr) {\n    if (!i) return;\n    test.isTrue(x.i === arr[i-1].i + 1);\n  });\n\n  // Temporary unsupported operators\n  // queries are taken from MongoDB docs examples\n  test.throws(function () {\n    c.find({}, { fields: { 'grades.$': 1 } });\n  });\n  test.throws(function () {\n    c.find({}, { fields: { grades: { $elemMatch: { mean: 70 } } } });\n  });\n  test.throws(function () {\n    c.find({}, { fields: { grades: { $slice: [20, 10] } } });\n  });\n});\n\nTinytest.add(\"minimongo - fetch with projection, subarrays\", function (test) {\n  // Apparently projection of type 'foo.bar.x' for\n  // { foo: [ { bar: { x: 42 } }, { bar: { x: 3 } } ] }\n  // should return exactly this object. More precisely, arrays are considered as\n  // sets and are queried separately and then merged back to result set\n  var c = new LocalCollection();\n\n  // Insert a test object with two set fields\n  c.insert({\n    setA: [{\n      fieldA: 42,\n      fieldB: 33\n    }, {\n      fieldA: \"the good\",\n      fieldB: \"the bad\",\n      fieldC: \"the ugly\"\n    }],\n    setB: [{\n      anotherA: { },\n      anotherB: \"meh\"\n    }, {\n      anotherA: 1234,\n      anotherB: 431\n    }]\n  });\n\n  var equalNonStrict = function (a, b, desc) {\n    test.isTrue(_.isEqual(a, b), desc);\n  };\n\n  var testForProjection = function (projection, expected) {\n    var fetched = c.find({}, { fields: projection }).fetch()[0];\n    equalNonStrict(fetched, expected, \"failed sub-set projection: \" +\n                                      JSON.stringify(projection));\n  };\n\n  testForProjection({ 'setA.fieldA': 1, 'setB.anotherB': 1, _id: 0 },\n                    {\n                      setA: [{ fieldA: 42 }, { fieldA: \"the good\" }],\n                      setB: [{ anotherB: \"meh\" }, { anotherB: 431 }]\n                    });\n\n  testForProjection({ 'setA.fieldA': 0, 'setB.anotherA': 0, _id: 0 },\n                    {\n                      setA: [{fieldB:33}, {fieldB:\"the bad\",fieldC:\"the ugly\"}],\n                      setB: [{ anotherB: \"meh\" }, { anotherB: 431 }]\n                    });\n\n  c.remove({});\n  c.insert({a:[[{b:1,c:2},{b:2,c:4}],{b:3,c:5},[{b:4, c:9}]]});\n\n  testForProjection({ 'a.b': 1, _id: 0 },\n                    {a: [ [ { b: 1 }, { b: 2 } ], { b: 3 }, [ { b: 4 } ] ] });\n  testForProjection({ 'a.b': 0, _id: 0 },\n                    {a: [ [ { c: 2 }, { c: 4 } ], { c: 5 }, [ { c: 9 } ] ] });\n});\n\nTinytest.add(\"minimongo - fetch with projection, deep copy\", function (test) {\n  // Compiled fields projection defines the contract: returned document doesn't\n  // retain anything from the passed argument.\n  var doc = {\n    a: { x: 42 },\n    b: {\n      y: { z: 33 }\n    },\n    c: \"asdf\"\n  };\n\n  var fields = {\n    'a': 1,\n    'b.y': 1\n  };\n\n  var projectionFn = LocalCollection._compileProjection(fields);\n  var filteredDoc = projectionFn(doc);\n  doc.a.x++;\n  doc.b.y.z--;\n  test.equal(filteredDoc.a.x, 42, \"projection returning deep copy - including\");\n  test.equal(filteredDoc.b.y.z, 33, \"projection returning deep copy - including\");\n\n  fields = { c: 0 };\n  projectionFn = LocalCollection._compileProjection(fields);\n  filteredDoc = projectionFn(doc);\n\n  doc.a.x = 5;\n  test.equal(filteredDoc.a.x, 43, \"projection returning deep copy - excluding\");\n});\n\nTinytest.add(\"minimongo - observe ordered with projection\", function (test) {\n  // These tests are copy-paste from \"minimongo -observe ordered\",\n  // slightly modified to test projection\n  var operations = [];\n  var cbs = log_callbacks(operations);\n  var handle;\n\n  var c = new LocalCollection();\n  handle = c.find({}, {sort: {a: 1}, fields: { a: 1 }}).observe(cbs);\n  test.isTrue(handle.collection === c);\n\n  c.insert({_id: 'foo', a:1, b:2});\n  test.equal(operations.shift(), ['added', {a:1}, 0, null]);\n  c.update({a:1}, {$set: {a: 2, b: 1}});\n  test.equal(operations.shift(), ['changed', {a:2}, 0, {a:1}]);\n  c.insert({_id: 'bar', a:10, c: 33});\n  test.equal(operations.shift(), ['added', {a:10}, 1, null]);\n  c.update({}, {$inc: {a: 1}}, {multi: true});\n  c.update({}, {$inc: {c: 1}}, {multi: true});\n  test.equal(operations.shift(), ['changed', {a:3}, 0, {a:2}]);\n  test.equal(operations.shift(), ['changed', {a:11}, 1, {a:10}]);\n  c.update({a:11}, {a:1, b:44});\n  test.equal(operations.shift(), ['changed', {a:1}, 1, {a:11}]);\n  test.equal(operations.shift(), ['moved', {a:1}, 1, 0, 'foo']);\n  c.remove({a:2});\n  test.equal(operations.shift(), undefined);\n  c.remove({a:3});\n  test.equal(operations.shift(), ['removed', 'foo', 1, {a:3}]);\n\n  // test stop\n  handle.stop();\n  var idA2 = Random.id();\n  c.insert({_id: idA2, a:2});\n  test.equal(operations.shift(), undefined);\n\n  var cursor = c.find({}, {fields: {a: 1, _id: 0}});\n  test.throws(function () {\n    cursor.observeChanges({added: function () {}});\n  });\n  test.throws(function () {\n    cursor.observe({added: function () {}});\n  });\n\n  // test initial inserts (and backwards sort)\n  handle = c.find({}, {sort: {a: -1}, fields: { a: 1 } }).observe(cbs);\n  test.equal(operations.shift(), ['added', {a:2}, 0, null]);\n  test.equal(operations.shift(), ['added', {a:1}, 1, null]);\n  handle.stop();\n\n  // test _suppress_initial\n  handle = c.find({}, {sort: {a: -1}, fields: { a: 1 }}).observe(_.extend(cbs, {_suppress_initial: true}));\n  test.equal(operations.shift(), undefined);\n  c.insert({a:100, b: { foo: \"bar\" }});\n  test.equal(operations.shift(), ['added', {a:100}, 0, idA2]);\n  handle.stop();\n\n  // test skip and limit.\n  c.remove({});\n  handle = c.find({}, {sort: {a: 1}, skip: 1, limit: 2, fields: { 'blacklisted': 0 }}).observe(cbs);\n  test.equal(operations.shift(), undefined);\n  c.insert({a:1, blacklisted:1324});\n  test.equal(operations.shift(), undefined);\n  c.insert({_id: 'foo', a:2, blacklisted:[\"something\"]});\n  test.equal(operations.shift(), ['added', {a:2}, 0, null]);\n  c.insert({a:3, blacklisted: { 2: 3 }});\n  test.equal(operations.shift(), ['added', {a:3}, 1, null]);\n  c.insert({a:4, blacklisted: 6});\n  test.equal(operations.shift(), undefined);\n  c.update({a:1}, {a:0, blacklisted:4444});\n  test.equal(operations.shift(), undefined);\n  c.update({a:0}, {a:5, blacklisted:11111});\n  test.equal(operations.shift(), ['removed', 'foo', 0, {a:2}]);\n  test.equal(operations.shift(), ['added', {a:4}, 1, null]);\n  c.update({a:3}, {a:3.5, blacklisted:333.4444});\n  test.equal(operations.shift(), ['changed', {a:3.5}, 0, {a:3}]);\n  handle.stop();\n\n  // test _no_indices\n\n  c.remove({});\n  handle = c.find({}, {sort: {a: 1}, fields: { a: 1 }}).observe(_.extend(cbs, {_no_indices: true}));\n  c.insert({_id: 'foo', a:1, zoo: \"crazy\"});\n  test.equal(operations.shift(), ['added', {a:1}, -1, null]);\n  c.update({a:1}, {$set: {a: 2, foobar: \"player\"}});\n  test.equal(operations.shift(), ['changed', {a:2}, -1, {a:1}]);\n  c.insert({a:10, b:123.45});\n  test.equal(operations.shift(), ['added', {a:10}, -1, null]);\n  c.update({}, {$inc: {a: 1, b:2}}, {multi: true});\n  test.equal(operations.shift(), ['changed', {a:3}, -1, {a:2}]);\n  test.equal(operations.shift(), ['changed', {a:11}, -1, {a:10}]);\n  c.update({a:11, b:125.45}, {a:1, b:444});\n  test.equal(operations.shift(), ['changed', {a:1}, -1, {a:11}]);\n  test.equal(operations.shift(), ['moved', {a:1}, -1, -1, 'foo']);\n  c.remove({a:2});\n  test.equal(operations.shift(), undefined);\n  c.remove({a:3});\n  test.equal(operations.shift(), ['removed', 'foo', -1, {a:3}]);\n  handle.stop();\n});\n\n\nTinytest.add(\"minimongo - ordering\", function (test) {\n  var shortBinary = EJSON.newBinary(1);\n  shortBinary[0] = 128;\n  var longBinary1 = EJSON.newBinary(2);\n  longBinary1[1] = 42;\n  var longBinary2 = EJSON.newBinary(2);\n  longBinary2[1] = 50;\n\n  var date1 = new Date;\n  var date2 = new Date(date1.getTime() + 1000);\n\n  // value ordering\n  assert_ordering(test, LocalCollection._f._cmp, [\n    null,\n    1, 2.2, 3,\n    \"03\", \"1\", \"11\", \"2\", \"a\", \"aaa\",\n    {}, {a: 2}, {a: 3}, {a: 3, b: 4}, {b: 4}, {b: 4, a: 3},\n    {b: {}}, {b: [1, 2, 3]}, {b: [1, 2, 4]},\n    [], [1, 2], [1, 2, 3], [1, 2, 4], [1, 2, \"4\"], [1, 2, [4]],\n    shortBinary, longBinary1, longBinary2,\n    new MongoID.ObjectID(\"1234567890abcd1234567890\"),\n    new MongoID.ObjectID(\"abcd1234567890abcd123456\"),\n    false, true,\n    date1, date2\n  ]);\n\n  // document ordering under a sort specification\n  var verify = function (sorts, docs) {\n    _.each(_.isArray(sorts) ? sorts : [sorts], function (sort) {\n      var sorter = new Minimongo.Sorter(sort);\n      assert_ordering(test, sorter.getComparator(), docs);\n    });\n  };\n\n  // note: [] doesn't sort with \"arrays\", it sorts as \"undefined\". the position\n  // of arrays in _typeorder only matters for things like $lt. (This behavior\n  // verified with MongoDB 2.2.1.) We don't define the relative order of {a: []}\n  // and {c: 1} is undefined (MongoDB does seem to care but it's not clear how\n  // or why).\n  verify([{\"a\" : 1}, [\"a\"], [[\"a\", \"asc\"]]],\n         [{a: []}, {a: 1}, {a: {}}, {a: true}]);\n  verify([{\"a\" : 1}, [\"a\"], [[\"a\", \"asc\"]]],\n         [{c: 1}, {a: 1}, {a: {}}, {a: true}]);\n  verify([{\"a\" : -1}, [[\"a\", \"desc\"]]],\n         [{a: true}, {a: {}}, {a: 1}, {c: 1}]);\n  verify([{\"a\" : -1}, [[\"a\", \"desc\"]]],\n         [{a: true}, {a: {}}, {a: 1}, {a: []}]);\n\n  verify([{\"a\" : 1, \"b\": -1}, [\"a\", [\"b\", \"desc\"]],\n          [[\"a\", \"asc\"], [\"b\", \"desc\"]]],\n         [{c: 1}, {a: 1, b: 3}, {a: 1, b: 2}, {a: 2, b: 0}]);\n\n  verify([{\"a\" : 1, \"b\": 1}, [\"a\", \"b\"],\n          [[\"a\", \"asc\"], [\"b\", \"asc\"]]],\n         [{c: 1}, {a: 1, b: 2}, {a: 1, b: 3}, {a: 2, b: 0}]);\n\n  test.throws(function () {\n    new Minimongo.Sorter(\"a\");\n  });\n\n  test.throws(function () {\n    new Minimongo.Sorter(123);\n  });\n\n  // We don't support $natural:1 (since we don't actually have Mongo's on-disk\n  // ordering available!)\n  test.throws(function () {\n    new Minimongo.Sorter({$natural: 1});\n  });\n\n  // No sort spec implies everything equal.\n  test.equal(new Minimongo.Sorter({}).getComparator()({a:1}, {a:2}), 0);\n\n  // All sorts of array edge cases!\n  // Increasing sort sorts by the smallest element it finds; 1 < 2.\n  verify({a: 1}, [\n    {a: [1, 10, 20]},\n    {a: [5, 2, 99]}\n  ]);\n  // Decreasing sorts by largest it finds; 99 > 20.\n  verify({a: -1}, [\n    {a: [5, 2, 99]},\n    {a: [1, 10, 20]}\n  ]);\n  // Can also sort by specific array indices.\n  verify({'a.1': 1}, [\n    {a: [5, 2, 99]},\n    {a: [1, 10, 20]}\n  ]);\n  // We do NOT expand sub-arrays, so the minimum in the second doc is 5, not\n  // -20. (Numbers always sort before arrays.)\n  verify({a: 1}, [\n    {a: [1, [10, 15], 20]},\n    {a: [5, [-5, -20], 18]}\n  ]);\n  // The maximum in each of these is the array, since arrays are \"greater\" than\n  // numbers. And [10, 15] is greater than [-5, -20].\n  verify({a: -1}, [\n    {a: [1, [10, 15], 20]},\n    {a: [5, [-5, -20], 18]}\n  ]);\n  // 'a.0' here ONLY means \"first element of a\", not \"first element of something\n  // found in a\", so it CANNOT find the 10 or -5.\n  verify({'a.0': 1}, [\n    {a: [1, [10, 15], 20]},\n    {a: [5, [-5, -20], 18]}\n  ]);\n  verify({'a.0': -1}, [\n    {a: [5, [-5, -20], 18]},\n    {a: [1, [10, 15], 20]}\n  ]);\n  // Similarly, this is just comparing [-5,-20] to [10, 15].\n  verify({'a.1': 1}, [\n    {a: [5, [-5, -20], 18]},\n    {a: [1, [10, 15], 20]}\n  ]);\n  verify({'a.1': -1}, [\n    {a: [1, [10, 15], 20]},\n    {a: [5, [-5, -20], 18]}\n  ]);\n  // Here we are just comparing [10,15] directly to [19,3] (and NOT also\n  // iterating over the numbers; this is implemented by setting dontIterate in\n  // makeLookupFunction).  So [10,15]<[19,3] even though 3 is the smallest\n  // number you can find there.\n  verify({'a.1': 1}, [\n    {a: [1, [10, 15], 20]},\n    {a: [5, [19, 3], 18]}\n  ]);\n  verify({'a.1': -1}, [\n    {a: [5, [19, 3], 18]},\n    {a: [1, [10, 15], 20]}\n  ]);\n  // Minimal elements are 1 and 5.\n  verify({a: 1}, [\n    {a: [1, [10, 15], 20]},\n    {a: [5, [19, 3], 18]}\n  ]);\n  // Maximal elements are [19,3] and [10,15] (because arrays sort higher than\n  // numbers), even though there's a 20 floating around.\n  verify({a: -1}, [\n    {a: [5, [19, 3], 18]},\n    {a: [1, [10, 15], 20]}\n  ]);\n  // Maximal elements are [10,15] and [3,19].  [10,15] is bigger even though 19\n  // is the biggest number in them, because array comparison is lexicographic.\n  verify({a: -1}, [\n    {a: [1, [10, 15], 20]},\n    {a: [5, [3, 19], 18]}\n  ]);\n\n  // (0,4) < (0,5), so they go in this order.  It's not correct to consider\n  // (0,3) as a sort key for the second document because they come from\n  // different a-branches.\n  verify({'a.x': 1, 'a.y': 1}, [\n    {a: [{x: 0, y: 4}]},\n    {a: [{x: 0, y: 5}, {x: 1, y: 3}]}\n  ]);\n\n  verify({'a.0.s': 1}, [\n    {a: [ {s: 1} ]},\n    {a: [ {s: 2} ]}\n  ]);\n});\n\nTinytest.add(\"minimongo - sort\", function (test) {\n  var c = new LocalCollection();\n  for (var i = 0; i < 50; i++)\n    for (var j = 0; j < 2; j++)\n      c.insert({a: i, b: j, _id: i + \"_\" + j});\n\n  test.equal(\n    c.find({a: {$gt: 10}}, {sort: {b: -1, a: 1}, limit: 5}).fetch(), [\n      {a: 11, b: 1, _id: \"11_1\"},\n      {a: 12, b: 1, _id: \"12_1\"},\n      {a: 13, b: 1, _id: \"13_1\"},\n      {a: 14, b: 1, _id: \"14_1\"},\n      {a: 15, b: 1, _id: \"15_1\"}]);\n\n  test.equal(\n    c.find({a: {$gt: 10}}, {sort: {b: -1, a: 1}, skip: 3, limit: 5}).fetch(), [\n      {a: 14, b: 1, _id: \"14_1\"},\n      {a: 15, b: 1, _id: \"15_1\"},\n      {a: 16, b: 1, _id: \"16_1\"},\n      {a: 17, b: 1, _id: \"17_1\"},\n      {a: 18, b: 1, _id: \"18_1\"}]);\n\n  test.equal(\n    c.find({a: {$gte: 20}}, {sort: {a: 1, b: -1}, skip: 50, limit: 5}).fetch(), [\n      {a: 45, b: 1, _id: \"45_1\"},\n      {a: 45, b: 0, _id: \"45_0\"},\n      {a: 46, b: 1, _id: \"46_1\"},\n      {a: 46, b: 0, _id: \"46_0\"},\n      {a: 47, b: 1, _id: \"47_1\"}]);\n});\n\nTinytest.add(\"minimongo - subkey sort\", function (test) {\n  var c = new LocalCollection();\n\n  // normal case\n  c.insert({a: {b: 2}});\n  c.insert({a: {b: 1}});\n  c.insert({a: {b: 3}});\n  test.equal(\n    _.pluck(c.find({}, {sort: {'a.b': -1}}).fetch(), 'a'),\n    [{b: 3}, {b: 2}, {b: 1}]);\n\n  // isn't an object\n  c.insert({a: 1});\n  test.equal(\n    _.pluck(c.find({}, {sort: {'a.b': 1}}).fetch(), 'a'),\n    [1, {b: 1}, {b: 2}, {b: 3}]);\n\n  // complex object\n  c.insert({a: {b: {c: 1}}});\n  test.equal(\n    _.pluck(c.find({}, {sort: {'a.b': -1}}).fetch(), 'a'),\n    [{b: {c: 1}}, {b: 3}, {b: 2}, {b: 1}, 1]);\n\n  // no such top level prop\n  c.insert({c: 1});\n  test.equal(\n    _.pluck(c.find({}, {sort: {'a.b': -1}}).fetch(), 'a'),\n    [{b: {c: 1}}, {b: 3}, {b: 2}, {b: 1}, 1, undefined]);\n\n  // no such mid level prop. just test that it doesn't throw.\n  test.equal(c.find({}, {sort: {'a.nope.c': -1}}).count(), 6);\n});\n\nTinytest.add(\"minimongo - array sort\", function (test) {\n  var c = new LocalCollection();\n\n  // \"up\" and \"down\" are the indices that the docs should have when sorted\n  // ascending and descending by \"a.x\" respectively. They are not reverses of\n  // each other: when sorting ascending, you use the minimum value you can find\n  // in the document, and when sorting descending, you use the maximum value you\n  // can find. So [1, 4] shows up in the 1 slot when sorting ascending and the 4\n  // slot when sorting descending.\n  //\n  // Similarly, \"selected\" is the index that the doc should have in the query\n  // that sorts ascending on \"a.x\" and selects {'a.x': {$gt: 1}}. In this case,\n  // the 1 in [1, 4] may not be used as a sort key.\n  c.insert({up: 1, down: 1, selected: 2, a: {x: [1, 4]}});\n  c.insert({up: 2, down: 2, selected: 0, a: [{x: [2]}, {x: 3}]});\n  c.insert({up: 0, down: 4,              a: {x: 0}});\n  c.insert({up: 3, down: 3, selected: 1, a: {x: 2.5}});\n  c.insert({up: 4, down: 0, selected: 3, a: {x: 5}});\n\n  // Test that the the documents in \"cursor\" contain values with the name\n  // \"field\" running from 0 to the max value of that name in the collection.\n  var testCursorMatchesField = function (cursor, field) {\n    var fieldValues = [];\n    c.find().forEach(function (doc) {\n      if (_.has(doc, field))\n        fieldValues.push(doc[field]);\n    });\n    test.equal(_.pluck(cursor.fetch(), field),\n               _.range(_.max(fieldValues) + 1));\n  };\n\n  testCursorMatchesField(c.find({}, {sort: {'a.x': 1}}), 'up');\n  testCursorMatchesField(c.find({}, {sort: {'a.x': -1}}), 'down');\n  testCursorMatchesField(c.find({'a.x': {$gt: 1}}, {sort: {'a.x': 1}}),\n                         'selected');\n});\n\nTinytest.add(\"minimongo - sort keys\", function (test) {\n  var keyListToObject = function (keyList) {\n    var obj = {};\n    _.each(keyList, function (key) {\n      obj[EJSON.stringify(key)] = true;\n    });\n    return obj;\n  };\n\n  var testKeys = function (sortSpec, doc, expectedKeyList) {\n    var expectedKeys = keyListToObject(expectedKeyList);\n    var sorter = new Minimongo.Sorter(sortSpec);\n\n    var actualKeyList = [];\n    sorter._generateKeysFromDoc(doc, function (key) {\n      actualKeyList.push(key);\n    });\n    var actualKeys = keyListToObject(actualKeyList);\n    test.equal(actualKeys, expectedKeys);\n  };\n\n  var testParallelError = function (sortSpec, doc) {\n    var sorter = new Minimongo.Sorter(sortSpec);\n    test.throws(function () {\n      sorter._generateKeysFromDoc(doc, function (){});\n    }, /parallel arrays/);\n  };\n\n  // Just non-array fields.\n  testKeys({'a.x': 1, 'a.y': 1},\n           {a: {x: 0, y: 5}},\n           [[0,5]]);\n\n  // Ensure that we don't get [0,3] and [1,5].\n  testKeys({'a.x': 1, 'a.y': 1},\n           {a: [{x: 0, y: 5}, {x: 1, y: 3}]},\n           [[0,5], [1,3]]);\n\n  // Ensure we can combine \"array fields\" with \"non-array fields\".\n  testKeys({'a.x': 1, 'a.y': 1, b: -1},\n           {a: [{x: 0, y: 5}, {x: 1, y: 3}], b: 42},\n           [[0,5,42], [1,3,42]]);\n  testKeys({b: -1, 'a.x': 1, 'a.y': 1},\n           {a: [{x: 0, y: 5}, {x: 1, y: 3}], b: 42},\n           [[42,0,5], [42,1,3]]);\n  testKeys({'a.x': 1, b: -1, 'a.y': 1},\n           {a: [{x: 0, y: 5}, {x: 1, y: 3}], b: 42},\n           [[0,42,5], [1,42,3]]);\n  testKeys({a: 1, b: 1},\n           {a: [1, 2, 3], b: 42},\n           [[1,42], [2,42], [3,42]]);\n\n  // Don't support multiple arrays at the same level.\n  testParallelError({a: 1, b: 1},\n                    {a: [1, 2, 3], b: [42]});\n\n  // We are MORE STRICT than Mongo here; Mongo supports this!\n  // XXX support this too  #NestedArraySort\n  testParallelError({'a.x': 1, 'a.y': 1},\n                    {a: [{x: 1, y: [2, 3]},\n                         {x: 2, y: [4, 5]}]});\n});\n\nTinytest.add(\"minimongo - sort key filter\", function (test) {\n  var testOrder = function (sortSpec, selector, doc1, doc2) {\n    var matcher = new Minimongo.Matcher(selector);\n    var sorter = new Minimongo.Sorter(sortSpec, {matcher: matcher});\n    var comparator = sorter.getComparator();\n    var comparison = comparator(doc1, doc2);\n    test.isTrue(comparison < 0);\n  };\n\n  testOrder({'a.x': 1}, {'a.x': {$gt: 1}},\n            {a: {x: 3}},\n            {a: {x: [1, 4]}});\n  testOrder({'a.x': 1}, {'a.x': {$gt: 0}},\n            {a: {x: [1, 4]}},\n            {a: {x: 3}});\n\n  var keyCompatible = function (sortSpec, selector, key, compatible) {\n    var matcher = new Minimongo.Matcher(selector);\n    var sorter = new Minimongo.Sorter(sortSpec, {matcher: matcher});\n    var actual = sorter._keyCompatibleWithSelector(key);\n    test.equal(actual, compatible);\n  };\n\n  keyCompatible({a: 1}, {a: 5}, [5], true);\n  keyCompatible({a: 1}, {a: 5}, [8], false);\n  keyCompatible({a: 1}, {a: {x: 5}}, [{x: 5}], true);\n  keyCompatible({a: 1}, {a: {x: 5}}, [{x: 5, y: 9}], false);\n  keyCompatible({'a.x': 1}, {a: {x: 5}}, [5], true);\n  // To confirm this:\n  //   > db.x.insert({_id: \"q\", a: [{x:1}, {x:5}], b: 2})\n  //   > db.x.insert({_id: \"w\", a: [{x:5}, {x:10}], b: 1})\n  //   > db.x.find({}).sort({'a.x': 1, b: 1})\n  //   { \"_id\" : \"q\", \"a\" : [  {  \"x\" : 1 },  {  \"x\" : 5 } ], \"b\" : 2 }\n  //   { \"_id\" : \"w\", \"a\" : [  {  \"x\" : 5 },  {  \"x\" : 10 } ], \"b\" : 1 }\n  //   > db.x.find({a: {x:5}}).sort({'a.x': 1, b: 1})\n  //   { \"_id\" : \"q\", \"a\" : [  {  \"x\" : 1 },  {  \"x\" : 5 } ], \"b\" : 2 }\n  //   { \"_id\" : \"w\", \"a\" : [  {  \"x\" : 5 },  {  \"x\" : 10 } ], \"b\" : 1 }\n  //   > db.x.find({'a.x': 5}).sort({'a.x': 1, b: 1})\n  //   { \"_id\" : \"w\", \"a\" : [  {  \"x\" : 5 },  {  \"x\" : 10 } ], \"b\" : 1 }\n  //   { \"_id\" : \"q\", \"a\" : [  {  \"x\" : 1 },  {  \"x\" : 5 } ], \"b\" : 2 }\n  // ie, only the last one manages to trigger the key compatibility code,\n  // not the previous one.  (The \"b\" sort is necessary because when the key\n  // compatibility code *does* kick in, both documents only end up with \"5\"\n  // for the first field as their only sort key, and we need to differentiate\n  // somehow...)\n  keyCompatible({'a.x': 1}, {a: {x: 5}}, [1], true);\n  keyCompatible({'a.x': 1}, {'a.x': 5}, [5], true);\n  keyCompatible({'a.x': 1}, {'a.x': 5}, [1], false);\n\n  // Regex key check.\n  keyCompatible({a: 1}, {a: /^foo+/}, ['foo'], true);\n  keyCompatible({a: 1}, {a: /^foo+/}, ['foooo'], true);\n  keyCompatible({a: 1}, {a: /^foo+/}, ['foooobar'], true);\n  keyCompatible({a: 1}, {a: /^foo+/}, ['afoooo'], false);\n  keyCompatible({a: 1}, {a: /^foo+/}, [''], false);\n  keyCompatible({a: 1}, {a: {$regex: \"^foo+\"}}, ['foo'], true);\n  keyCompatible({a: 1}, {a: {$regex: \"^foo+\"}}, ['foooo'], true);\n  keyCompatible({a: 1}, {a: {$regex: \"^foo+\"}}, ['foooobar'], true);\n  keyCompatible({a: 1}, {a: {$regex: \"^foo+\"}}, ['afoooo'], false);\n  keyCompatible({a: 1}, {a: {$regex: \"^foo+\"}}, [''], false);\n\n  keyCompatible({a: 1}, {a: /^foo+/i}, ['foo'], true);\n  // Key compatibility check appears to be turned off for regexps with flags.\n  keyCompatible({a: 1}, {a: /^foo+/i}, ['bar'], true);\n  keyCompatible({a: 1}, {a: /^foo+/m}, ['bar'], true);\n  keyCompatible({a: 1}, {a: {$regex: \"^foo+\", $options: \"i\"}}, ['bar'], true);\n  keyCompatible({a: 1}, {a: {$regex: \"^foo+\", $options: \"m\"}}, ['bar'], true);\n\n  // Multiple keys!\n  keyCompatible({a: 1, b: 1, c: 1},\n                {a: {$gt: 5}, c: {$lt: 3}}, [6, \"bla\", 2], true);\n  keyCompatible({a: 1, b: 1, c: 1},\n                {a: {$gt: 5}, c: {$lt: 3}}, [6, \"bla\", 4], false);\n  keyCompatible({a: 1, b: 1, c: 1},\n                {a: {$gt: 5}, c: {$lt: 3}}, [3, \"bla\", 1], false);\n  // No filtering is done (ie, all keys are compatible) if the first key isn't\n  // constrained.\n  keyCompatible({a: 1, b: 1, c: 1},\n                {c: {$lt: 3}}, [3, \"bla\", 4], true);\n});\n\nTinytest.add(\"minimongo - sort function\", function (test) {\n  var c = new LocalCollection();\n\n  c.insert({a: 1});\n  c.insert({a: 10});\n  c.insert({a: 5});\n  c.insert({a: 7});\n  c.insert({a: 2});\n  c.insert({a: 4});\n  c.insert({a: 3});\n\n  var sortFunction = function (doc1, doc2) {\n    return doc2.a - doc1.a;\n  };\n\n  test.equal(c.find({}, {sort: sortFunction}).fetch(), c.find({}).fetch().sort(sortFunction));\n  test.notEqual(c.find({}).fetch(), c.find({}).fetch().sort(sortFunction));\n  test.equal(c.find({}, {sort: {a: -1}}).fetch(), c.find({}).fetch().sort(sortFunction));\n});\n\nTinytest.add(\"minimongo - binary search\", function (test) {\n  var forwardCmp = function (a, b) {\n    return a - b;\n  };\n\n  var backwardCmp = function (a, b) {\n    return -1 * forwardCmp(a, b);\n  };\n\n  var checkSearch = function (cmp, array, value, expected, message) {\n    var actual = LocalCollection._binarySearch(cmp, array, value);\n    if (expected != actual) {\n      test.fail({type: \"minimongo-binary-search\",\n                 message: message + \" : Expected index \" + expected +\n                 \" but had \" + actual\n      });\n    }\n  };\n\n  var checkSearchForward = function (array, value, expected, message) {\n    checkSearch(forwardCmp, array, value, expected, message);\n  };\n  var checkSearchBackward = function (array, value, expected, message) {\n    checkSearch(backwardCmp, array, value, expected, message);\n  };\n\n  checkSearchForward([1, 2, 5, 7], 4, 2, \"Inner insert\");\n  checkSearchForward([1, 2, 3, 4], 3, 3, \"Inner insert, equal value\");\n  checkSearchForward([1, 2, 5], 4, 2, \"Inner insert, odd length\");\n  checkSearchForward([1, 3, 5, 6], 9, 4, \"End insert\");\n  checkSearchForward([1, 3, 5, 6], 0, 0, \"Beginning insert\");\n  checkSearchForward([1], 0, 0, \"Single array, less than.\");\n  checkSearchForward([1], 1, 1, \"Single array, equal.\");\n  checkSearchForward([1], 2, 1, \"Single array, greater than.\");\n  checkSearchForward([], 1, 0, \"Empty array\");\n  checkSearchForward([1, 1, 1, 2, 2, 2, 2], 1, 3, \"Highly degenerate array, lower\");\n  checkSearchForward([1, 1, 1, 2, 2, 2, 2], 2, 7, \"Highly degenerate array, upper\");\n  checkSearchForward([2, 2, 2, 2, 2, 2, 2], 1, 0, \"Highly degenerate array, lower\");\n  checkSearchForward([2, 2, 2, 2, 2, 2, 2], 2, 7, \"Highly degenerate array, equal\");\n  checkSearchForward([2, 2, 2, 2, 2, 2, 2], 3, 7, \"Highly degenerate array, upper\");\n\n  checkSearchBackward([7, 5, 2, 1], 4, 2, \"Backward: Inner insert\");\n  checkSearchBackward([4, 3, 2, 1], 3, 2, \"Backward: Inner insert, equal value\");\n  checkSearchBackward([5, 2, 1], 4, 1, \"Backward: Inner insert, odd length\");\n  checkSearchBackward([6, 5, 3, 1], 9, 0, \"Backward: Beginning insert\");\n  checkSearchBackward([6, 5, 3, 1], 0, 4, \"Backward: End insert\");\n  checkSearchBackward([1], 0, 1, \"Backward: Single array, less than.\");\n  checkSearchBackward([1], 1, 1, \"Backward: Single array, equal.\");\n  checkSearchBackward([1], 2, 0, \"Backward: Single array, greater than.\");\n  checkSearchBackward([], 1, 0, \"Backward: Empty array\");\n  checkSearchBackward([2, 2, 2, 2, 1, 1, 1], 1, 7, \"Backward: Degenerate array, lower\");\n  checkSearchBackward([2, 2, 2, 2, 1, 1, 1], 2, 4, \"Backward: Degenerate array, upper\");\n  checkSearchBackward([2, 2, 2, 2, 2, 2, 2], 1, 7, \"Backward: Highly degenerate array, upper\");\n  checkSearchBackward([2, 2, 2, 2, 2, 2, 2], 2, 7, \"Backward: Highly degenerate array, upper\");\n  checkSearchBackward([2, 2, 2, 2, 2, 2, 2], 3, 0, \"Backward: Highly degenerate array, upper\");\n});\n\nTinytest.add(\"minimongo - modify\", function (test) {\n  var modifyWithQuery = function (doc, query, mod, expected) {\n    var coll = new LocalCollection;\n    coll.insert(doc);\n    // The query is relevant for 'a.$.b'.\n    coll.update(query, mod);\n    var actual = coll.findOne();\n    delete actual._id;  // added by insert\n\n    if (typeof expected === \"function\") {\n      expected(actual, EJSON.stringify({input: doc, mod: mod}));\n    } else {\n      test.equal(actual, expected, EJSON.stringify({input: doc, mod: mod}));\n    }\n  };\n  var modify = function (doc, mod, expected) {\n    modifyWithQuery(doc, {}, mod, expected);\n  };\n  var exceptionWithQuery = function (doc, query, mod) {\n    var coll = new LocalCollection;\n    coll.insert(doc);\n    test.throws(function () {\n      coll.update(query, mod);\n    });\n  };\n  var exception = function (doc, mod) {\n    exceptionWithQuery(doc, {}, mod);\n  };\n\n  var upsert = function (query, mod, expected) {\n    var coll = new LocalCollection;\n\n    var result = coll.upsert(query, mod);\n\n    var actual = coll.findOne();\n\n    if (expected._id) {\n      test.equal(result.insertedId, expected._id);\n    }\n    else {\n      delete actual._id;\n    }\n\n    test.equal(actual, expected);\n  };\n\n  var upsertException = function (query, mod) {\n    var coll = new LocalCollection;\n    test.throws(function(){\n      coll.upsert(query, mod);\n    });\n  };\n\n  // document replacement\n  modify({}, {}, {});\n  modify({a: 12}, {}, {}); // tested against mongodb\n  modify({a: 12}, {a: 13}, {a:13});\n  modify({a: 12, b: 99}, {a: 13}, {a:13});\n  exception({a: 12}, {a: 13, $set: {b: 13}});\n  exception({a: 12}, {$set: {b: 13}, a: 13});\n\n  exception({a: 12}, {$a: 13}); //invalid operator\n  exception({a: 12}, {b:{$a: 13}});\n  exception({a: 12}, {b:{'a.b': 13}});\n  exception({a: 12}, {b:{'\\0a': 13}});\n\n  // keys\n  modify({}, {$set: {'a': 12}}, {a: 12});\n  modify({}, {$set: {'a.b': 12}}, {a: {b: 12}});\n  modify({}, {$set: {'a.b.c': 12}}, {a: {b: {c: 12}}});\n  modify({a: {d: 99}}, {$set: {'a.b.c': 12}}, {a: {d: 99, b: {c: 12}}});\n  modify({}, {$set: {'a.b.3.c': 12}}, {a: {b: {3: {c: 12}}}});\n  modify({a: {b: []}}, {$set: {'a.b.3.c': 12}}, {\n    a: {b: [null, null, null, {c: 12}]}});\n  exception({a: [null, null, null]}, {$set: {'a.1.b': 12}});\n  exception({a: [null, 1, null]}, {$set: {'a.1.b': 12}});\n  exception({a: [null, \"x\", null]}, {$set: {'a.1.b': 12}});\n  exception({a: [null, [], null]}, {$set: {'a.1.b': 12}});\n  modify({a: [null, null, null]}, {$set: {'a.3.b': 12}}, {\n    a: [null, null, null, {b: 12}]});\n  exception({a: []}, {$set: {'a.b': 12}});\n  exception({a: 12}, {$set: {'a.b': 99}}); // tested on mongo\n  exception({a: 'x'}, {$set: {'a.b': 99}});\n  exception({a: true}, {$set: {'a.b': 99}});\n  exception({a: null}, {$set: {'a.b': 99}});\n  modify({a: {}}, {$set: {'a.3': 12}}, {a: {'3': 12}});\n  modify({a: []}, {$set: {'a.3': 12}}, {a: [null, null, null, 12]});\n  exception({}, {$set: {'': 12}}); // tested on mongo\n  exception({}, {$set: {'.': 12}}); // tested on mongo\n  exception({}, {$set: {'a.': 12}}); // tested on mongo\n  exception({}, {$set: {'. ': 12}}); // tested on mongo\n  exception({}, {$inc: {'... ': 12}}); // tested on mongo\n  exception({}, {$set: {'a..b': 12}}); // tested on mongo\n  modify({a: [1,2,3]}, {$set: {'a.01': 99}}, {a: [1, 99, 3]});\n  modify({a: [1,{a: 98},3]}, {$set: {'a.01.b': 99}}, {a: [1,{a:98, b: 99},3]});\n  modify({}, {$set: {'2.a.b': 12}}, {'2': {'a': {'b': 12}}}); // tested\n  exception({x: []}, {$set: {'x.2..a': 99}});\n  modify({x: [null, null]}, {$set: {'x.2.a': 1}}, {x: [null, null, {a: 1}]});\n  exception({x: [null, null]}, {$set: {'x.1.a': 1}});\n\n  // a.$.b\n  modifyWithQuery({a: [{x: 2}, {x: 4}]}, {'a.x': 4}, {$set: {'a.$.z': 9}},\n                  {a: [{x: 2}, {x: 4, z: 9}]});\n  exception({a: [{x: 2}, {x: 4}]}, {$set: {'a.$.z': 9}});\n  exceptionWithQuery({a: [{x: 2}, {x: 4}], b: 5}, {b: 5}, {$set: {'a.$.z': 9}});\n  // can't have two $\n  exceptionWithQuery({a: [{x: [2]}]}, {'a.x': 2}, {$set: {'a.$.x.$': 9}});\n  modifyWithQuery({a: [5, 6, 7]}, {a: 6}, {$set: {'a.$': 9}}, {a: [5, 9, 7]});\n  modifyWithQuery({a: [{b: [{c: 9}, {c: 10}]}, {b: {c: 11}}]}, {'a.b.c': 10},\n                  {$unset: {'a.$.b': 1}}, {a: [{}, {b: {c: 11}}]});\n  modifyWithQuery({a: [{b: [{c: 9}, {c: 10}]}, {b: {c: 11}}]}, {'a.b.c': 11},\n                  {$unset: {'a.$.b': 1}},\n                  {a: [{b: [{c: 9}, {c: 10}]}, {}]});\n  modifyWithQuery({a: [1]}, {'a.0': 1}, {$set: {'a.$': 5}}, {a: [5]});\n  modifyWithQuery({a: [9]}, {a: {$mod: [2, 1]}}, {$set: {'a.$': 5}}, {a: [5]});\n  // Negatives don't set '$'.\n  exceptionWithQuery({a: [1]}, {$not: {a: 2}}, {$set: {'a.$': 5}});\n  exceptionWithQuery({a: [1]}, {'a.0': {$ne: 2}}, {$set: {'a.$': 5}});\n  // One $or clause works.\n  modifyWithQuery({a: [{x: 2}, {x: 4}]},\n                  {$or: [{'a.x': 4}]}, {$set: {'a.$.z': 9}},\n                  {a: [{x: 2}, {x: 4, z: 9}]});\n  // More $or clauses throw.\n  exceptionWithQuery({a: [{x: 2}, {x: 4}]},\n                     {$or: [{'a.x': 4}, {'a.x': 4}]},\n                     {$set: {'a.$.z': 9}});\n  // $and uses the last one.\n  modifyWithQuery({a: [{x: 1}, {x: 3}]},\n                  {$and: [{'a.x': 1}, {'a.x': 3}]},\n                  {$set: {'a.$.x': 5}},\n                  {a: [{x: 1}, {x: 5}]});\n  modifyWithQuery({a: [{x: 1}, {x: 3}]},\n                  {$and: [{'a.x': 3}, {'a.x': 1}]},\n                  {$set: {'a.$.x': 5}},\n                  {a: [{x: 5}, {x: 3}]});\n  // Same goes for the implicit AND of a document selector.\n  modifyWithQuery({a: [{x: 1}, {y: 3}]},\n                  {'a.x': 1, 'a.y': 3},\n                  {$set: {'a.$.z': 5}},\n                  {a: [{x: 1}, {y: 3, z: 5}]});\n  modifyWithQuery({a: [{x: 1}, {y: 1}, {x: 1, y: 1}]},\n                  {a: {$elemMatch: {x: 1, y: 1}}},\n                  {$set: {'a.$.x': 2}},\n                  {a: [{x: 1}, {y: 1}, {x: 2, y: 1}]});\n  modifyWithQuery({a: [{b: [{x: 1}, {y: 1}, {x: 1, y: 1}]}]},\n                  {'a.b': {$elemMatch: {x: 1, y: 1}}},\n                  {$set: {'a.$.b': 3}},\n                  {a: [{b: 3}]});\n  // with $near, make sure it does not find the closest one (#3599)\n  modifyWithQuery({a: []},\n                  {'a.b': {$near: [5, 5]}},\n                  {$set: {'a.$.b': 'k'}},\n                  {\"a\":[]});\n  modifyWithQuery({a: [{b: [ [3,3], [4,4] ]}]},\n                  {'a.b': {$near: [5, 5]}},\n                  {$set: {'a.$.b': 'k'}},\n                  {\"a\":[{\"b\":\"k\"}]});\n  modifyWithQuery({a: [{b: [1,1]},\n                       {b: [ [3,3], [4,4] ]},\n                       {b: [9,9]}]},\n                  {'a.b': {$near: [5, 5]}},\n                  {$set: {'a.$.b': 'k'}},\n                  {\"a\":[{\"b\":\"k\"},{\"b\":[[3,3],[4,4]]},{\"b\":[9,9]}]}); \n  modifyWithQuery({a: [{b: [1,1]},\n                       {b: [ [3,3], [4,4] ]},\n                       {b: [9,9]}]},\n                  {'a.b': {$near: [9, 9], $maxDistance: 1}},\n                  {$set: {'a.$.b': 'k'}},\n                  {\"a\":[{\"b\":\"k\"},{\"b\":[[3,3],[4,4]]},{\"b\":[9,9]}]}); \n  modifyWithQuery({a: [{b: [1,1]},\n                       {b: [ [3,3], [4,4] ]},\n                       {b: [9,9]}]},\n                  {'a.b': {$near: [9, 9]}},\n                  {$set: {'a.$.b': 'k'}},\n                  {\"a\":[{\"b\":\"k\"},{\"b\":[[3,3],[4,4]]},{\"b\":[9,9]}]});\n  modifyWithQuery({a: [{b: [9,9]},\n                       {b: [ [3,3], [4,4] ]},\n                       {b: [9,9]}]},\n                  {'a.b': {$near: [9, 9]}},\n                  {$set: {'a.$.b': 'k'}},\n                  {\"a\":[{\"b\":\"k\"},{\"b\":[[3,3],[4,4]]},{\"b\":[9,9]}]});\n  modifyWithQuery({a: [{b:[4,3]},\n                       {c: [1,1]}]},\n                  {'a.c': {$near: [1, 1]}},\n                  {$set: {'a.$.c': 'k'}},\n                  {\"a\":[{\"c\": \"k\", \"b\":[4,3]},{\"c\":[1,1]}]});\n  modifyWithQuery({a: [{c: [9,9]},\n                       {b: [ [3,3], [4,4] ]},\n                       {b: [1,1]}]},\n                  {'a.b': {$near: [1, 1]}},\n                  {$set: {'a.$.b': 'k'}},\n                  {\"a\":[{\"c\": [9,9], \"b\":\"k\"},{\"b\": [ [3,3], [4,4]]},{\"b\":[1,1]}]});  \n  modifyWithQuery({a: [{c: [9,9], b:[4,3]},\n                       {b: [ [3,3], [4,4] ]},\n                       {b: [1,1]}]},\n                  {'a.b': {$near: [1, 1]}},\n                  {$set: {'a.$.b': 'k'}},\n                  {\"a\":[{\"c\": [9,9], \"b\":\"k\"},{\"b\": [ [3,3], [4,4]]},{\"b\":[1,1]}]});\n\n  // $inc\n  modify({a: 1, b: 2}, {$inc: {a: 10}}, {a: 11, b: 2});\n  modify({a: 1, b: 2}, {$inc: {c: 10}}, {a: 1, b: 2, c: 10});\n  exception({a: 1}, {$inc: {a: '10'}});\n  exception({a: 1}, {$inc: {a: true}});\n  exception({a: 1}, {$inc: {a: [10]}});\n  exception({a: '1'}, {$inc: {a: 10}});\n  exception({a: [1]}, {$inc: {a: 10}});\n  exception({a: {}}, {$inc: {a: 10}});\n  exception({a: false}, {$inc: {a: 10}});\n  exception({a: null}, {$inc: {a: 10}});\n  modify({a: [1, 2]}, {$inc: {'a.1': 10}}, {a: [1, 12]});\n  modify({a: [1, 2]}, {$inc: {'a.2': 10}}, {a: [1, 2, 10]});\n  modify({a: [1, 2]}, {$inc: {'a.3': 10}}, {a: [1, 2, null, 10]});\n  modify({a: {b: 2}}, {$inc: {'a.b': 10}}, {a: {b: 12}});\n  modify({a: {b: 2}}, {$inc: {'a.c': 10}}, {a: {b: 2, c: 10}});\n  exception({}, {$inc: {_id: 1}});\n\n  // $currentDate\n  modify({}, {$currentDate: {a: true}}, (result, msg) => { test.instanceOf(result.a,Date,msg) });\n  modify({}, {$currentDate: {a: {$type: \"date\"}}}, (result, msg) => { test.instanceOf(result.a,Date,msg) });\n  exception({}, {$currentDate: {a: false}});\n  exception({}, {$currentDate: {a: {}}});\n  exception({}, {$currentDate: {a: {$type: \"timestamp\"}}});\n\n  // $min\n  modify({a: 1, b: 2}, {$min: {b: 1}}, {a: 1, b: 1});\n  modify({a: 1, b: 2}, {$min: {b: 3}}, {a: 1, b: 2});\n  modify({a: 1, b: 2}, {$min: {c: 10}}, {a: 1, b: 2, c: 10});\n  exception({a: 1}, {$min: {a: '10'}});\n  exception({a: 1}, {$min: {a: true}});\n  exception({a: 1}, {$min: {a: [10]}});\n  exception({a: '1'}, {$min: {a: 10}});\n  exception({a: [1]}, {$min: {a: 10}});\n  exception({a: {}}, {$min: {a: 10}});\n  exception({a: false}, {$min: {a: 10}});\n  exception({a: null}, {$min: {a: 10}});\n  modify({a: [1, 2]}, {$min: {'a.1': 1}}, {a: [1, 1]});\n  modify({a: [1, 2]}, {$min: {'a.1': 3}}, {a: [1, 2]});\n  modify({a: [1, 2]}, {$min: {'a.2': 10}}, {a: [1, 2, 10]});\n  modify({a: [1, 2]}, {$min: {'a.3': 10}}, {a: [1, 2, null, 10]});\n  modify({a: {b: 2}}, {$min: {'a.b': 1}}, {a: {b: 1}});\n  modify({a: {b: 2}}, {$min: {'a.c': 10}}, {a: {b: 2, c: 10}});\n  exception({}, {$min: {_id: 1}});\n\n  // $max\n  modify({a: 1, b: 2}, {$max: {b: 1}}, {a: 1, b: 2});\n  modify({a: 1, b: 2}, {$max: {b: 3}}, {a: 1, b: 3});\n  modify({a: 1, b: 2}, {$max: {c: 10}}, {a: 1, b: 2, c: 10});\n  exception({a: 1}, {$max: {a: '10'}});\n  exception({a: 1}, {$max: {a: true}});\n  exception({a: 1}, {$max: {a: [10]}});\n  exception({a: '1'}, {$max: {a: 10}});\n  exception({a: [1]}, {$max: {a: 10}});\n  exception({a: {}}, {$max: {a: 10}});\n  exception({a: false}, {$max: {a: 10}});\n  exception({a: null}, {$max: {a: 10}});\n  modify({a: [1, 2]}, {$max: {'a.1': 3}}, {a: [1, 3]});\n  modify({a: [1, 2]}, {$max: {'a.1': 1}}, {a: [1, 2]});\n  modify({a: [1, 2]}, {$max: {'a.2': 10}}, {a: [1, 2, 10]});\n  modify({a: [1, 2]}, {$max: {'a.3': 10}}, {a: [1, 2, null, 10]});\n  modify({a: {b: 2}}, {$max: {'a.b': 3}}, {a: {b: 3}});\n  modify({a: {b: 2}}, {$max: {'a.c': 10}}, {a: {b: 2, c: 10}});\n  exception({}, {$max: {_id: 1}});\n\n  // $set\n  modify({a: 1, b: 2}, {$set: {a: 10}}, {a: 10, b: 2});\n  modify({a: 1, b: 2}, {$set: {c: 10}}, {a: 1, b: 2, c: 10});\n  modify({a: 1, b: 2}, {$set: {a: {c: 10}}}, {a: {c: 10}, b: 2});\n  modify({a: [1, 2], b: 2}, {$set: {a: [3, 4]}}, {a: [3, 4], b: 2});\n  modify({a: [1, 2, 3], b: 2}, {$set: {'a.1': [3, 4]}},\n         {a: [1, [3, 4], 3], b:2});\n  modify({a: [1], b: 2}, {$set: {'a.1': 9}}, {a: [1, 9], b: 2});\n  modify({a: [1], b: 2}, {$set: {'a.2': 9}}, {a: [1, null, 9], b: 2});\n  modify({a: {b: 1}}, {$set: {'a.c': 9}}, {a: {b: 1, c: 9}});\n  modify({}, {$set: {'x._id': 4}}, {x: {_id: 4}});\n  exception({}, {$set: {_id: 4}});\n  exception({_id: 4}, {$set: {_id: 4}});  // even not-changing _id is bad\n  //restricted field names\n  exception({a:{}}, {$set:{a:{$a:1}}});\n  exception({ a: {} }, { $set: { a: { c:\n              [{ b: { $a: 1 } }] } } });\n  exception({a:{}}, {$set:{a:{'\\0a':1}}});\n  exception({a:{}}, {$set:{a:{'a.b':1}}});\n\n  // $unset\n  modify({}, {$unset: {a: 1}}, {});\n  modify({a: 1}, {$unset: {a: 1}}, {});\n  modify({a: 1, b: 2}, {$unset: {a: 1}}, {b: 2});\n  modify({a: 1, b: 2}, {$unset: {a: 0}}, {b: 2});\n  modify({a: 1, b: 2}, {$unset: {a: false}}, {b: 2});\n  modify({a: 1, b: 2}, {$unset: {a: null}}, {b: 2});\n  modify({a: 1, b: 2}, {$unset: {a: [1]}}, {b: 2});\n  modify({a: 1, b: 2}, {$unset: {a: {}}}, {b: 2});\n  modify({a: {b: 2, c: 3}}, {$unset: {'a.b': 1}}, {a: {c: 3}});\n  modify({a: [1, 2, 3]}, {$unset: {'a.1': 1}}, {a: [1, null, 3]}); // tested\n  modify({a: [1, 2, 3]}, {$unset: {'a.2': 1}}, {a: [1, 2, null]}); // tested\n  modify({a: [1, 2, 3]}, {$unset: {'a.x': 1}}, {a: [1, 2, 3]}); // tested\n  modify({a: {b: 1}}, {$unset: {'a.b.c.d': 1}}, {a: {b: 1}});\n  modify({a: {b: 1}}, {$unset: {'a.x.c.d': 1}}, {a: {b: 1}});\n  modify({a: {b: {c: 1}}}, {$unset: {'a.b.c': 1}}, {a: {b: {}}});\n  exception({}, {$unset: {_id: 1}});\n\n  // $push\n  modify({}, {$push: {a: 1}}, {a: [1]});\n  modify({a: []}, {$push: {a: 1}}, {a: [1]});\n  modify({a: [1]}, {$push: {a: 2}}, {a: [1, 2]});\n  exception({a: true}, {$push: {a: 1}});\n  modify({a: [1]}, {$push: {a: [2]}}, {a: [1, [2]]});\n  modify({a: []}, {$push: {'a.1': 99}}, {a: [null, [99]]}); // tested\n  modify({a: {}}, {$push: {'a.x': 99}}, {a: {x: [99]}});\n  modify({}, {$push: {a: {$each: [1, 2, 3]}}},\n         {a: [1, 2, 3]});\n  modify({a: []}, {$push: {a: {$each: [1, 2, 3]}}},\n         {a: [1, 2, 3]});\n  modify({a: [true]}, {$push: {a: {$each: [1, 2, 3]}}},\n         {a: [true, 1, 2, 3]});\n  modify({a: [true]}, {$push: {a: {$each: [1, 2, 3], $slice: -2}}},\n         {a: [2, 3]});\n  modify({a: [false, true]}, {$push: {a: {$each: [1], $slice: -2}}},\n         {a: [true, 1]});\n  modify(\n    {a: [{x: 3}, {x: 1}]},\n    {$push: {a: {\n      $each: [{x: 4}, {x: 2}],\n      $slice: -2,\n      $sort: {x: 1}\n    }}},\n    {a: [{x: 3}, {x: 4}]});\n  modify({}, {$push: {a: {$each: [1, 2, 3], $slice: 0}}}, {a: []});\n  modify({a: [1, 2]}, {$push: {a: {$each: [1, 2, 3], $slice: 0}}}, {a: []});\n  // $push with $position modifier\n  // No negative number for $position\n  exception({a: []}, {$push: {a: {$each: [0], $position: -1}}});\n  modify({a: [1, 2]}, {$push: {a: {$each: [0], $position: 0}}},\n    {a: [0, 1, 2]});\n  modify({a: [1, 2]}, {$push: {a: {$each: [-1, 0], $position: 0}}},\n    {a: [-1, 0, 1, 2]});\n  modify({a: [1, 3]}, {$push: {a: {$each: [2], $position: 1}}}, {a: [1, 2, 3]});\n  modify({a: [1, 4]}, {$push: {a: {$each: [2, 3], $position: 1}}},\n    {a: [1, 2, 3, 4]});\n  modify({a: [1, 2]}, {$push: {a: {$each: [3], $position: 3}}}, {a: [1, 2, 3]});\n  modify({a: [1, 2]}, {$push: {a: {$each: [3], $position: 99}}},\n    {a: [1, 2, 3]});\n  modify({a: [1, 2]}, {$push: {a: {$each: [3], $position: 99, $slice: -2}}},\n    {a: [2, 3]});\n  modify(\n    {a: [{x: 1}, {x: 2}]},\n    {$push: {a: {$each: [{x: 3}], $position: 0, $sort: {x: 1}, $slice: -3}}},\n    {a: [{x: 1}, {x: 2}, {x: 3}]}\n  );\n  modify(\n    {a: [{x: 1}, {x: 2}]},\n    {$push: {a: {$each: [{x: 3}], $position: 0, $sort: {x: 1}, $slice: 0}}},\n    {a: []}\n  );\n  //restricted field names\n  exception({}, {$push: {$a: 1}});\n  exception({}, {$push: {'\\0a': 1}});\n  exception({}, {$push: {a: {$a:1}}});\n  exception({}, {$push: {a: {$each: [{$a:1}]}}});\n  exception({}, {$push: {a: {$each: [{\"a.b\":1}]}}});\n  exception({}, {$push: {a: {$each: [{'\\0a':1}]}}});\n  modify({}, {$push: {a: {$each: [{'':1}]}}}, {a: [ { '': 1 } ]});\n  modify({}, {$push: {a: {$each: [{' ':1}]}}}, {a: [ { ' ': 1 } ]});\n  exception({}, {$push: {a: {$each: [{'.':1}]}}});\n\n  // #issue 5167\n  // $push $slice with positive numbers\n  modify({}, {$push: {a: {$each: [], $slice: 5}}}, {a:[]});\n  modify({a:[1,2,3]}, {$push: {a: {$each: [], $slice: 1}}}, {a:[1]});\n  modify({a:[1,2,3]}, {$push: {a: {$each: [4,5], $slice: 1}}}, {a:[1]});\n  modify({a:[1,2,3]}, {$push: {a: {$each: [4,5], $slice: 2}}}, {a:[1,2]});\n  modify({a:[1,2,3]}, {$push: {a: {$each: [4,5], $slice: 4}}}, {a:[1,2,3,4]});\n  modify({a:[1,2,3]}, {$push: {a: {$each: [4,5], $slice: 5}}}, {a:[1,2,3,4,5]});\n  modify({a:[1,2,3]}, {$push: {a: {$each: [4,5], $slice: 10}}}, {a:[1,2,3,4,5]});\n\n\n  // $pushAll\n  modify({}, {$pushAll: {a: [1]}}, {a: [1]});\n  modify({a: []}, {$pushAll: {a: [1]}}, {a: [1]});\n  modify({a: [1]}, {$pushAll: {a: [2]}}, {a: [1, 2]});\n  modify({}, {$pushAll: {a: [1, 2]}}, {a: [1, 2]});\n  modify({a: []}, {$pushAll: {a: [1, 2]}}, {a: [1, 2]});\n  modify({a: [1]}, {$pushAll: {a: [2, 3]}}, {a: [1, 2, 3]});\n  modify({}, {$pushAll: {a: []}}, {a: []});\n  modify({a: []}, {$pushAll: {a: []}}, {a: []});\n  modify({a: [1]}, {$pushAll: {a: []}}, {a: [1]});\n  exception({a: true}, {$pushAll: {a: [1]}});\n  exception({a: []}, {$pushAll: {a: 1}});\n  modify({a: []}, {$pushAll: {'a.1': [99]}}, {a: [null, [99]]});\n  modify({a: []}, {$pushAll: {'a.1': []}}, {a: [null, []]});\n  modify({a: {}}, {$pushAll: {'a.x': [99]}}, {a: {x: [99]}});\n  modify({a: {}}, {$pushAll: {'a.x': []}}, {a: {x: []}});\n  exception({a: [1]}, {$pushAll: {a: [{$a:1}]}});\n  exception({a: [1]}, {$pushAll: {a: [{'\\0a':1}]}});\n  exception({a: [1]}, {$pushAll: {a: [{\"a.b\":1}]}});\n\n  // $addToSet\n  modify({}, {$addToSet: {a: 1}}, {a: [1]});\n  modify({a: []}, {$addToSet: {a: 1}}, {a: [1]});\n  modify({a: [1]}, {$addToSet: {a: 2}}, {a: [1, 2]});\n  modify({a: [1, 2]}, {$addToSet: {a: 1}}, {a: [1, 2]});\n  modify({a: [1, 2]}, {$addToSet: {a: 2}}, {a: [1, 2]});\n  modify({a: [1, 2]}, {$addToSet: {a: 3}}, {a: [1, 2, 3]});\n  exception({a: true}, {$addToSet: {a: 1}});\n  modify({a: [1]}, {$addToSet: {a: [2]}}, {a: [1, [2]]});\n  modify({}, {$addToSet: {a: {x: 1}}}, {a: [{x: 1}]});\n  modify({a: [{x: 1}]}, {$addToSet: {a: {x: 1}}}, {a: [{x: 1}]});\n  modify({a: [{x: 1}]}, {$addToSet: {a: {x: 2}}}, {a: [{x: 1}, {x: 2}]});\n  modify({a: [{x: 1, y: 2}]}, {$addToSet: {a: {x: 1, y: 2}}},\n         {a: [{x: 1, y: 2}]});\n  modify({a: [{x: 1, y: 2}]}, {$addToSet: {a: {y: 2, x: 1}}},\n         {a: [{x: 1, y: 2}, {y: 2, x: 1}]});\n  modify({a: [1, 2]}, {$addToSet: {a: {$each: [3, 1, 4]}}}, {a: [1, 2, 3, 4]});\n  modify({}, {$addToSet: {a: {$each: []}}}, {a: []});\n  modify({}, {$addToSet: {a: {$each: [1]}}}, {a: [1]});\n  modify({a: []}, {$addToSet: {'a.1': 99}}, {a: [null, [99]]});\n  modify({a: {}}, {$addToSet: {'a.x': 99}}, {a: {x: [99]}});\n\n  // invalid field names\n  exception({}, {$addToSet: {a: {$b:1}}});\n  exception({}, {$addToSet: {a: {\"a.b\":1}}});\n  exception({}, {$addToSet: {a: {\"a.\":1}}});\n  exception({}, {$addToSet: {a: {'\\u0000a':1}}});\n  exception({a: [1, 2]}, {$addToSet: {a:{$each: [3, 1, {$a:1}]}}});\n  exception({a: [1, 2]}, {$addToSet: {a:{$each: [3, 1, {'\\0a':1}]}}});\n  exception({a: [1, 2]}, {$addToSet: {a:{$each: [3, 1, [{$a:1}]]}}});\n  exception({a: [1, 2]}, {$addToSet: {a:{$each: [3, 1, [{b:{c:[{a:1},{\"d.s\":2}]}}]]}}});\n  exception({a: [1, 2]}, {$addToSet: {a:{b: [3, 1, [{b:{c:[{a:1},{\"d.s\":2}]}}]]}}});\n  //$each is first element and thus an operator\n  modify({a: [1, 2]}, {$addToSet: {a: {$each: [3, 1, 4], b: 12}}},{a: [ 1, 2, 3, 4 ]});\n  // this should fail because $each is now a field name (not first in object) and thus invalid field name with $\n  exception({a: [1, 2]}, {$addToSet: {a: {b: 12, $each: [3, 1, 4]}}});\n\n  // $pop\n  modify({}, {$pop: {a: 1}}, {}); // tested\n  modify({}, {$pop: {a: -1}}, {}); // tested\n  modify({a: []}, {$pop: {a: 1}}, {a: []});\n  modify({a: []}, {$pop: {a: -1}}, {a: []});\n  modify({a: [1, 2, 3]}, {$pop: {a: 1}}, {a: [1, 2]});\n  modify({a: [1, 2, 3]}, {$pop: {a: 10}}, {a: [1, 2]});\n  modify({a: [1, 2, 3]}, {$pop: {a: .001}}, {a: [1, 2]});\n  modify({a: [1, 2, 3]}, {$pop: {a: 0}}, {a: [1, 2]});\n  modify({a: [1, 2, 3]}, {$pop: {a: \"stuff\"}}, {a: [1, 2]});\n  modify({a: [1, 2, 3]}, {$pop: {a: -1}}, {a: [2, 3]});\n  modify({a: [1, 2, 3]}, {$pop: {a: -10}}, {a: [2, 3]});\n  modify({a: [1, 2, 3]}, {$pop: {a: -.001}}, {a: [2, 3]});\n  exception({a: true}, {$pop: {a: 1}});\n  exception({a: true}, {$pop: {a: -1}});\n  modify({a: []}, {$pop: {'a.1': 1}}, {a: []}); // tested\n  modify({a: [1, [2, 3], 4]}, {$pop: {'a.1': 1}}, {a: [1, [2], 4]});\n  modify({a: {}}, {$pop: {'a.x': 1}}, {a: {}}); // tested\n  modify({a: {x: [2, 3]}}, {$pop: {'a.x': 1}}, {a: {x: [2]}});\n\n  // $pull\n  modify({}, {$pull: {a: 1}}, {});\n  modify({}, {$pull: {'a.x': 1}}, {});\n  modify({a: {}}, {$pull: {'a.x': 1}}, {a: {}});\n  exception({a: true}, {$pull: {a: 1}});\n  modify({a: [2, 1, 2]}, {$pull: {a: 1}}, {a: [2, 2]});\n  modify({a: [2, 1, 2]}, {$pull: {a: 2}}, {a: [1]});\n  modify({a: [2, 1, 2]}, {$pull: {a: 3}}, {a: [2, 1, 2]});\n  modify({a: [1, null, 2, null]}, {$pull: {a: null}}, {a: [1, 2]});\n  modify({a: []}, {$pull: {a: 3}}, {a: []});\n  modify({a: [[2], [2, 1], [3]]}, {$pull: {a: [2, 1]}},\n         {a: [[2], [3]]}); // tested\n  modify({a: [{b: 1, c: 2}, {b: 2, c: 2}]}, {$pull: {a: {b: 1}}},\n         {a: [{b: 2, c: 2}]});\n  modify({a: [{b: 1, c: 2}, {b: 2, c: 2}]}, {$pull: {a: {c: 2}}},\n         {a: []});\n  // XXX implement this functionality!\n  // probably same refactoring as $elemMatch?\n  // modify({a: [1, 2, 3, 4]}, {$pull: {$gt: 2}}, {a: [1,2]}); fails!\n\n  // $pullAll\n  modify({}, {$pullAll: {a: [1]}}, {});\n  modify({a: [1, 2, 3]}, {$pullAll: {a: []}}, {a: [1, 2, 3]});\n  modify({a: [1, 2, 3]}, {$pullAll: {a: [2]}}, {a: [1, 3]});\n  modify({a: [1, 2, 3]}, {$pullAll: {a: [2, 1]}}, {a: [3]});\n  modify({a: [1, 2, 3]}, {$pullAll: {a: [1, 2]}}, {a: [3]});\n  modify({}, {$pullAll: {'a.b.c': [2]}}, {});\n  exception({a: true}, {$pullAll: {a: [1]}});\n  exception({a: [1, 2, 3]}, {$pullAll: {a: 1}});\n  modify({x: [{a: 1}, {a: 1, b: 2}]}, {$pullAll: {x: [{a: 1}]}},\n         {x: [{a: 1, b: 2}]});\n\n  // $rename\n  modify({}, {$rename: {a: 'b'}}, {});\n  modify({a: [12]}, {$rename: {a: 'b'}}, {b: [12]});\n  modify({a: {b: 12}}, {$rename: {a: 'c'}}, {c: {b: 12}});\n  modify({a: {b: 12}}, {$rename: {'a.b': 'a.c'}}, {a: {c: 12}});\n  modify({a: {b: 12}}, {$rename: {'a.b': 'x'}}, {a: {}, x: 12}); // tested\n  modify({a: {b: 12}}, {$rename: {'a.b': 'q.r'}}, {a: {}, q: {r: 12}});\n  modify({a: {b: 12}}, {$rename: {'a.b': 'q.2.r'}}, {a: {}, q: {2: {r: 12}}});\n  modify({a: {b: 12}, q: {}}, {$rename: {'a.b': 'q.2.r'}},\n         {a: {}, q: {2: {r: 12}}});\n  exception({a: {b: 12}, q: []}, {$rename: {'a.b': 'q.2'}}); // tested\n  exception({a: {b: 12}, q: []}, {$rename: {'a.b': 'q.2.r'}}); // tested\n  // These strange MongoDB behaviors throw.\n  // modify({a: {b: 12}, q: []}, {$rename: {'q.1': 'x'}},\n  //        {a: {b: 12}, x: []}); // tested\n  // modify({a: {b: 12}, q: []}, {$rename: {'q.1.j': 'x'}},\n  //        {a: {b: 12}, x: []}); // tested\n  exception({}, {$rename: {'a': 'a'}});\n  exception({}, {$rename: {'a.b': 'a.b'}});\n  modify({a: 12, b: 13}, {$rename: {a: 'b'}}, {b: 12});\n  exception({a: [12]}, {$rename: {a: '$b'}});\n  exception({a: [12]}, {$rename: {a: '\\0a'}});\n\n  // $setOnInsert\n  modify({a: 0}, {$setOnInsert: {a: 12}}, {a: 0});\n  upsert({a: 12}, {$setOnInsert: {b: 12}}, {a: 12, b: 12});\n  upsert({a: 12}, {$setOnInsert: {_id: 'test'}}, {_id: 'test', a: 12});\n  upsert({\"a.b\": 10}, {$setOnInsert: {a: {b: 10, c: 12}}}, {a: {b: 10, c: 12}});\n  upsert({\"a.b\": 10}, {$setOnInsert: {c: 12}}, {a: {b: 10}, c: 12});\n  upsert({\"_id\": 'test'}, {$setOnInsert: {c: 12}}, {_id: 'test', c: 12});\n  upsert('test', {$setOnInsert: {c: 12}}, {_id: 'test', c: 12});\n  upsertException({a: 0}, {$setOnInsert: {$a: 12}});\n  upsertException({a: 0}, {$setOnInsert: {'\\0a': 12}});\n  upsert({a: 0}, {$setOnInsert: {b: {a:1}}}, {a:0, b:{a:1}});\n  upsertException({a: 0}, {$setOnInsert: {b: {$a:1}}});\n  upsertException({a: 0}, {$setOnInsert: {b: {'a.b':1}}});\n  upsertException({a: 0}, {$setOnInsert: {b: {'\\0a':1}}});\n\n  exception({}, {$set: {_id: 'bad'}});\n\n  // $bit\n  // unimplemented\n\n  // XXX test case sensitivity of modops\n  // XXX for each (most) modop, test that it performs a deep copy\n});\n\n// XXX test update() (selecting docs, multi, upsert..)\n\nTinytest.add(\"minimongo - observe ordered\", function (test) {\n  var operations = [];\n  var cbs = log_callbacks(operations);\n  var handle;\n\n  var c = new LocalCollection();\n  handle = c.find({}, {sort: {a: 1}}).observe(cbs);\n  test.isTrue(handle.collection === c);\n\n  c.insert({_id: 'foo', a:1});\n  test.equal(operations.shift(), ['added', {a:1}, 0, null]);\n  c.update({a:1}, {$set: {a: 2}});\n  test.equal(operations.shift(), ['changed', {a:2}, 0, {a:1}]);\n  c.insert({a:10});\n  test.equal(operations.shift(), ['added', {a:10}, 1, null]);\n  c.update({}, {$inc: {a: 1}}, {multi: true});\n  test.equal(operations.shift(), ['changed', {a:3}, 0, {a:2}]);\n  test.equal(operations.shift(), ['changed', {a:11}, 1, {a:10}]);\n  c.update({a:11}, {a:1});\n  test.equal(operations.shift(), ['changed', {a:1}, 1, {a:11}]);\n  test.equal(operations.shift(), ['moved', {a:1}, 1, 0, 'foo']);\n  c.remove({a:2});\n  test.equal(operations.shift(), undefined);\n  c.remove({a:3});\n  test.equal(operations.shift(), ['removed', 'foo', 1, {a:3}]);\n\n  // test stop\n  handle.stop();\n  var idA2 = Random.id();\n  c.insert({_id: idA2, a:2});\n  test.equal(operations.shift(), undefined);\n\n  // test initial inserts (and backwards sort)\n  handle = c.find({}, {sort: {a: -1}}).observe(cbs);\n  test.equal(operations.shift(), ['added', {a:2}, 0, null]);\n  test.equal(operations.shift(), ['added', {a:1}, 1, null]);\n  handle.stop();\n\n  // test _suppress_initial\n  handle = c.find({}, {sort: {a: -1}}).observe(_.extend({\n    _suppress_initial: true}, cbs));\n  test.equal(operations.shift(), undefined);\n  c.insert({a:100});\n  test.equal(operations.shift(), ['added', {a:100}, 0, idA2]);\n  handle.stop();\n\n  // test skip and limit.\n  c.remove({});\n  handle = c.find({}, {sort: {a: 1}, skip: 1, limit: 2}).observe(cbs);\n  test.equal(operations.shift(), undefined);\n  c.insert({a:1});\n  test.equal(operations.shift(), undefined);\n  c.insert({_id: 'foo', a:2});\n  test.equal(operations.shift(), ['added', {a:2}, 0, null]);\n  c.insert({a:3});\n  test.equal(operations.shift(), ['added', {a:3}, 1, null]);\n  c.insert({a:4});\n  test.equal(operations.shift(), undefined);\n  c.update({a:1}, {a:0});\n  test.equal(operations.shift(), undefined);\n  c.update({a:0}, {a:5});\n  test.equal(operations.shift(), ['removed', 'foo', 0, {a:2}]);\n  test.equal(operations.shift(), ['added', {a:4}, 1, null]);\n  c.update({a:3}, {a:3.5});\n  test.equal(operations.shift(), ['changed', {a:3.5}, 0, {a:3}]);\n  handle.stop();\n\n  // test observe limit with pre-existing docs\n  c.remove({});\n  c.insert({a: 1});\n  c.insert({_id: 'two', a: 2});\n  c.insert({a: 3});\n  handle = c.find({}, {sort: {a: 1}, limit: 2}).observe(cbs);\n  test.equal(operations.shift(), ['added', {a:1}, 0, null]);\n  test.equal(operations.shift(), ['added', {a:2}, 1, null]);\n  test.equal(operations.shift(), undefined);\n  c.remove({a: 2});\n  test.equal(operations.shift(), ['removed', 'two', 1, {a:2}]);\n  test.equal(operations.shift(), ['added', {a:3}, 1, null]);\n  test.equal(operations.shift(), undefined);\n  handle.stop();\n\n  // test _no_indices\n\n  c.remove({});\n  handle = c.find({}, {sort: {a: 1}}).observe(_.extend(cbs, {_no_indices: true}));\n  c.insert({_id: 'foo', a:1});\n  test.equal(operations.shift(), ['added', {a:1}, -1, null]);\n  c.update({a:1}, {$set: {a: 2}});\n  test.equal(operations.shift(), ['changed', {a:2}, -1, {a:1}]);\n  c.insert({a:10});\n  test.equal(operations.shift(), ['added', {a:10}, -1, null]);\n  c.update({}, {$inc: {a: 1}}, {multi: true});\n  test.equal(operations.shift(), ['changed', {a:3}, -1, {a:2}]);\n  test.equal(operations.shift(), ['changed', {a:11}, -1, {a:10}]);\n  c.update({a:11}, {a:1});\n  test.equal(operations.shift(), ['changed', {a:1}, -1, {a:11}]);\n  test.equal(operations.shift(), ['moved', {a:1}, -1, -1, 'foo']);\n  c.remove({a:2});\n  test.equal(operations.shift(), undefined);\n  c.remove({a:3});\n  test.equal(operations.shift(), ['removed', 'foo', -1, {a:3}]);\n  handle.stop();\n});\n\n_.each([true, false], function (ordered) {\n  Tinytest.add(\"minimongo - observe ordered: \" + ordered, function (test) {\n    var c = new LocalCollection();\n\n    var ev = \"\";\n    var makecb = function (tag) {\n      var ret = {};\n      _.each([\"added\", \"changed\", \"removed\"], function (fn) {\n        var fnName = ordered ? fn + \"At\" : fn;\n        ret[fnName] = function (doc) {\n          ev = (ev + fn.substr(0, 1) + tag + doc._id + \"_\");\n        };\n      });\n      return ret;\n    };\n    var expect = function (x) {\n      test.equal(ev, x);\n      ev = \"\";\n    };\n\n    c.insert({_id: 1, name: \"strawberry\", tags: [\"fruit\", \"red\", \"squishy\"]});\n    c.insert({_id: 2, name: \"apple\", tags: [\"fruit\", \"red\", \"hard\"]});\n    c.insert({_id: 3, name: \"rose\", tags: [\"flower\", \"red\", \"squishy\"]});\n\n    // This should work equally well for ordered and unordered observations\n    // (because the callbacks don't look at indices and there's no 'moved'\n    // callback).\n    var handle = c.find({tags: \"flower\"}).observe(makecb('a'));\n    expect(\"aa3_\");\n    c.update({name: \"rose\"}, {$set: {tags: [\"bloom\", \"red\", \"squishy\"]}});\n    expect(\"ra3_\");\n    c.update({name: \"rose\"}, {$set: {tags: [\"flower\", \"red\", \"squishy\"]}});\n    expect(\"aa3_\");\n    c.update({name: \"rose\"}, {$set: {food: false}});\n    expect(\"ca3_\");\n    c.remove({});\n    expect(\"ra3_\");\n    c.insert({_id: 4, name: \"daisy\", tags: [\"flower\"]});\n    expect(\"aa4_\");\n    handle.stop();\n    // After calling stop, no more callbacks are called.\n    c.insert({_id: 5, name: \"iris\", tags: [\"flower\"]});\n    expect(\"\");\n\n    // Test that observing a lookup by ID works.\n    handle = c.find(4).observe(makecb('b'));\n    expect('ab4_');\n    c.update(4, {$set: {eek: 5}});\n    expect('cb4_');\n    handle.stop();\n\n    // Test observe with reactive: false.\n    handle = c.find({tags: \"flower\"}, {reactive: false}).observe(makecb('c'));\n    expect('ac4_ac5_');\n    // This insert shouldn't trigger a callback because it's not reactive.\n    c.insert({_id: 6, name: \"river\", tags: [\"flower\"]});\n    expect('');\n    handle.stop();\n  });\n});\n\n\nTinytest.add(\"minimongo - saveOriginals\", function (test) {\n  // set up some data\n  var c = new LocalCollection(),\n      count;\n  c.insert({_id: 'foo', x: 'untouched'});\n  c.insert({_id: 'bar', x: 'updateme'});\n  c.insert({_id: 'baz', x: 'updateme'});\n  c.insert({_id: 'quux', y: 'removeme'});\n  c.insert({_id: 'whoa', y: 'removeme'});\n\n  // Save originals and make some changes.\n  c.saveOriginals();\n  c.insert({_id: \"hooray\", z: 'insertme'});\n  c.remove({y: 'removeme'});\n  count = c.update({x: 'updateme'}, {$set: {z: 5}}, {multi: true});\n  c.update('bar', {$set: {k: 7}});  // update same doc twice\n\n  // Verify returned count is correct\n  test.equal(count, 2);\n\n  // Verify the originals.\n  var originals = c.retrieveOriginals();\n  var affected = ['bar', 'baz', 'quux', 'whoa', 'hooray'];\n  test.equal(originals.size(), _.size(affected));\n  _.each(affected, function (id) {\n    test.isTrue(originals.has(id));\n  });\n  test.equal(originals.get('bar'), {_id: 'bar', x: 'updateme'});\n  test.equal(originals.get('baz'), {_id: 'baz', x: 'updateme'});\n  test.equal(originals.get('quux'), {_id: 'quux', y: 'removeme'});\n  test.equal(originals.get('whoa'), {_id: 'whoa', y: 'removeme'});\n  test.equal(originals.get('hooray'), undefined);\n\n  // Verify that changes actually occured.\n  test.equal(c.find().count(), 4);\n  test.equal(c.findOne('foo'), {_id: 'foo', x: 'untouched'});\n  test.equal(c.findOne('bar'), {_id: 'bar', x: 'updateme', z: 5, k: 7});\n  test.equal(c.findOne('baz'), {_id: 'baz', x: 'updateme', z: 5});\n  test.equal(c.findOne('hooray'), {_id: 'hooray', z: 'insertme'});\n\n  // The next call doesn't get the same originals again.\n  c.saveOriginals();\n  originals = c.retrieveOriginals();\n  test.isTrue(originals);\n  test.isTrue(originals.empty());\n\n  // Insert and remove a document during the period.\n  c.saveOriginals();\n  c.insert({_id: 'temp', q: 8});\n  c.remove('temp');\n  originals = c.retrieveOriginals();\n  test.equal(originals.size(), 1);\n  test.isTrue(originals.has('temp'));\n  test.equal(originals.get('temp'), undefined);\n});\n\nTinytest.add(\"minimongo - saveOriginals errors\", function (test) {\n  var c = new LocalCollection();\n  // Can't call retrieve before save.\n  test.throws(function () { c.retrieveOriginals(); });\n  c.saveOriginals();\n  // Can't call save twice.\n  test.throws(function () { c.saveOriginals(); });\n});\n\nTinytest.add(\"minimongo - objectid transformation\", function (test) {\n  var testId = function (item) {\n    test.equal(item, MongoID.idParse(MongoID.idStringify(item)));\n  };\n  var randomOid = new MongoID.ObjectID();\n  testId(randomOid);\n  testId(\"FOO\");\n  testId(\"ffffffffffff\");\n  testId(\"0987654321abcdef09876543\");\n  testId(new MongoID.ObjectID());\n  testId(\"--a string\");\n\n  test.equal(\"ffffffffffff\", MongoID.idParse(MongoID.idStringify(\"ffffffffffff\")));\n});\n\n\nTinytest.add(\"minimongo - objectid\", function (test) {\n  var randomOid = new MongoID.ObjectID();\n  var anotherRandomOid = new MongoID.ObjectID();\n  test.notEqual(randomOid, anotherRandomOid);\n  test.throws(function() { new MongoID.ObjectID(\"qqqqqqqqqqqqqqqqqqqqqqqq\");});\n  test.throws(function() { new MongoID.ObjectID(\"ABCDEF\"); });\n  test.equal(randomOid, new MongoID.ObjectID(randomOid.valueOf()));\n});\n\nTinytest.add(\"minimongo - pause\", function (test) {\n  var operations = [];\n  var cbs = log_callbacks(operations);\n\n  var c = new LocalCollection();\n  var h = c.find({}).observe(cbs);\n\n  // remove and add cancel out.\n  c.insert({_id: 1, a: 1});\n  test.equal(operations.shift(), ['added', {a:1}, 0, null]);\n\n  c.pauseObservers();\n\n  c.remove({_id: 1});\n  test.length(operations, 0);\n  c.insert({_id: 1, a: 1});\n  test.length(operations, 0);\n\n  c.resumeObservers();\n  test.length(operations, 0);\n\n\n  // two modifications become one\n  c.pauseObservers();\n\n  c.update({_id: 1}, {a: 2});\n  c.update({_id: 1}, {a: 3});\n\n  c.resumeObservers();\n  test.equal(operations.shift(), ['changed', {a:3}, 0, {a:1}]);\n  test.length(operations, 0);\n\n  // test special case for remove({})\n  c.pauseObservers();\n  test.equal(c.remove({}), 1);\n  test.length(operations, 0);\n  c.resumeObservers();\n  test.equal(operations.shift(), ['removed', 1, 0, {a:3}]);\n  test.length(operations, 0);\n\n  h.stop();\n});\n\nTinytest.add(\"minimongo - ids matched by selector\", function (test) {\n  var check = function (selector, ids) {\n    var idsFromSelector = LocalCollection._idsMatchedBySelector(selector);\n    // XXX normalize order, in a way that also works for ObjectIDs?\n    test.equal(idsFromSelector, ids);\n  };\n  check(\"foo\", [\"foo\"]);\n  check({_id: \"foo\"}, [\"foo\"]);\n  var oid1 = new MongoID.ObjectID();\n  check(oid1, [oid1]);\n  check({_id: oid1}, [oid1]);\n  check({_id: \"foo\", x: 42}, [\"foo\"]);\n  check({}, null);\n  check({_id: {$in: [\"foo\", oid1]}}, [\"foo\", oid1]);\n  check({_id: {$ne: \"foo\"}}, null);\n  // not actually valid, but works for now...\n  check({$and: [\"foo\"]}, [\"foo\"]);\n  check({$and: [{x: 42}, {_id: oid1}]}, [oid1]);\n  check({$and: [{x: 42}, {_id: {$in: [oid1]}}]}, [oid1]);\n});\n\nTinytest.add(\"minimongo - reactive stop\", function (test) {\n  var coll = new LocalCollection();\n  coll.insert({_id: 'A'});\n  coll.insert({_id: 'B'});\n  coll.insert({_id: 'C'});\n\n  var addBefore = function (str, newChar, before) {\n    var idx = str.indexOf(before);\n    if (idx === -1)\n      return str + newChar;\n    return str.slice(0, idx) + newChar + str.slice(idx);\n  };\n\n  var x, y;\n  var sortOrder = ReactiveVar(1);\n\n  var c = Tracker.autorun(function () {\n    var q = coll.find({}, {sort: {_id: sortOrder.get()}});\n    x = \"\";\n    q.observe({ addedAt: function (doc, atIndex, before) {\n      x = addBefore(x, doc._id, before);\n    }});\n    y = \"\";\n    q.observeChanges({ addedBefore: function (id, fields, before) {\n      y = addBefore(y, id, before);\n    }});\n  });\n\n  test.equal(x, \"ABC\");\n  test.equal(y, \"ABC\");\n\n  sortOrder.set(-1);\n  test.equal(x, \"ABC\");\n  test.equal(y, \"ABC\");\n  Tracker.flush();\n  test.equal(x, \"CBA\");\n  test.equal(y, \"CBA\");\n\n  coll.insert({_id: 'D'});\n  coll.insert({_id: 'E'});\n  test.equal(x, \"EDCBA\");\n  test.equal(y, \"EDCBA\");\n\n  c.stop();\n  // stopping kills the observes immediately\n  coll.insert({_id: 'F'});\n  test.equal(x, \"EDCBA\");\n  test.equal(y, \"EDCBA\");\n});\n\nTinytest.add(\"minimongo - immediate invalidate\", function (test) {\n  var coll = new LocalCollection();\n  coll.insert({_id: 'A'});\n\n  // This has two separate findOnes.  findOne() uses skip/limit, which means\n  // that its response to an update() call involves a recompute. We used to have\n  // a bug where we would first calculate all the calls that need to be\n  // recomputed, then recompute them one by one, without checking to see if the\n  // callbacks from recomputing one query stopped the second query, which\n  // crashed.\n  var c = Tracker.autorun(function () {\n    coll.findOne('A');\n    coll.findOne('A');\n  });\n\n  coll.update('A', {$set: {x: 42}});\n\n  c.stop();\n});\n\n\nTinytest.add(\"minimongo - count on cursor with limit\", function(test){\n  var coll = new LocalCollection(), count;\n\n  coll.insert({_id: 'A'});\n  coll.insert({_id: 'B'});\n  coll.insert({_id: 'C'});\n  coll.insert({_id: 'D'});\n\n  var c = Tracker.autorun(function (c) {\n    var cursor = coll.find({_id: {$exists: true}}, {sort: {_id: 1}, limit: 3});\n    count = cursor.count();\n  });\n\n  test.equal(count, 3);\n\n  coll.remove('A'); // still 3 in the collection\n  Tracker.flush();\n  test.equal(count, 3);\n\n  coll.remove('B'); // expect count now 2\n  Tracker.flush();\n  test.equal(count, 2);\n\n\n  coll.insert({_id: 'A'}); // now 3 again\n  Tracker.flush();\n  test.equal(count, 3);\n\n  coll.insert({_id: 'B'}); // now 4 entries, but count should be 3 still\n  Tracker.flush();\n  test.equal(count, 3);\n\n  c.stop();\n});\n\nTinytest.add(\"minimongo - reactive count with cached cursor\", function (test) {\n  var coll = new LocalCollection;\n  var cursor = coll.find({});\n  var firstAutorunCount, secondAutorunCount;\n  Tracker.autorun(function(){\n    firstAutorunCount = cursor.count();\n  });\n  Tracker.autorun(function(){\n    secondAutorunCount = coll.find({}).count();\n  });\n  test.equal(firstAutorunCount, 0);\n  test.equal(secondAutorunCount, 0);\n  coll.insert({i: 1});\n  coll.insert({i: 2});\n  coll.insert({i: 3});\n  Tracker.flush();\n  test.equal(firstAutorunCount, 3);\n  test.equal(secondAutorunCount, 3);\n});\n\nTinytest.add(\"minimongo - $near operator tests\", function (test) {\n  var coll = new LocalCollection();\n  coll.insert({ rest: { loc: [2, 3] } });\n  coll.insert({ rest: { loc: [-3, 3] } });\n  coll.insert({ rest: { loc: [5, 5] } });\n\n  test.equal(coll.find({ 'rest.loc': { $near: [0, 0], $maxDistance: 30 } }).count(), 3);\n  test.equal(coll.find({ 'rest.loc': { $near: [0, 0], $maxDistance: 4 } }).count(), 1);\n  var points = coll.find({ 'rest.loc': { $near: [0, 0], $maxDistance: 6 } }).fetch();\n  _.each(points, function (point, i, points) {\n    test.isTrue(!i || distance([0, 0], point.rest.loc) >= distance([0, 0], points[i - 1].rest.loc));\n  });\n\n  function distance(a, b) {\n    var x = a[0] - b[0];\n    var y = a[1] - b[1];\n    return Math.sqrt(x * x + y * y);\n  }\n\n  // GeoJSON tests\n  coll = new LocalCollection();\n  var data = [{ \"category\" : \"BURGLARY\", \"descript\" : \"BURGLARY OF STORE, FORCIBLE ENTRY\", \"address\" : \"100 Block of 10TH ST\", \"location\" : { \"type\" : \"Point\", \"coordinates\" : [  -122.415449723856,  37.7749518087273 ] } },\n    { \"category\" : \"WEAPON LAWS\", \"descript\" : \"POSS OF PROHIBITED WEAPON\", \"address\" : \"900 Block of MINNA ST\", \"location\" : { \"type\" : \"Point\", \"coordinates\" : [  -122.415386041221,  37.7747879744156 ] } },\n    { \"category\" : \"LARCENY/THEFT\", \"descript\" : \"GRAND THEFT OF PROPERTY\", \"address\" : \"900 Block of MINNA ST\", \"location\" : { \"type\" : \"Point\", \"coordinates\" : [  -122.41538270191,  37.774683628213 ] } },\n    { \"category\" : \"LARCENY/THEFT\", \"descript\" : \"PETTY THEFT FROM LOCKED AUTO\", \"address\" : \"900 Block of MINNA ST\", \"location\" : { \"type\" : \"Point\", \"coordinates\" : [  -122.415396041221,  37.7747879744156 ] } },\n    { \"category\" : \"OTHER OFFENSES\", \"descript\" : \"POSSESSION OF BURGLARY TOOLS\", \"address\" : \"900 Block of MINNA ST\", \"location\" : { \"type\" : \"Point\", \"coordinates\" : [  -122.415386041221,  37.7747879734156 ] } }\n  ];\n\n  _.each(data, function (x, i) { coll.insert(_.extend(x, { x: i })); });\n\n  var close15 = coll.find({ location: { $near: {\n    $geometry: { type: \"Point\",\n                 coordinates: [-122.4154282, 37.7746115] },\n    $maxDistance: 15 } } }).fetch();\n  test.length(close15, 1);\n  test.equal(close15[0].descript, \"GRAND THEFT OF PROPERTY\");\n\n  var close20 = coll.find({ location: { $near: {\n    $geometry: { type: \"Point\",\n                 coordinates: [-122.4154282, 37.7746115] },\n    $maxDistance: 20 } } }).fetch();\n  test.length(close20, 4);\n  test.equal(close20[0].descript, \"GRAND THEFT OF PROPERTY\");\n  test.equal(close20[1].descript, \"PETTY THEFT FROM LOCKED AUTO\");\n  test.equal(close20[2].descript, \"POSSESSION OF BURGLARY TOOLS\");\n  test.equal(close20[3].descript, \"POSS OF PROHIBITED WEAPON\");\n\n  // Any combinations of $near with $or/$and/$nor/$not should throw an error\n  test.throws(function () {\n    coll.find({ location: {\n      $not: {\n        $near: {\n          $geometry: {\n            type: \"Point\",\n            coordinates: [-122.4154282, 37.7746115]\n          }, $maxDistance: 20 } } } });\n  });\n  test.throws(function () {\n    coll.find({\n      $and: [ { location: { $near: { $geometry: { type: \"Point\", coordinates: [-122.4154282, 37.7746115] }, $maxDistance: 20 }}},\n              { x: 0 }]\n    });\n  });\n  test.throws(function () {\n    coll.find({\n      $or: [ { location: { $near: { $geometry: { type: \"Point\", coordinates: [-122.4154282, 37.7746115] }, $maxDistance: 20 }}},\n             { x: 0 }]\n    });\n  });\n  test.throws(function () {\n    coll.find({\n      $nor: [ { location: { $near: { $geometry: { type: \"Point\", coordinates: [-122.4154282, 37.7746115] }, $maxDistance: 1 }}},\n              { x: 0 }]\n    });\n  });\n  test.throws(function () {\n    coll.find({\n      $and: [{\n        $and: [{\n          location: {\n            $near: {\n              $geometry: {\n                type: \"Point\",\n                coordinates: [-122.4154282, 37.7746115]\n              },\n              $maxDistance: 1\n            }\n          }\n        }]\n      }]\n    });\n  });\n\n  // array tests\n  coll = new LocalCollection();\n  coll.insert({\n    _id: \"x\",\n    k: 9,\n    a: [\n      {b: [\n        [100, 100],\n        [1,  1]]},\n      {b: [150,  150]}]});\n  coll.insert({\n    _id: \"y\",\n    k: 9,\n    a: {b: [5, 5]}});\n  var testNear = function (near, md, expected) {\n    test.equal(\n      _.pluck(\n        coll.find({'a.b': {$near: near, $maxDistance: md}}).fetch(), '_id'),\n      expected);\n  };\n  testNear([149, 149], 4, ['x']);\n  testNear([149, 149], 1000, ['x', 'y']);\n  // It's important that we figure out that 'x' is closer than 'y' to [2,2] even\n  // though the first within-1000 point in 'x' (ie, [100,100]) is farther than\n  // 'y'.\n  testNear([2, 2], 1000, ['x', 'y']);\n\n  // issue #3599\n  // Ensure that distance is not used as a tie-breaker for sort.\n  test.equal(\n    _.pluck(coll.find({'a.b': {$near: [1, 1]}}, {sort: {k: 1}}).fetch(), '_id'),\n    ['x', 'y']);\n  test.equal(\n    _.pluck(coll.find({'a.b': {$near: [5, 5]}}, {sort: {k: 1}}).fetch(), '_id'),\n    ['x', 'y']);\n\n  var operations = [];\n  var cbs = log_callbacks(operations);\n  var handle = coll.find({'a.b': {$near: [7,7]}}).observe(cbs);\n\n  test.length(operations, 2);\n  test.equal(operations.shift(), ['added', {k:9, a:{b:[5,5]}}, 0, null]);\n  test.equal(operations.shift(),\n             ['added', {k: 9, a:[{b:[[100,100],[1,1]]},{b:[150,150]}]},\n              1, null]);\n  // This needs to be inserted in the MIDDLE of the two existing ones.\n  coll.insert({a: {b: [3,3]}});\n  test.length(operations, 1);\n  test.equal(operations.shift(), ['added', {a: {b: [3, 3]}}, 1, 'x']);\n\n  handle.stop();\n});\n\n// issue #2077\nTinytest.add(\"minimongo - $near and $geometry for legacy coordinates\", function(test){\n  var coll = new LocalCollection();\n\n  coll.insert({\n    loc: {\n      x: 1,\n      y: 1\n    }\n  });\n  coll.insert({\n    loc: [-1,-1]\n  });\n  coll.insert({\n    loc: [40,-10]\n  });\n  coll.insert({\n    loc: {\n      x: -10,\n      y: 40\n    }\n  });\n\n  test.equal(coll.find({ 'loc': { $near: [0, 0], $maxDistance: 4 } }).count(), 2);\n  test.equal(coll.find({ 'loc': { $near: {$geometry: {type: \"Point\", coordinates: [0, 0]}}} }).count(), 4);\n  test.equal(coll.find({ 'loc': { $near: {$geometry: {type: \"Point\", coordinates: [0, 0]}, $maxDistance:200000}}}).count(), 2);\n\n});\n\n// Regression test for #4377. Previously, \"replace\" updates didn't clone the\n// argument.\nTinytest.add(\"minimongo - update should clone\", function (test) {\n  var x = [];\n  var coll = new LocalCollection;\n  var id = coll.insert({});\n  coll.update(id, {x: x});\n  x.push(1);\n  test.equal(coll.findOne(id), {_id: id, x: []});\n});\n\n// See #2275.\nTinytest.add(\"minimongo - fetch in observe\", function (test) {\n  var coll = new LocalCollection;\n  var callbackInvoked = false;\n  var observe = coll.find().observeChanges({\n    added: function (id, fields) {\n      callbackInvoked = true;\n      test.equal(fields, {foo: 1});\n      var doc = coll.findOne({foo: 1});\n      test.isTrue(doc);\n      test.equal(doc.foo, 1);\n    }\n  });\n  test.isFalse(callbackInvoked);\n  var computation = Tracker.autorun(function (computation) {\n    if (computation.firstRun) {\n      coll.insert({foo: 1});\n    }\n  });\n  test.isTrue(callbackInvoked);\n  observe.stop();\n  computation.stop();\n});\n\n// See #2254\nTinytest.add(\"minimongo - fine-grained reactivity of observe with fields projection\", function (test) {\n  var X = new LocalCollection;\n  var id = \"asdf\";\n  X.insert({_id: id, foo: {bar: 123}});\n\n  var callbackInvoked = false;\n  var obs = X.find(id, {fields: {'foo.bar': 1}}).observeChanges({\n    changed: function (id, fields) {\n      callbackInvoked = true;\n    }\n  });\n\n  test.isFalse(callbackInvoked);\n  X.update(id, {$set: {'foo.baz': 456}});\n  test.isFalse(callbackInvoked);\n\n  obs.stop();\n});\nTinytest.add(\"minimongo - fine-grained reactivity of query with fields projection\", function (test) {\n  var X = new LocalCollection;\n  var id = \"asdf\";\n  X.insert({_id: id, foo: {bar: 123}});\n\n  var callbackInvoked = false;\n  var computation = Tracker.autorun(function () {\n    callbackInvoked = true;\n    return X.findOne(id, { fields: { 'foo.bar': 1 } });\n  });\n  test.isTrue(callbackInvoked);\n  callbackInvoked = false;\n  X.update(id, {$set: {'foo.baz': 456}});\n  test.isFalse(callbackInvoked);\n  X.update(id, {$set: {'foo.bar': 124}});\n  Tracker.flush();\n  test.isTrue(callbackInvoked);\n\n  computation.stop();\n});\n\n// Tests that the logic in `LocalCollection.prototype.update`\n// correctly deals with count() on a cursor with skip or limit (since\n// then the result set is an IdMap, not an array)\nTinytest.add(\"minimongo - reactive skip/limit count while updating\", function(test) {\n  var X = new LocalCollection;\n  var count = -1;\n\n  var c = Tracker.autorun(function() {\n    count = X.find({}, {skip: 1, limit: 1}).count();\n  });\n\n  test.equal(count, 0);\n\n  X.insert({});\n  Tracker.flush({_throwFirstError: true});\n  test.equal(count, 0);\n\n  X.insert({});\n  Tracker.flush({_throwFirstError: true});\n  test.equal(count, 1);\n\n  X.update({}, {$set: {foo: 1}});\n  Tracker.flush({_throwFirstError: true});\n  test.equal(count, 1);\n\n  // Make sure a second update also works\n  X.update({}, {$set: {foo: 2}});\n  Tracker.flush({_throwFirstError: true});\n  test.equal(count, 1);\n\n  c.stop();\n});\n\n// Makes sure inserts cannot be performed using field names that have\n// Mongo restricted characters in them ('.', '$', '\\0'):\n// https://docs.mongodb.com/manual/reference/limits/#Restrictions-on-Field-Names\nTinytest.add(\"minimongo - cannot insert using invalid field names\", function (test) {\n  const collection = new LocalCollection();\n\n  // Quick test to make sure non-dot field inserts are working\n  collection.insert({ a: 'b' });\n\n  // Quick test to make sure field values with dots are allowed\n  collection.insert({ a: 'b.c' });\n\n  // Verify top level dot-field inserts are prohibited\n  ['a.b', '.b', 'a.', 'a.b.c'].forEach((field) => {\n    test.throws(function () {\n      collection.insert({ [field]: 'c' });\n    }, `Key ${field} must not contain '.'`);\n  });\n\n  // Verify nested dot-field inserts are prohibited\n  test.throws(function () {\n    collection.insert({ a: { b: { 'c.d': 'e' } } });\n  }, \"Key c.d must not contain '.'\");\n\n  // Verify field names starting with $ are prohibited\n  test.throws(function () {\n    collection.insert({ '$a': 'b' });\n  }, \"Key $a must not start with '$'\");\n\n  // Verify nested field names starting with $ are prohibited\n  test.throws(function () {\n    collection.insert({ a: { b: { '$c': 'd' } } });\n  }, \"Key $c must not start with '$'\");\n\n  // Verify top level fields with null characters are prohibited\n  ['\\0a', 'a\\0', 'a\\0b', '\\u0000a', 'a\\u0000', 'a\\u0000b'].forEach((field) => {\n    test.throws(function () {\n      collection.insert({ [field]: 'c' });\n    }, `Key ${field} must not contain null bytes`);\n  });\n\n  // Verify nested field names with null characters are prohibited\n  test.throws(function () {\n    collection.insert({ a: { b: { '\\0c': 'd' } } });\n  }, 'Key \\0c must not contain null bytes');\n});\n\n// Makes sure $set's cannot be performed using null bytes\n// https://docs.mongodb.com/manual/reference/limits/#Restrictions-on-Field-Names\nTinytest.add(\"minimongo - cannot $set with null bytes\", function (test) {\n  const collection = new LocalCollection();\n\n  // Quick test to make sure non-null byte $set's are working\n  const id = collection.insert({ a: 'b', 'c': 'd' });\n  collection.update({ _id: id }, { $set: { e: 'f' } });\n\n  // Verify $set's with null bytes throw an exception\n  test.throws(() => {\n    collection.update({ _id: id }, { $set: { '\\0a': 'b' } });\n  }, 'Key \\0a must not contain null bytes');\n});\n\n// Makes sure $rename's cannot be performed using null bytes\n// https://docs.mongodb.com/manual/reference/limits/#Restrictions-on-Field-Names\nTinytest.add(\"minimongo - cannot $rename with null bytes\", function (test) {\n  const collection = new LocalCollection();\n\n  // Quick test to make sure non-null byte $rename's are working\n  let id = collection.insert({ a: 'b', c: 'd' });\n  collection.update({ _id: id }, { $rename: { a: 'a1', c: 'c1' } });\n\n  // Verify $rename's with null bytes throw an exception\n  collection.remove({});\n  id = collection.insert({ a: 'b', c: 'd' });\n  test.throws(() => {\n    collection.update({ _id: id }, { $rename: { a: '\\0a', c: 'c\\0' } });\n  }, \"The 'to' field for $rename cannot contain an embedded null byte\");\n});\n"]},"hash":"6cdda88839f8e19bc228d5f61d1e097a645fd9c2"}
