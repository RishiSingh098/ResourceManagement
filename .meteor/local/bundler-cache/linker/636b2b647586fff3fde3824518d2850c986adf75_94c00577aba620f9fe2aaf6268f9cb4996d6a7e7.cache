[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package['templating-runtime'].Template;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\nSymbol = Package['ecmascript-runtime-client'].Symbol;\nMap = Package['ecmascript-runtime-client'].Map;\nSet = Package['ecmascript-runtime-client'].Set;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"client\":{\"main.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////\n//                                                                         //\n// client/main.js                                                          //\n//                                                                         //\n/////////////////////////////////////////////////////////////////////////////\n                                                                           //\nvar Template = void 0;                                                     // 1\nmodule.watch(require(\"meteor/templating\"), {                               // 1\n  Template: function (v) {                                                 // 1\n    Template = v;                                                          // 1\n  }                                                                        // 1\n}, 0);                                                                     // 1\nvar ReactiveVar = void 0;                                                  // 1\nmodule.watch(require(\"meteor/reactive-var\"), {                             // 1\n  ReactiveVar: function (v) {                                              // 1\n    ReactiveVar = v;                                                       // 1\n  }                                                                        // 1\n}, 1);                                                                     // 1\nvar Mongo = void 0;                                                        // 1\nmodule.watch(require(\"meteor/mongo\"), {                                    // 1\n  Mongo: function (v) {                                                    // 1\n    Mongo = v;                                                             // 1\n  }                                                                        // 1\n}, 2);                                                                     // 1\nmodule.watch(require(\"./main.html\"));                                      // 1\nemployee_filtered_list = new ReactiveVar([]);                              // 6\nemployee_selected = new ReactiveVar([]);                                   // 7\n                                                                           //\nif (Meteor.isClient) {                                                     // 12\n  Employees = new Mongo.Collection('employees');                           // 13\n  Skills = new Mongo.Collection('skills');                                 // 14\n  Template.resource_list.onCreated(function () {                           // 16\n    Meteor.subscribe('employees.skills');                                  // 17\n  });                                                                      // 18\n  Template.resource_list.helpers({                                         // 20\n    getEmployees: function () {                                            // 21\n      Meteor.subscribe('employees.bySkill', employee_filtered_list.get());\n      return Employees.find();                                             // 23\n    }                                                                      // 24\n  });                                                                      // 20\n  Template.resource_list.events({                                          // 27\n    'click .employee_row': function (event) {                              // 28\n      //console.log(this);                                                 // 29\n      $('.employee_row').removeClass('employee_selected');                 // 30\n      $(event.currentTarget).addClass('employee_selected');                // 31\n      employee_selected.set(this);                                         // 32\n    }                                                                      // 33\n  });                                                                      // 27\n  Template.resource_filter.helpers({                                       // 36\n    getSkills: function () {                                               // 37\n      return Skills.find();                                                // 38\n    }                                                                      // 39\n  }); //Event for when the employee_filter form is submitted.              // 36\n                                                                           //\n  Template.resource_filter.events({                                        // 43\n    'submit .employee_filter': function (event) {                          // 44\n      event.preventDefault();                                              // 45\n      var filterList = [];                                                 // 46\n      event.target.skill_box.forEach(function (skill) {                    // 47\n        if (skill.checked == true) {                                       // 48\n          filterList.push(skill.value);                                    // 49\n        }                                                                  // 50\n      });                                                                  // 51\n      employee_filtered_list.set(filterList);                              // 52\n    }                                                                      // 54\n  });                                                                      // 43\n  Template.resource_display.helpers({                                      // 57\n    display_employee_details: function () {                                // 58\n      console.log(employee_selected.get());                                // 59\n                                                                           //\n      if (employee_filtered_list.get() == []) {                            // 60\n        return [];                                                         // 61\n      }                                                                    // 62\n                                                                           //\n      return employee_selected.get();                                      // 63\n    }                                                                      // 64\n  });                                                                      // 57\n}                                                                          // 67\n/////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\",\n    \".css\"\n  ]\n});\nrequire(\"./client/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["client/main.js"],"names":["Template","module","watch","require","v","ReactiveVar","Mongo","employee_filtered_list","employee_selected","Meteor","isClient","Employees","Collection","Skills","resource_list","onCreated","subscribe","helpers","getEmployees","get","find","events","event","$","removeClass","currentTarget","addClass","set","resource_filter","getSkills","preventDefault","filterList","target","skill_box","forEach","skill","checked","push","value","resource_display","display_employee_details","console","log"],"mappings":";;;;;;;;AAAA,IAAIA,iBAAJ;AAAaC,OAAOC,KAAP,CAAaC,QAAQ,mBAAR,CAAb,EAA0C;AAACH,UAAD,YAAUI,CAAV,EAAY;AAACJ,eAASI,CAAT;AAAW;AAAxB,CAA1C,EAAoE,CAApE;AAAuE,IAAIC,oBAAJ;AAAgBJ,OAAOC,KAAP,CAAaC,QAAQ,qBAAR,CAAb,EAA4C;AAACE,aAAD,YAAaD,CAAb,EAAe;AAACC,kBAAYD,CAAZ;AAAc;AAA9B,CAA5C,EAA4E,CAA5E;AAA+E,IAAIE,cAAJ;AAAUL,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACG,OAAD,YAAOF,CAAP,EAAS;AAACE,YAAMF,CAAN;AAAQ;AAAlB,CAArC,EAAyD,CAAzD;AAA4DH,OAAOC,KAAP,CAAaC,QAAQ,aAAR,CAAb;AAKzPI,yBAAyB,IAAIF,WAAJ,CAAgB,EAAhB,CAAzB;AACAG,oBAAoB,IAAIH,WAAJ,CAAgB,EAAhB,CAApB;;AAKA,IAAGI,OAAOC,QAAV,EAAoB;AAClBC,cAAY,IAAIL,MAAMM,UAAV,CAAqB,WAArB,CAAZ;AACAC,WAAS,IAAIP,MAAMM,UAAV,CAAqB,QAArB,CAAT;AAEAZ,WAASc,aAAT,CAAuBC,SAAvB,CAAkC,YAAW;AACzCN,WAAOO,SAAP,CAAiB,kBAAjB;AACH,GAFD;AAIAhB,WAASc,aAAT,CAAuBG,OAAvB,CAA+B;AAC7BC,kBAAc,YAAU;AACtBT,aAAOO,SAAP,CAAiB,mBAAjB,EAAsCT,uBAAuBY,GAAvB,EAAtC;AACA,aAAOR,UAAUS,IAAV,EAAP;AACD;AAJ4B,GAA/B;AAOApB,WAASc,aAAT,CAAuBO,MAAvB,CAA8B;AAC5B,2BAAuB,UAASC,KAAT,EAAe;AACpC;AACAC,QAAE,eAAF,EAAmBC,WAAnB,CAA+B,mBAA/B;AACAD,QAAED,MAAMG,aAAR,EAAuBC,QAAvB,CAAgC,mBAAhC;AACAlB,wBAAkBmB,GAAlB,CAAsB,IAAtB;AACC;AANyB,GAA9B;AASA3B,WAAS4B,eAAT,CAAyBX,OAAzB,CAAiC;AAC/BY,eAAW,YAAU;AACnB,aAAOhB,OAAOO,IAAP,EAAP;AACD;AAH8B,GAAjC,EAxBkB,CA8BlB;;AACApB,WAAS4B,eAAT,CAAyBP,MAAzB,CAAgC;AAC9B,+BAA2B,UAASC,KAAT,EAAe;AACxCA,YAAMQ,cAAN;AACA,UAAIC,aAAa,EAAjB;AACAT,YAAMU,MAAN,CAAaC,SAAb,CAAuBC,OAAvB,CAA+B,UAASC,KAAT,EAAgB;AAC7C,YAAGA,MAAMC,OAAN,IAAiB,IAApB,EAAyB;AACvBL,qBAAWM,IAAX,CAAgBF,MAAMG,KAAtB;AACD;AACF,OAJD;AAKA/B,6BAAuBoB,GAAvB,CAA2BI,UAA3B;AAEC;AAX2B,GAAhC;AAcE/B,WAASuC,gBAAT,CAA0BtB,OAA1B,CAAkC;AAChCuB,8BAA0B,YAAU;AAClCC,cAAQC,GAAR,CAAYlC,kBAAkBW,GAAlB,EAAZ;;AACA,UAAGZ,uBAAuBY,GAAvB,MAAgC,EAAnC,EAAsC;AACpC,eAAO,EAAP;AACD;;AACD,aAAOX,kBAAkBW,GAAlB,EAAP;AACC;AAP6B,GAAlC;AAUH,gF","file":"/app.js","sourcesContent":["import { Template } from 'meteor/templating';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { Mongo } from 'meteor/mongo';\n\nimport './main.html';\nemployee_filtered_list = new ReactiveVar([]);\nemployee_selected = new ReactiveVar([]);\n\n\n\n\nif(Meteor.isClient) {\n  Employees = new Mongo.Collection('employees');\n  Skills = new Mongo.Collection('skills');\n\n  Template.resource_list.onCreated( function() {\n      Meteor.subscribe('employees.skills');\n  });\n\n  Template.resource_list.helpers({\n    getEmployees: function(){\n      Meteor.subscribe('employees.bySkill', employee_filtered_list.get());\n      return Employees.find();\n    }\n  });\n\n  Template.resource_list.events({\n    'click .employee_row': function(event){\n      //console.log(this);\n      $('.employee_row').removeClass('employee_selected');\n      $(event.currentTarget).addClass('employee_selected');\n      employee_selected.set(this)\n      }\n    });\n\n  Template.resource_filter.helpers({\n    getSkills: function(){\n      return Skills.find();\n    }\n  });\n\n  //Event for when the employee_filter form is submitted.\n  Template.resource_filter.events({\n    'submit .employee_filter': function(event){\n      event.preventDefault();\n      var filterList = [];\n      event.target.skill_box.forEach(function(skill) {\n        if(skill.checked == true){\n          filterList.push(skill.value);\n        }\n      });\n      employee_filtered_list.set(filterList);\n\n      }\n    });\n\n    Template.resource_display.helpers({\n      display_employee_details: function(){\n        console.log(employee_selected.get());\n        if(employee_filtered_list.get() == []){\n          return [];\n        }\n        return employee_selected.get();\n        }\n      });\n\n}\n"]}}]