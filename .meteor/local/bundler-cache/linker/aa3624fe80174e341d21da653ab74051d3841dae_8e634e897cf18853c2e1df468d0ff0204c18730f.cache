[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nWebAppInternals = Package.webapp.WebAppInternals;\nmain = Package.webapp.main;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\nSymbol = Package['ecmascript-runtime-server'].Symbol;\nMap = Package['ecmascript-runtime-server'].Map;\nSet = Package['ecmascript-runtime-server'].Set;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"server\":{\"resource_calls\":{\"resource_calls.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// server/resource_calls/resource_calls.js                           //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nvar Meteor = void 0;                                                 // 1\nmodule.watch(require(\"meteor/meteor\"), {                             // 1\n  Meteor: function (v) {                                             // 1\n    Meteor = v;                                                      // 1\n  }                                                                  // 1\n}, 0);                                                               // 1\n                                                                     //\nif (Meteor.isServer) {                                               // 3\n  Employees = new Mongo.Collection('employees');                     // 4\n  Skills = new Mongo.Collection('skills'); // Publishes the existing skills collection to the client side subcscriotion.\n                                                                     //\n  Meteor.publish('employees.skills', function () {                   // 10\n    return Skills.find();                                            // 11\n  });                                                                // 12\n  Meteor.publish('employees.bySkill', function (skill_list) {        // 14\n    //console.log(skill_list.length);                                // 16\n    if (skill_list.length == 0) {                                    // 17\n      return [];                                                     // 18\n    }                                                                // 19\n                                                                     //\n    return Employees.find({                                          // 20\n      \"skills\": {                                                    // 20\n        \"$elemMatch\": {                                              // 20\n          \"name\": {                                                  // 20\n            $in: skill_list                                          // 20\n          }                                                          // 20\n        }                                                            // 20\n      }                                                              // 20\n    });                                                              // 20\n    ;                                                                // 20\n  });                                                                // 21\n}                                                                    // 22\n///////////////////////////////////////////////////////////////////////\n\n}},\"main.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// server/main.js                                                    //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nvar Meteor = void 0;                                                 // 1\nmodule.watch(require(\"meteor/meteor\"), {                             // 1\n  Meteor: function (v) {                                             // 1\n    Meteor = v;                                                      // 1\n  }                                                                  // 1\n}, 0);                                                               // 1\nMeteor.startup(function () {// code to run on server at startup      // 5\n});                                                                  // 7\n///////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\nrequire(\"./server/resource_calls/resource_calls.js\");\nrequire(\"./server/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["server/resource_calls/resource_calls.js","server/main.js"],"names":["Meteor","module","watch","require","v","isServer","Employees","Mongo","Collection","Skills","publish","find","skill_list","length","$in","startup"],"mappings":";;;;;;;;AAAA,IAAIA,eAAJ;AAAWC,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACH,QAAD,YAAQI,CAAR,EAAU;AAACJ,aAAOI,CAAP;AAAS;AAApB,CAAtC,EAA4D,CAA5D;;AAEX,IAAGJ,OAAOK,QAAV,EAAmB;AACjBC,cAAY,IAAIC,MAAMC,UAAV,CAAqB,WAArB,CAAZ;AACAC,WAAS,IAAIF,MAAMC,UAAV,CAAqB,QAArB,CAAT,CAFiB,CAMjB;;AACAR,SAAOU,OAAP,CAAe,kBAAf,EAAmC,YAAU;AAC3C,WAAOD,OAAOE,IAAP,EAAP;AACD,GAFD;AAIAX,SAAOU,OAAP,CAAe,mBAAf,EAAoC,UAASE,UAAT,EAAoB;AAEtD;AACA,QAAGA,WAAWC,MAAX,IAAqB,CAAxB,EAA0B;AACxB,aAAO,EAAP;AACD;;AACD,WAAOP,UAAUK,IAAV,CAAe;AAAC,gBAAW;AAAC,sBAAe;AAAE,kBAAQ;AAACG,iBAAKF;AAAN;AAAV;AAAhB;AAAZ,KAAf,CAAP;AAAkF;AACnF,GAPD;AAQD,0E;;;;;;;;;;;ACrBD,IAAIZ,eAAJ;AAAWC,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACH,QAAD,YAAQI,CAAR,EAAU;AAACJ,aAAOI,CAAP;AAAS;AAApB,CAAtC,EAA4D,CAA5D;AAIXJ,OAAOe,OAAP,CAAe,YAAM,CACnB;AACD,CAFD,wE","file":"/app.js","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nif(Meteor.isServer){\n  Employees = new Mongo.Collection('employees');\n  Skills = new Mongo.Collection('skills');\n\n  \n\n  // Publishes the existing skills collection to the client side subcscriotion.\n  Meteor.publish('employees.skills', function(){\n    return Skills.find();\n  });\n\n  Meteor.publish('employees.bySkill', function(skill_list){\n\n    //console.log(skill_list.length);\n    if(skill_list.length == 0){\n      return [];\n    }\n    return Employees.find({\"skills\" : {\"$elemMatch\" : { \"name\": {$in: skill_list}}}});;\n  });\n}\n","import { Meteor } from 'meteor/meteor';\n\n\n\nMeteor.startup(() => {\n  // code to run on server at startup\n});\n"]}}]